#ifndef __CAN_APP_H
#define __CAN_APP_H

#include "stm32f10x.h"

#define CAN_UPLOAD_BUFFER_SIZE	CAN_RX_BUFFER_SIZE
#define CAN_FILTER_ID_NUM	      8//支持8个软件ID滤波

typedef struct
{
	u32 GatherTime;//采集时间间隔，单位ms，0表示不采集
	u8 channel;//通道号，0为CAN1，1为CAN2
	u8 FrameType;//帧类型，0为标准帧，1为扩展帧
	u8 GatherMode;//采集方式，0为原始数据，1为计算值
	u32 Id;//CAN ID
	
}CAN_FILTER_STRUCT;

/**************************************************************************
//函数名：Can_TimeTask
//功能：实现CAN数据上报功能
//输入：无
//输出：无
//返回值：无
//备注：CAN数据上报定时任务，50ms调度1次，任务调度器需要调用此函数。
//CAN接口每收到一帧数据先判断是否需要软件滤除，若不滤除则放入接收队列，
//当队列未读取的数据长度超过（CAN_RX_BUFFER_SIZE-200）字节或者上传时间间隔到时，
//上传给平台；当上传时间间隔设置为0时表示不上传。
***************************************************************************/
FunctionalState Can_TimeTask(void);
/**************************************************************************
//函数名：Can_UpdatePram
//功能：更新CAN相关变量
//输入：无
//输出：无
//返回值：无
//备注：目前只使用了CAN1
***************************************************************************/
void Can_UpdatePram(void);
/**************************************************************************
//函数名：Can_SoftwareFilter
//功能：软件滤波
//输入：无
//输出：无
//返回值：1表示需要被滤除（过滤），0表示不需要滤除
//备注：通道号channel，0为CAN1，1为CAN2;帧类型FrameType，0为标准帧，1为扩展帧
***************************************************************************/
u8 Can_SoftwareFilter(u8 channel, u32 CanId, u8 FrameType);
#endif