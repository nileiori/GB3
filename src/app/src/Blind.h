#ifndef __BLIND_H
#define __BLIND_H

#include "stm32f10x.h"

#define BLIND_STATE_INIT 	0
#define BLIND_STATE_SEARCH 	1
#define BLIND_STATE_REPORT 	2
#define BLIND_STATE_WAIT 	3
#define BLIND_STATE_ERROR 	4 

#define BLIND_REPORT_DELAY_TIME  400//单位为50ms，20秒内没收到应答继续重发，最多重发10次，仍然没收到应答，暂停补报

typedef struct
{
	u8 State;//状态，0:初始化状态;1:查找搜索状态;2:盲区汇报状态;3:空闲状态;4:等待状态;5:错误状态
	u8 ErrorCount;//错误步数计数，自检盲区区域累计超过有3条盲区数据将会擦除整个盲区
	s16 StartSector;//盲区存储区域开始扇区
	s16 EndSector;//盲区存储区域结束扇区
	s16 OldestSector;//最老时间的扇区位置
	s16 OldestStep;//最老时间的步数位置
	u32 OldestTimeCount;//最老时间的那条位置信息所对应的GPS时间
	s16 SectorStep;//一个扇区的总步数	
	s16 ReportSector;//当前盲区上报的扇区位置
	s16 ReportStep;//当前盲区上报的步数位置
	u32 ReportTimeCount;//当前盲区上报的那条位置信息所对应的GPS时间
	u8 ReportSendNum;//当前包盲区上报发送次数，每发送1次加1，收到平台应答时清0，超过10次未收到应答，等待10分钟，然后再重发
	u8 SaveEnableFlag;//盲区记录使能标志,1为使能，0为禁止
	s16 SaveSector;//当前记录的扇区位置
	s16 SaveStep;//当前记录的步数位置
	u32 SaveTimeCount;//当前记录的那条位置信息所对应的GPS时间 
	s16 LastReportSector[20];//上一次扇区上报的扇区（实际应用时一次打包5条，检测时一次打包15-20条），收到平台应答时清0
	s16 LastReportStep[20];//上一次扇区上报的步数

}BLIND_STRUCT;

/**************************************************************************
//函数名：Blind_TimeTask
//功能：实现盲区补报功能
//输入：无
//输出：无
//返回值：无
//备注：盲区补报定时任务，50ms调度1次，任务调度器需要调用此函数。
//当在进行FTP升级时需要关闭该任务，因为盲区记录与固件远程升级共用一块存储区
//注意如果谁关闭了该任务，谁就要负责打开该任务，上电启动默认是打开的
***************************************************************************/
FunctionalState Blind_TimeTask(void);
/**************************************************************************
//函数名：Blind_Save
//功能：保存某通道的一条盲区数据（位置汇报数据）
//输入：通道号，盲区数据，数据长度
//输出：无
//返回值：0表示成功，1表示失败，参数不正确会返回失败
//备注：通道号只能为CHANNEL_SMS,CHANNEL_DATA_1,CHANNEL_DATA_2其中之一
***************************************************************************/
u8 Blind_Save(u8 channel, u8 *pBuffer, u8 length);
/**************************************************************************
//函数名：Blind_Erase
//功能：擦除某通道的所有存储扇区
//输入：通道号，只能为CHANNEL_SMS,CHANNEL_DATA_1,CHANNEL_DATA_2其中之一
//输出：无
//返回值：0表示成功，1表示失败，参数不正确会返回失败
//备注：要擦除所有的盲区数据，参数需为0xff，在下载远程升级固件之前需先擦除
//所有盲区区域，因为盲区存储区域与固件存储区域共用同一块flash空间
***************************************************************************/
u8 Blind_Erase(u8 channel);
/**************************************************************************
//函数名：Blind_StartReport
//功能：开始某个通道的盲区补报
//输入：通道号
//输出：无
//返回值：无
//备注：通道号只能为CHANNEL_SMS,CHANNEL_DATA_1,CHANNEL_DATA_2其中之一
***************************************************************************/
void Blind_StartReport(u8 channel);
/**************************************************************************
//函数名：Blind_ReportAck
//功能：盲区补报应答处理
//输入：通道号，只能为CHANNEL_SMS,CHANNEL_DATA_1,CHANNEL_DATA_2其中之一
//输出：无
//返回值：0表示成功，1表示失败，参数不正确会返回失败
//备注：收到盲区补报应答后需调用此函数
***************************************************************************/
u8 Blind_ReportAck(u8 channel);
/**************************************************************************
//函数名：Blind_GetLink2OpenFlag
//功能：获取第2个连接开启标志
//输入：无
//输出：无
//返回值：第2个连接开启标志
//备注：Link2OpenFlag为1表示开启了第2个连接，为0表示没有开启
***************************************************************************/
u8 Blind_GetLink2OpenFlag(void);
/**************************************************************************
//函数名：Blind_EnableLink1Save
//功能：使能连接1记录盲区
//输入：无
//输出：无
//返回值：无
//备注：
***************************************************************************/
void Blind_EnableLink1Save(void);
/**************************************************************************
//函数名：Blind_DisableLink1Save
//功能：禁止连接1记录盲区
//输入：无
//输出：无
//返回值：无
//备注：
***************************************************************************/
void Blind_DisableLink1Save(void);
/**************************************************************************
//函数名：Blind_EnableLink2Save
//功能：使能连接2记录盲区
//输入：无
//输出：无
//返回值：无
//备注：
***************************************************************************/
void Blind_EnableLink2Save(void);
/**************************************************************************
//函数名：Blind_DisableLink2Save
//功能：禁止连接2记录盲区
//输入：无
//输出：无
//返回值：无
//备注：
***************************************************************************/
void Blind_DisableLink2Save(void);
/**************************************************************************
//函数名：Blind_CheckLog
//功能：检查盲区补报日志，并把日志打印到DB9串口，提醒数据是否有问题
//输入：无
//输出：无
//返回值：无
//备注：盲区补报日志文件名称固定为blind.bin
***************************************************************************/
void Blind_CheckLog(void);
#endif