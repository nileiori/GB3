<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\EGS701-III.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\EGS701-III.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Sat Jul 21 15:07:27 2018
<BR><P>
<H3>Maximum Stack Usage =       3932 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
RadioProtocol_MemoryIndex &rArr; MediaSearch_GetMediaIndexInformation &rArr; MediaSearch_Find &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[b0c]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[cf]">DMA2_Channel1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[cf]">DMA2_Channel1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6f]">A2OBD_TimeTask</a> from a2_obd.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[b0]">ADC1_2_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[70]">Acceleration_TimeTask</a> from acceleration.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[41]">Adc_CollectApp_TimeTask</a> from adc_tran_voltag.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[219]">AreaManage_ScanTask</a> from areamanage.o(.text) referenced from areamanage.o(.text)
 <LI><a href="#[21c]">AreaManage_StartScanTask</a> from areamanage.o(.text) referenced from areamanage.o(.text)
 <LI><a href="#[45]">AreaManage_TimeTask</a> from areamanage.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[222]">Area_ReadAndCheckParam</a> from areamanage.o(.text) referenced from areamanage.o(.text)
 <LI><a href="#[1f6]">Area_ScanRectArea</a> from areamanage.o(.text) referenced from areamanage.o(.text)
 <LI><a href="#[db]">Area_ScanRoundArea</a> from areamanage.o(.text) referenced 2 times from areamanage.o(.text)
 <LI><a href="#[3e]">BMA250E_TimeTask</a> from bma250e.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[55]">Blind_TimeTask</a> from blind.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[98]">BusFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b2]">CAN1_RX0_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b3]">CAN1_RX1_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b4]">CAN1_SCE_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b1]">CAN1_TX_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d7]">CAN2_RX0_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d8]">CAN2_RX1_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d9]">CAN2_SCE_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d6]">CAN2_TX_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[37]">Camera_TimeTask</a> from camera_app.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[65]">Can_TimeTask</a> from can_app.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[49]">Card_TimeTask</a> from card.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[74]">ChangeServer_EvTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[31]">Communication_TimeTask</a> from modem_app_com.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[48]">ControlOil_TimeTask</a> from oilcontrol.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[52]">Corner_TimeTask</a> from corner.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[781]">CurrentSystemLogout</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[a9]">DMA1_Channel1_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[aa]">DMA1_Channel2_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[ab]">DMA1_Channel3_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[ac]">DMA1_Channel4_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[ad]">DMA1_Channel5_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[ae]">DMA1_Channel6_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[af]">DMA1_Channel7_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[cf]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d0]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d1]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d2]">DMA2_Channel4_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d3]">DMA2_Channel5_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[9b]">DebugMon_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[6c]">DeepPlow_TimeTask</a> from deepplow.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[3c]">DelayTrigTimeTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[76]">Dialling_EvTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[35e]">EIExpand_PotocolResendData</a> from eiexpand.o(.text) referenced 2 times from eiexpand.o(.text)
 <LI><a href="#[d4]">ETH_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[d5]">ETH_WKUP_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[a4]">EXTI0_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[c6]">EXTI15_10_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[a5]">EXTI1_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[a6]">EXTI2_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[a7]">EXTI3_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[a8]">EXTI4_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b5]">EXTI9_5_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[ea]">EepromPram_DefaultSet</a> from eeprompram.o(.text) referenced from public.o(.text)
 <LI><a href="#[71]">EvNopHandleTask</a> from taskschedule.o(.text) referenced 6 times from taskschedule.o(.data)
 <LI><a href="#[78]">EvRing</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[79]">EvRingOver</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[a2]">FLASH_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[75]">FtpUpdata_EvTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[73]">GetAkey_EvTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[4c]">GnssRealData_TimeTask</a> from gnss_app.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[3a7]">Gnss_CheckAndBlindReport</a> from gnss_app.o(.text) referenced 2 times from gnss_app.o(.text)
 <LI><a href="#[3ae]">Gnss_CheckAndUploadData</a> from gnss_app.o(.text) referenced from gnss_app.o(.text)
 <LI><a href="#[3b7]">Gnss_CheckBlindArea</a> from gnss_app.o(.text) referenced from gnss_app.o(.text)
 <LI><a href="#[3b8]">Gnss_CheckBlindAreaStart</a> from gnss_app.o(.text) referenced from gnss_app.o(.text)
 <LI><a href="#[3c4]">Gnss_ReadParam</a> from gnss_app.o(.text) referenced from gnss_app.o(.text)
 <LI><a href="#[23c]">Gnss_StartBlindReport</a> from gnss_app.o(.text) referenced from gnss_app.o(.text)
 <LI><a href="#[3b6]">Gnss_StartCheckAndUploadData</a> from gnss_app.o(.text) referenced from gnss_app.o(.text)
 <LI><a href="#[35]">GpsMile_TimeTask</a> from milemeter.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[72]">Gps_EvTask</a> from gps_app.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[34]">Gps_TimeTask</a> from gps_app.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[96]">HardFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[39]">HeartBeat_TimeTask</a> from heartbeat.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[be]">I2C1_ER_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[bd]">I2C1_EV_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[c0]">I2C2_ER_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[bf]">I2C2_EV_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[fc]">IP1CancelModify</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[fe]">IP1SaveEyePlat</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[fd]">IP1SaveFreight</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7b1]">InformationDemandconfirm</a> from taskmenu.o(.text) referenced 2 times from taskmenu.o(.text)
 <LI><a href="#[33]">Io_TimeTask</a> from io.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[de]">JointechOiLCost_StateMachine</a> from jointechoil_protocol.o(.text) referenced from jointechoil_protocol.o(.text)
 <LI><a href="#[6a]">JointechOiLCost_TimeTask</a> from jointechoil_protocol.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[43]">KeyBoardAdc_TimeTask</a> from adc_key.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[53]">LZM_PublicTimerTask</a> from public.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[496]">LZM_TaskEmpty</a> from lzmsys.o(.text) referenced from lzmsys.o(.text)
 <LI><a href="#[7a]">Lcd_ShowText_EvTask</a> from lcd.o(.text) referenced 4 times from taskschedule.o(.data)
 <LI><a href="#[3f]">Link1Login_TimeTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[54]">Link2Login_TimeTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[771]">LoadDefaultParamter</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[66]">Lock1_TimeTask</a> from lock1.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[67]">Lock2_TimeTask</a> from lock2.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[46]">Media_TimeTask</a> from media.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[38]">Media_UploadTimeTask</a> from media.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[97]">MemManage_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[516]">Messege_PlatformReadDriverInfoData</a> from message.o(.text) referenced from message.o(.text)
 <LI><a href="#[9c9]">Modem_Debug_SocCall</a> from modem_debug.o(.text) referenced from modem_debug.o(.text)
 <LI><a href="#[9c8]">Modem_Debug_SocIP</a> from modem_debug.o(.text) referenced from modem_debug.o(.text)
 <LI><a href="#[11c]">Modem_Port_Call_LocIp</a> from modem_port.o(.text) referenced from modem_core.o(.text)
 <LI><a href="#[4b]">MultiCenterConnect_TimeTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[95]">NMI_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[e3]">NVIC_SystemReset</a> from navilcd.o(.text) referenced 4 times from navilcd.o(.text)
 <LI><a href="#[55a]">NaviLcdCommBusyForResendData</a> from navilcd.o(.text) referenced 3 times from navilcd.o(.text)
 <LI><a href="#[558]">NaviLcdCommBusyTimeOut</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[e1]">NaviLcdCommResponeTimeout</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[557]">NaviLcdCommSendEnd</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[555]">NaviLcdPowerOn</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[e5]">NaviLcdSendCmdQueryStatus</a> from navilcd.o(.text) referenced 4 times from navilcd.o(.text)
 <LI><a href="#[5dd]">NaviLcd_CheckACCStatus</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[576]">NaviLcd_DisposeDriverInfoAddInfo</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[595]">NaviLcd_DisposeHangUpPhoneStatus</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[5ad]">NaviLcd_DisposeRecvDataResponse</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[592]">NaviLcd_HangUpPhone</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[e4]">NaviLcd_RecvKeyTimeOut</a> from navilcd.o(.text) referenced 3 times from navilcd.o(.text)
 <LI><a href="#[5ac]">NaviLcd_SendWorkStatus</a> from navilcd.o(.text) referenced 4 times from navilcd.o(.text)
 <LI><a href="#[5de]">NaviLcd_StartCheckACCStatus</a> from navilcd.o(.text) referenced from navilcd.o(.text)
 <LI><a href="#[4a]">NaviLcd_TimerTask</a> from navilcd.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[93b]">Net_First_Call</a> from modem_app_first.o(.text) referenced from modem_app_first.o(.text)
 <LI><a href="#[93c]">Net_First_IP</a> from modem_app_first.o(.text) referenced from modem_app_first.o(.text)
 <LI><a href="#[961]">Net_Second_Call</a> from modem_app_second.o(.text) referenced from modem_app_second.o(.text)
 <LI><a href="#[962]">Net_Second_IP</a> from modem_app_second.o(.text) referenced from modem_app_second.o(.text)
 <LI><a href="#[9]">NullOperate</a> from radioprotocol.o(.text) referenced 12 times from radioprotocol.o(.data)
 <LI><a href="#[da]">OTG_FS_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[c8]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[787]">OpenFeatureCoefFlag</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[9f]">PVD_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[69]">PacketUpdate_TimeTask</a> from packetupdate.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[9c]">PendSV_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[625]">PhoneBook_HangUpCall</a> from phonebook.o(.text) referenced from phonebook.o(.text)
 <LI><a href="#[615]">Phone_CallBackPhone</a> from phone.o(.text) referenced 5 times from phone.o(.text)
 <LI><a href="#[611]">Phone_CheckMonthStartTime</a> from phone.o(.text) referenced from phone.o(.text)
 <LI><a href="#[612]">Phone_CheckTalkTime</a> from phone.o(.text) referenced from phone.o(.text)
 <LI><a href="#[610]">Phone_DisposeHangUp</a> from phone.o(.text) referenced 4 times from phone.o(.text)
 <LI><a href="#[4e]">Photo_TimeTask</a> from photo.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[656]">Polygon_ReadAndCheckParam</a> from polygon.o(.text) referenced from polygon.o(.text)
 <LI><a href="#[64a]">Polygon_ScanArea</a> from polygon.o(.text) referenced from polygon.o(.text)
 <LI><a href="#[654]">Polygon_ScanTask</a> from polygon.o(.text) referenced from polygon.o(.text)
 <LI><a href="#[655]">Polygon_StartScanTask</a> from polygon.o(.text) referenced from polygon.o(.text)
 <LI><a href="#[50]">Polygon_TimeTask</a> from polygon.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[a3]">RCC_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[c7]">RTCAlarm_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[a1]">RTC_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[32]">RadioProtocolParse_TimeTask</a> from radioprotocol.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[14]">RadioProtocol_AlarmConfirmManual</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[29]">RadioProtocol_CameraPhoto</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[1c]">RadioProtocol_CarControl</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[22]">RadioProtocol_DelPolygonArea</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[20]">RadioProtocol_DelRectangleArea</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[24]">RadioProtocol_DelRoad</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[1e]">RadioProtocol_DelRoundArea</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[11]">RadioProtocol_DownloadUpdatePacket</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[27]">RadioProtocol_DriverInformationUploadRequest</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[16]">RadioProtocol_EvenSet</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[18]">RadioProtocol_InformationOrderSet</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[19]">RadioProtocol_InformationService</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[2e]">RadioProtocol_JiutongPhoto</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[2a]">RadioProtocol_MemoryIndex</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[2b]">RadioProtocol_MemoryUpload</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[28]">RadioProtocol_MultiMediaUploadAck</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[2f]">RadioProtocol_OriginalDataDownTrans</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[12]">RadioProtocol_PositionSearch</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[e]">RadioProtocol_PramSearch</a> from radioprotocol.o(.text) referenced 4 times from radioprotocol.o(.data)
 <LI><a href="#[d]">RadioProtocol_PramSet</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[17]">RadioProtocol_QuestionDownload</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[25]">RadioProtocol_RecorderDataCollection</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[26]">RadioProtocol_RecorderPramSet</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[a]">RadioProtocol_ServerGeneralAck</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[30]">RadioProtocol_ServerRSA</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[21]">RadioProtocol_SetPolygonArea</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[1f]">RadioProtocol_SetRectangleArea</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[23]">RadioProtocol_SetRoad</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[1d]">RadioProtocol_SetRoundArea</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[2d]">RadioProtocol_SingleMemoryIndex</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[2c]">RadioProtocol_StartSoundRecord</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[1b]">RadioProtocol_TelephoneBookSet</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[1a]">RadioProtocol_TelephoneCallback</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[13]">RadioProtocol_TempPositionControl</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[10]">RadioProtocol_TerminalAttribute</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[f]">RadioProtocol_TerminalControl</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[c]">RadioProtocol_TerminalRegisterAck</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[15]">RadioProtocol_TextMessageDownload</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[b]">RadioProtocol_UploadFromBreak_Request</a> from radioprotocol.o(.text) referenced 2 times from radioprotocol.o(.data)
 <LI><a href="#[36]">Report_TimeTask</a> from report.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[94]">Reset_Handler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[3d]">Reset_TimeTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[eb]">Route_CheckScanTask</a> from route.o(.text) referenced 3 times from route.o(.text)
 <LI><a href="#[6f7]">Route_ReadAndCheckParam</a> from route.o(.text) referenced from route.o(.text)
 <LI><a href="#[6f5]">Route_ScanTask</a> from route.o(.text) referenced from route.o(.text)
 <LI><a href="#[6f6]">Route_StartScanTask</a> from route.o(.text) referenced from route.o(.text)
 <LI><a href="#[47]">Route_TimeTask</a> from route.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[c1]">SPI1_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[c2]">SPI2_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[ca]">SPI3_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[9a]">SVC_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[7df]">SaveCurSIMICcidNumberToE2Param</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[77]">SevDial_EvTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[72b]">SleepDeep_CheckForEnterStopMode</a> from sleepdeep.o(.text) referenced from sleepdeep.o(.text)
 <LI><a href="#[725]">SleepDeep_EnterStopMode</a> from sleepdeep.o(.text) referenced from sleepdeep.o(.text)
 <LI><a href="#[72a]">SleepDeep_ReportServerEnterStopMode</a> from sleepdeep.o(.text) referenced from sleepdeep.o(.text)
 <LI><a href="#[72d]">SleepDeep_StartScanTask</a> from sleepdeep.o(.text) referenced from sleepdeep.o(.text)
 <LI><a href="#[729]">SleepDeep_TerminalShutdown</a> from sleepdeep.o(.text) referenced from sleepdeep.o(.text)
 <LI><a href="#[4f]">SleepDeep_TimeTask</a> from sleepdeep.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[42]">Sleep_TimeTask</a> from sleep.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[56]">StatusAlarm_TimeTask</a> from statusalarm.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[9d]">SysTick_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[7e4]">SystemAutoShowQuestion</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[784]">SystemDebugFixTimeCancel</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[785]">SystemDebugFixTimeOk</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[783]">SystemDebugSetPosition</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[782]">SystemDebugSetPositionEx</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[a0]">TAMPER_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b6]">TIM1_BRK_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b9]">TIM1_CC_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b8]">TIM1_TRG_COM_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[b7]">TIM1_UP_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[ba]">TIM2_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[bb]">TIM3_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[bc]">TIM4_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[c9]">TIM5_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[cd]">TIM6_IRQHandler</a> from ptr_timer.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[ce]">TIM7_IRQHandler</a> from startup_stm32f10x_cl.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[802]">TTSApp_CheckExtTtsFlag</a> from ttsdevapp.o(.text) referenced 2 times from ttsdevapp.o(.text)
 <LI><a href="#[119]">TTSApp_CheckRDYFlag</a> from ttsdevapp.o(.text) referenced 2 times from ttsdevapp.o(.text)
 <LI><a href="#[7f5]">TTSApp_PackVoiceStrToSend</a> from ttsdevapp.o(.text) referenced from ttsdevapp.o(.text)
 <LI><a href="#[118]">TTSApp_TimeStatusTask</a> from ttsdevapp.o(.text) referenced 3 times from ttsdevapp.o(.text)
 <LI><a href="#[7e8]">TTSApp_TurnOffPower</a> from ttsdevapp.o(.text) referenced 6 times from ttsdevapp.o(.text)
 <LI><a href="#[4d]">TTS_TimeTask</a> from ttsdevapp.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[ff]">TaskGetPassword</a> from taskmenu.o(.text) referenced 2 times from taskmenu.o(.text)
 <LI><a href="#[111]">TaskInfoShowCarLoadStatus</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7a8]">TaskLcdBacklight</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[10b]">TaskMainInterfaceSelection</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[112]">TaskMenuDriveRecord</a> from taskmenu.o(.text) referenced 3 times from taskmenu.o(.text)
 <LI><a href="#[10d]">TaskMenuInfoServer</a> from taskmenu.o(.text) referenced 7 times from taskmenu.o(.text)
 <LI><a href="#[109]">TaskMenuLock1</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[10a]">TaskMenuLock2</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[e8]">TaskMenuMain</a> from taskmenu.o(.text) referenced 7 times from phonebook.o(.text)
 <LI><a href="#[44]">TaskMenuMessage_TimeTask</a> from lzmsys.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[e6]">TaskMenuPhone</a> from phonebook.o(.text) referenced 4 times from phonebook.o(.text)
 <LI><a href="#[e2]">TaskMenuPrint</a> from taskmenu.o(.text) referenced 2 times from navilcd.o(.text)
 <LI><a href="#[dd]">TaskMenuSystem</a> from taskmenu.o(.text) referenced 5 times from deepplow.o(.text)
 <LI><a href="#[ed]">TaskMenuSystemAdvanced</a> from taskmenu.o(.text) referenced 7 times from taskmenu.o(.text)
 <LI><a href="#[100]">TaskMenuSystemCarInfo</a> from taskmenu.o(.text) referenced 8 times from taskmenu.o(.text)
 <LI><a href="#[dc]">TaskMenuSystemDebug</a> from taskmenu.o(.text) referenced 9 times from deepplow.o(.text)
 <LI><a href="#[117]">TaskMenuSystemDebugTest</a> from taskmenu.o(.text) referenced 2 times from taskmenu.o(.text)
 <LI><a href="#[f7]">TaskMenuSystemManageServer</a> from taskmenu.o(.text) referenced 3 times from taskmenu.o(.text)
 <LI><a href="#[ee]">TaskMenuSystemParameter</a> from taskmenu.o(.text) referenced 6 times from taskmenu.o(.text)
 <LI><a href="#[f6]">TaskMenuSystemServer</a> from taskmenu.o(.text) referenced 7 times from taskmenu.o(.text)
 <LI><a href="#[ef]">TaskPublicMsgBox</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[ec]">TaskQueryPeripheralInform</a> from taskmenu.o(.text) referenced 3 times from taskmenu.o(.text)
 <LI><a href="#[7ca]">TaskShow15MinSpeed</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[116]">TaskShowAdjustTtsVolume</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[631]">TaskShowCallRecord</a> from phonebook.o(.text) referenced 2 times from phonebook.o(.text)
 <LI><a href="#[626]">TaskShowCallTalking</a> from phonebook.o(.text) referenced 2 times from phonebook.o(.text)
 <LI><a href="#[7d4]">TaskShowCarInfo</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[e7]">TaskShowDialing</a> from phonebook.o(.text) referenced 2 times from phonebook.o(.text)
 <LI><a href="#[7b7]">TaskShowDisplayText</a> from taskmenu.o(.text) referenced 3 times from taskmenu.o(.text)
 <LI><a href="#[113]">TaskShowDriveMile</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7d1]">TaskShowDriverInfo</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[10f]">TaskShowEventReport</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7c0]">TaskShowInfoService</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[110]">TaskShowInformationDemand</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[df]">TaskShowLogo</a> from taskmenu.o(.text) referenced 3 times from lzmsys.o(.text)
 <LI><a href="#[e0]">TaskShowMainInterface</a> from taskmenu.o(.text) referenced 12 times from lzmsys.o(.text)
 <LI><a href="#[62e]">TaskShowMakeNewDial</a> from phonebook.o(.text) referenced from phonebook.o(.text)
 <LI><a href="#[629]">TaskShowNewCallPhone</a> from phonebook.o(.text) referenced from phonebook.o(.text)
 <LI><a href="#[633]">TaskShowPhoneBook</a> from phonebook.o(.text) referenced 2 times from phonebook.o(.text)
 <LI><a href="#[114]">TaskShowProductInfo</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7bd]">TaskShowQuestionList</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[10e]">TaskShowQuestionResponse</a> from taskmenu.o(.text) referenced 4 times from taskmenu.o(.text)
 <LI><a href="#[115]">TaskShowSIMCardNumber</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7c6]">TaskShowTextInfo</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7ce]">TaskShowTiredDriveRecord</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[767]">TaskSystemCANInformCollector</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[76c]">TaskSystemCameraInfo</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[78d]">TaskSystemDebugCurrentReportMode</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[786]">TaskSystemDebugFixTime</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[790]">TaskSystemDebugIOOut</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[780]">TaskSystemDebugSetPassWord</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[793]">TaskSystemDebugShowIOstatus</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[f4]">TaskSystemDeepBaseCalib</a> from deepplow.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[10c]">TaskSystemDeepBaseSet</a> from deepplow.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[f3]">TaskSystemDeepMaxCalib</a> from deepplow.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[f2]">TaskSystemDeepMinCalib</a> from deepplow.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[766]">TaskSystemNavationScr</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[768]">TaskSystemOilCollector</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[108]">TaskSystemOpenAccountEncrypt</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[778]">TaskSystemParamDoorLevelSelect</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[777]">TaskSystemParamHornLevelSelect</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[776]">TaskSystemParamSetCDMASleep</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[f0]">TaskSystemParamSetGNSSWordMode</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[77f]">TaskSystemParamSetPhoneNumber</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[77a]">TaskSystemParamSetSpeedParam</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7a3]">TaskSystemQueryServerParameter</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[79a]">TaskSystemServerSetAPN</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[796]">TaskSystemServerSetBackUpDomainName</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[79b]">TaskSystemServerSetBackUpIP</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[f9]">TaskSystemServerSetBackUpIP2</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[79c]">TaskSystemServerSetIP</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[f8]">TaskSystemServerSetIP2</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[797]">TaskSystemServerSetMainDomainName</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[799]">TaskSystemServerSetTCPPort</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[fa]">TaskSystemServerSetTCPPort2</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[798]">TaskSystemServerSetUDPPort</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[fb]">TaskSystemServerSetUDPPort2</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[106]">TaskSystemSetCarCityID</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[104]">TaskSystemSetCarFeatureCoef</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[107]">TaskSystemSetCarOwnerPhone</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[101]">TaskSystemSetCarPlateColor</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7a7]">TaskSystemSetCarPlateNumber</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[102]">TaskSystemSetCarPlateType</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[105]">TaskSystemSetCarProvinceID</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[103]">TaskSystemSetCarTotalMile</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[7a5]">TaskSystemSetCarVinNumber</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[775]">TaskSystemShowTerminalID</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[769]">TaskSystemTemperatureCollector</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[f5]">TaskSystemTurnSpeedPulseNum</a> from turnspeed.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[76a]">TaskSystemWeightCollector</a> from taskmenu.o(.text) referenced from taskmenu.o(.text)
 <LI><a href="#[6b]">Temperature_TimeTask</a> from temperature.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[3b]">TimerNopHandleTask</a> from taskschedule.o(.text) referenced 6 times from taskschedule.o(.data)
 <LI><a href="#[6d]">TurnSpeed_TimeTask</a> from turnspeed.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[cb]">UART4_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[cc]">UART5_IRQHandler</a> from modem_uart.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[c3]">USART1_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[c4]">USART2_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[c5]">USART3_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[7c]">USBH_Connected</a> from usbh_core.o(.text) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[7d]">USBH_Disconnected</a> from usbh_core.o(.text) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[80]">USBH_MSC_ClassRequest</a> from usbh_msc_core.o(.text) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[81]">USBH_MSC_Handle</a> from usbh_msc_core.o(.text) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[7f]">USBH_MSC_InterfaceDeInit</a> from usbh_msc_core.o(.text) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[7e]">USBH_MSC_InterfaceInit</a> from usbh_msc_core.o(.text) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[7b]">USBH_SOF</a> from usbh_core.o(.text) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[8b]">USBH_USR_Configuration_DescAvailable</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[83]">USBH_USR_DeInit</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[8a]">USBH_USR_DeviceAddressAssigned</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[84]">USBH_USR_DeviceAttached</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[86]">USBH_USR_DeviceDisconnected</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[92]">USBH_USR_DeviceNotSupported</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[88]">USBH_USR_DeviceSpeedDetected</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[89]">USBH_USR_Device_DescAvailable</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[8f]">USBH_USR_EnumerationDone</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[82]">USBH_USR_Init</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[91]">USBH_USR_MSC_Application</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[8c]">USBH_USR_Manufacturer_String</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[87]">USBH_USR_OverCurrentDetected</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[8d]">USBH_USR_Product_String</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[85]">USBH_USR_ResetDevice</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[8e]">USBH_USR_SerialNum_String</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[93]">USBH_USR_UnrecoveredError</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[90]">USBH_USR_UserInput</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[88d]">USB_ClearUsbUpdataFlag</a> from usb_app.o(.text) referenced from usb_app.o(.text)
 <LI><a href="#[51]">Updata_SendResultNoteTimeTask</a> from other.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[99]">UsageFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[3a]">Usart3_TimeTask</a> from camera_driver.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[40]">Usb_AppTimeTask</a> from usb_app.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[5e]">VDRCard_TimeTask</a> from vdr_card.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[62]">VDRCoefficient_TimeTask</a> from vdr_coefficient.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[58]">VDRData_TimeTask</a> from vdr_data.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[5c]">VDRDoubt_TimeTask</a> from vdr_doubt.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[68]">VDRGprs_ResendTimeTask</a> from vdr_gprs.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[63]">VDRGprs_TimeTask</a> from vdr_gprs.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[64]">VDRLog_TimeTask</a> from vdr_log.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[61]">VDROverspeed_TimeTask</a> from vdr_overspeed.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[5d]">VDROvertime_TimeTask</a> from vdr_overtime.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[5a]">VDRPosition_TimeTask</a> from vdr_position.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[5f]">VDRPower_TimeTask</a> from vdr_power.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[59]">VDRPulse_TimeTask</a> from vdr_pulse.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[60]">VDRSpeedStatus_TimeTask</a> from vdr_speedstatus.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[5b]">VDRSpeed_TimeTask</a> from vdr_speed.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[57]">VDRUsart_TimeTask</a> from vdr_usart.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[6e]">Vss_TimeTask</a> from vss.o(.text) referenced 2 times from taskschedule.o(.data)
 <LI><a href="#[9e]">WWDG_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_cl.o(RESET)
 <LI><a href="#[126]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_cl.o(.text)
 <LI><a href="#[11f]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[122]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[124]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[123]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[121]">_snputc</a> from _snputc.o(.text) referenced from vsnprintf.o(.text)
 <LI><a href="#[120]">_sputc</a> from _sputc.o(.text) referenced 2 times from vsprintf.o(.text)
 <LI><a href="#[11d]">is_too_hot</a> from ptr_temperature.o(.text) referenced from printer.o(.text)
 <LI><a href="#[125]">isspace</a> from isspace.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[11e]">tp_paper_detect</a> from ptr_stepmotor_ctrl.o(.text) referenced from printer.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[126]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[127]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[129]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[b55]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b56]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b57]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[b58]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[b59]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[12a]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[ae8]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ae6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[12c]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[12e]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[130]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[131]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[132]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[b5a]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[134]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[136]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[137]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[138]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[13a]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[13c]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[13e]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[13f]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[140]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[142]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[b5b]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[144]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[146]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[148]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[14a]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[b5c]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[156]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b5d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[14c]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[b5e]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[b5f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[14e]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[b60]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[b61]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[b62]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[150]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[b63]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[b64]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[151]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[b65]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b66]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b67]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[b68]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b69]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[b6a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[b6b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[b6c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[b6d]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[b6e]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[b6f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[b70]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[b71]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[15b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[b72]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[b73]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[b74]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[b75]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[b76]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[b77]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[b78]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[128]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[b79]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[153]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[155]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b7a]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[157]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 2572 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; PeripheralInit &rArr; Media_FolderCheck &rArr; Media_SignDelFlag &rArr; Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b7b]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[b14]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[15a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b7c]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[15c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[15e]"></a>A2OBD_Protocol_Paramter</STRONG> (Thumb, 334 bytes, Stack size 16 bytes, a2_obd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = A2OBD_Protocol_Paramter &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_WriteBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_DisposeFunctionProtocol
</UL>

<P><STRONG><a name="[b7d]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[b7e]"></a>A2OBD_ReadAlarmBit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, a2_obd.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>A2OBD_WriteAlarmBit</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, a2_obd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Alarm_Proce
</UL>

<P><STRONG><a name="[6be]"></a>ThreeEmerInfo</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, a2_obd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
</UL>

<P><STRONG><a name="[160]"></a>A2OBD_RadioProtocolOriginalDataUpTrans</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, a2_obd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832 + Unknown Stack Size
<LI>Call Chain = A2OBD_RadioProtocolOriginalDataUpTrans &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Data
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Alarm_Proce
</UL>

<P><STRONG><a name="[163]"></a>A2OBD_SentCmd</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, a2_obd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = A2OBD_SentCmd &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetXorVerify
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_WriteBuff
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_TimeTask
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Data
</UL>

<P><STRONG><a name="[165]"></a>A2OBD_Alarm_Proce</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, a2_obd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1864 + Unknown Stack Size
<LI>Call Chain = A2OBD_Alarm_Proce &rArr; A2OBD_RadioProtocolOriginalDataUpTrans &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformationReport
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_RadioProtocolOriginalDataUpTrans
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Data
</UL>

<P><STRONG><a name="[169]"></a>A2OBD_Data</STRONG> (Thumb, 480 bytes, Stack size 24 bytes, a2_obd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = A2OBD_Data &rArr; A2OBD_Alarm_Proce &rArr; A2OBD_RadioProtocolOriginalDataUpTrans &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Alarm_Proce
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_SentCmd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_RadioProtocolOriginalDataUpTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_UartDataProtocolParse
</UL>

<P><STRONG><a name="[16a]"></a>A2OBD_UartDataProtocolParse</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, a2_obd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = A2OBD_UartDataProtocolParse &rArr; A2OBD_Data &rArr; A2OBD_Alarm_Proce &rArr; A2OBD_RadioProtocolOriginalDataUpTrans &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetXorVerify
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCommProtocolParse
</UL>

<P><STRONG><a name="[6f]"></a>A2OBD_TimeTask</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, a2_obd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = A2OBD_TimeTask &rArr; A2OBD_SentCmd &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSelfDefine2Bit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_SentCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[b7f]"></a>CleanInitFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, acceleration.o(.text), UNUSED)

<P><STRONG><a name="[174]"></a>ThreeEmerAlarmBit</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, acceleration.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_slowdwn_check
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_acce_check
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Clear_Report
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Occur_Report
</UL>

<P><STRONG><a name="[173]"></a>ThreeEmerCleckAlarmBit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, acceleration.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Clear_Report
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Occur_Report
</UL>

<P><STRONG><a name="[16e]"></a>Acceleration_8900Send</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, acceleration.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolSendData
</UL>

<P><STRONG><a name="[5fe]"></a>Set_Emer_Threshold</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_Emer_Threshold
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_Turn_DisposeRadioProtocol
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[177]"></a>Read_Emer_Threshold</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, acceleration.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_slowdwn_check
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_acce_check
</UL>

<P><STRONG><a name="[170]"></a>Get_Speed</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Get_Speed &rArr; VDRSpeed_GetCurSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Turn_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_slowdwn_check
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_acce_check
</UL>

<P><STRONG><a name="[176]"></a>Emer_acce_check</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832 + Unknown Stack Size
<LI>Call Chain = Emer_acce_check &rArr; Emer_Acce_Clear_Report &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Speed
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Emer_Threshold
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreeEmerAlarmBit
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Clear_Report
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Occur_Report
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_TimeTask
</UL>

<P><STRONG><a name="[17b]"></a>Emer_slowdwn_check</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = Emer_slowdwn_check &rArr; Emer_Acce_Clear_Report &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Speed
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Emer_Threshold
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreeEmerAlarmBit
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Clear_Report
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Occur_Report
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_TimeTask
</UL>

<P><STRONG><a name="[17c]"></a>Acceleration_Init</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Acceleration_Init &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_TimeTask
</UL>

<P><STRONG><a name="[17f]"></a>Emer_Turn_check</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832 + Unknown Stack Size
<LI>Call Chain = Emer_Turn_check &rArr; Emer_Acce_Clear_Report &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadCourse
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Speed
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Clear_Report
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Occur_Report
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_TimeTask
</UL>

<P><STRONG><a name="[6bd]"></a>Acceleration_PosEx</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Acceleration_PosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
</UL>

<P><STRONG><a name="[70]"></a>Acceleration_TimeTask</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = Acceleration_TimeTask &rArr; Emer_Turn_check &rArr; Emer_Acce_Clear_Report &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Turn_check
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_slowdwn_check
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_acce_check
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Clear_Report
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[19a]"></a>Adc_Delay_uS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue_two
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
</UL>

<P><STRONG><a name="[182]"></a>Ad_Config</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Ad_Config &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Init
</UL>

<P><STRONG><a name="[18e]"></a>Ad_Gpio_Config</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Ad_Gpio_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Init
</UL>

<P><STRONG><a name="[191]"></a>Ad_Dma_Config</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Ad_Dma_Config &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Init
</UL>

<P><STRONG><a name="[195]"></a>Ad_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Ad_Init &rArr; Ad_Dma_Config &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Dma_Config
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Gpio_Config
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[1a0]"></a>Ad_GetValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_CollectApp_TimeTask
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoardAdc_TimeTask
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_PowerOnDetectMainPower
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectLoad
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectMainPower
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl_task
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_GetCurPowerValue
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[ac2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_detect_tick
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_too_hot
<LI><a href="#[a66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_GetStatus
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
<LI><a href="#[ad2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computer_temperature
</UL>

<P><STRONG><a name="[197]"></a>DriveAdc_init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITConfig
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Delay_uS
</UL>

<P><STRONG><a name="[19b]"></a>Ad_GetValue_two</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Delay_uS
</UL>

<P><STRONG><a name="[43]"></a>KeyBoardAdc_TimeTask</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, adc_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = KeyBoardAdc_TimeTask
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_GetKeyValue
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[4a1]"></a>KeyValue_Read</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, adc_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KeyHandler
</UL>

<P><STRONG><a name="[b80]"></a>GetKeyV</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, adc_key.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>Adc_CollectApp_TimeTask</STRONG> (Thumb, 488 bytes, Stack size 8 bytes, adc_tran_voltag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Adc_CollectApp_TimeTask &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[b81]"></a>Adc_ExternInputVoltage_1_Read</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc_tran_voltag.o(.text), UNUSED)

<P><STRONG><a name="[b82]"></a>Adc_ExternInputVoltage_2_Read</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc_tran_voltag.o(.text), UNUSED)

<P><STRONG><a name="[b83]"></a>Adc_MainPower_Readl</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc_tran_voltag.o(.text), UNUSED)

<P><STRONG><a name="[b84]"></a>Adc_BatteryPower_Readl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, adc_tran_voltag.o(.text), UNUSED)

<P><STRONG><a name="[1a2]"></a>Adc_OutputDriver_Read</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc_tran_voltag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_CheckDriverCurrentOver
</UL>

<P><STRONG><a name="[1a1]"></a>Adc_CheckDriverCurrentOver</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, adc_tran_voltag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_OutputDriver_Read
</UL>

<P><STRONG><a name="[b85]"></a>Adc_MicInput_Read</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, adc_tran_voltag.o(.text), UNUSED)

<P><STRONG><a name="[19f]"></a>Adc_GetKeyValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, adc_tran_voltag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBoardAdc_TimeTask
</UL>

<P><STRONG><a name="[b86]"></a>Adc_VoltagePrinterDriver_Read</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, adc_tran_voltag.o(.text), UNUSED)

<P><STRONG><a name="[b87]"></a>Adc_PrinterTemprature_Read</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, adc_tran_voltag.o(.text), UNUSED)

<P><STRONG><a name="[1a3]"></a>CalDotDotMile</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, areamanage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetPointDistance
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[1a6]"></a>Area_GetCurSpeed</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Area_GetCurSpeed &rArr; VDRSpeed_GetCurSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckScanTask
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckGpsDataChange
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckScanTask
</UL>

<P><STRONG><a name="[1d7]"></a>Area_TestRectAreaParameterInitialize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, areamanage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveOutRectArea
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaResetParam
</UL>

<P><STRONG><a name="[1f7]"></a>Area_SetTestRectAreaParameter</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, areamanage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
</UL>

<P><STRONG><a name="[1a9]"></a>ComparePos</STRONG> (Thumb, 116 bytes, Stack size 28 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ComparePos
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_IsInRectArea
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanTestSmallRectArea
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRouteAreaTask
</UL>

<P><STRONG><a name="[1a8]"></a>Area_ScanTestSmallRectArea</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Area_ScanTestSmallRectArea &rArr; ComparePos
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparePos
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanTestRectArea
</UL>

<P><STRONG><a name="[1aa]"></a>Area_ScanTestRectArea</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Area_ScanTestRectArea &rArr; Area_ScanTestSmallRectArea &rArr; ComparePos
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanTestSmallRectArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
</UL>

<P><STRONG><a name="[1f3]"></a>Area_GetConverseBCDTimeType</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, areamanage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRouteAreaTask
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
</UL>

<P><STRONG><a name="[1ab]"></a>Area_ConverseBcdGmtime</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Area_ConverseBcdGmtime &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToTime
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_BCD2HEX
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRouteAreaTask
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
</UL>

<P><STRONG><a name="[1b0]"></a>Area_GetConvertCurTime</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Area_GetConvertCurTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckRoundTime
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckRectTime
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckTime
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckTime
</UL>

<P><STRONG><a name="[1b2]"></a>Area_MdyDataInFlash</STRONG> (Thumb, 278 bytes, Stack size 136 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckArrayValIsEqual
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRoundArea
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundArea
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundModifyUserData
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRectArea
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectArea
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectModifyUserData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeSetRoad
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeDelRoad
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DeleteArea
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SaveOneArea
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SaveOneModifyUserData
</UL>

<P><STRONG><a name="[1b9]"></a>Area_ClearSpeedAreaBit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Area_ClearSpeedAreaBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_ResetAreaParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
</UL>

<P><STRONG><a name="[1bb]"></a>Area_CloseGSMModule</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Area_CloseGSMModule &rArr; Communication_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Close
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_EnableLink1Save
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetCloseGPRSFlag
</UL>

<P><STRONG><a name="[1be]"></a>Area_OpenGSMModule</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Open
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_DisableLink1Save
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearCloseGPRSFlag
</UL>

<P><STRONG><a name="[1c1]"></a>Area_CloseCollectGNSSDetailLocatorData</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Area_CloseCollectGNSSDetailLocatorData
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIS_GnssArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInAreaFlag
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CloseCollectGNSS
</UL>

<P><STRONG><a name="[1c3]"></a>Area_OpenCollectGNSSDetailLocatorData</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Area_OpenCollectGNSSDetailLocatorData &rArr; EN_GnssArea &rArr; EN_GnssAreaEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EN_GnssArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_OpenCollectGNSS
</UL>

<P><STRONG><a name="[b88]"></a>Area_OutGNSSAreaOpenPosition</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, areamanage.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>Area_CloseCollectGNSS</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Area_CloseCollectGNSS &rArr; Area_CloseCollectGNSSDetailLocatorData
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CloseCollectGNSSDetailLocatorData
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearCollectGnssFlag
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[1c6]"></a>Area_OpenCollectGNSS</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Area_OpenCollectGNSS &rArr; Area_OpenCollectGNSSDetailLocatorData &rArr; EN_GnssArea &rArr; EN_GnssAreaEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_OpenCollectGNSSDetailLocatorData
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetCollectGnssFlag
</UL>

<P><STRONG><a name="[1cc]"></a>Area_GetCollectGnssFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, areamanage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInAreaFlag
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadUpdateMode
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[1c7]"></a>Area_SetCollectGnssFlag</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Area_SetCollectGnssFlag &rArr; Area_OpenCollectGNSS &rArr; Area_OpenCollectGNSSDetailLocatorData &rArr; EN_GnssArea &rArr; EN_GnssAreaEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_OpenCollectGNSS
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRectArea
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRoundArea
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveInArea
</UL>

<P><STRONG><a name="[1c8]"></a>Area_ClearCollectGnssFlag</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Area_ClearCollectGnssFlag &rArr; Area_CloseCollectGNSS &rArr; Area_CloseCollectGNSSDetailLocatorData
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CloseCollectGNSS
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
</UL>

<P><STRONG><a name="[3b5]"></a>Area_GetCloseGPRSFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, areamanage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[1c9]"></a>Area_SetCloseGPRSFlag</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Area_SetCloseGPRSFlag &rArr; Area_CloseGSMModule &rArr; Communication_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CloseGSMModule
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRectArea
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRoundArea
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveInArea
</UL>

<P><STRONG><a name="[1ca]"></a>Area_ClearCloseGPRSFlag</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_OpenGSMModule
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
</UL>

<P><STRONG><a name="[3b0]"></a>Area_GetInAreaFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, areamanage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadUpdateMode
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[1cb]"></a>Area_SetInAreaFlag</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Area_SetInAreaFlag &rArr; Area_CloseCollectGNSSDetailLocatorData
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCollectGnssFlag
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CloseCollectGNSSDetailLocatorData
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRectArea
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRoundArea
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveInArea
</UL>

<P><STRONG><a name="[1d5]"></a>Area_ClearInAreaFlag</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, areamanage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
</UL>

<P><STRONG><a name="[1cd]"></a>Area_SetOpenDoorAlarmBit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Area_SetOpenDoorAlarmBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckOpenDoorAlarm
</UL>

<P><STRONG><a name="[1cf]"></a>Area_ClearOpenDoorAlarmBit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Area_ClearOpenDoorAlarmBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckOpenDoorAlarm
</UL>

<P><STRONG><a name="[1d0]"></a>Area_CheckOpenDoorAlarm</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Area_CheckOpenDoorAlarm &rArr; Area_ClearOpenDoorAlarmBit
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearOpenDoorAlarmBit
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetOpenDoorAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
</UL>

<P><STRONG><a name="[b89]"></a>Area_GetInOutAreaAlarmBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, areamanage.o(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>Area_SetInOutAreaAlarmBit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Area_SetInOutAreaAlarmBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInOutAreaAlarmInfo
</UL>

<P><STRONG><a name="[1d2]"></a>Area_SetInOutAreaAlarmInfo</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Area_SetInOutAreaAlarmInfo &rArr; Area_SetInOutAreaAlarmBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInOutAreaAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveOutRectArea
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveOutRoundArea
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRectArea
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRoundArea
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveInArea
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveOutArea
</UL>

<P><STRONG><a name="[1d3]"></a>Area_ClearInOutAreaAlarmBit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Area_ClearInOutAreaAlarmBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearInOutRectAlarm
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ClearInOutAlarm
</UL>

<P><STRONG><a name="[1d4]"></a>Area_ClearAllAlarm</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearInOutAreaAlarmBit
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearOpenDoorAlarmBit
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearInAreaFlag
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearCloseGPRSFlag
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearCollectGnssFlag
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearSpeedAreaBit
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckScanTask
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveOutRectArea
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveOutRoundArea
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRectArea
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRoundArea
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaResetParam
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaResetParam
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveInArea
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveOutArea
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ResetParam
</UL>

<P><STRONG><a name="[1d6]"></a>Area_RectAreaResetParam</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Area_RectAreaResetParam &rArr; Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_TestRectAreaParameterInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AreaManage_ScanTask
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaParameterInitialize
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaCheckForResetParam
</UL>

<P><STRONG><a name="[1d8]"></a>Area_RectAreaCheckForResetParam</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Area_RectAreaCheckForResetParam &rArr; Area_RectAreaResetParam &rArr; Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRectArea
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModify
</UL>

<P><STRONG><a name="[1d9]"></a>Area_RectAreaParameterInitialize</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Area_RectAreaParameterInitialize &rArr; Area_RectAreaResetParam &rArr; Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ReadAndCheckParam
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaUpdate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRectArea
</UL>

<P><STRONG><a name="[1da]"></a>Area_RoundAreaResetParam</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Area_RoundAreaResetParam &rArr; Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AreaManage_ScanTask
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaParameterInitialize
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaCheckForResetParam
</UL>

<P><STRONG><a name="[1db]"></a>Area_RoundAreaCheckForResetParam</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Area_RoundAreaCheckForResetParam &rArr; Area_RoundAreaResetParam &rArr; Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRoundArea
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModify
</UL>

<P><STRONG><a name="[1dc]"></a>Area_RoundAreaParameterInitialize</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Area_RoundAreaParameterInitialize &rArr; Area_RoundAreaResetParam &rArr; Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ReadAndCheckParam
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaUpdate
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRoundArea
</UL>

<P><STRONG><a name="[1dd]"></a>Area_EraseFlash</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Area_EraseFlash &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ClearArea
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRoundArea
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRectArea
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrRoute
</UL>

<P><STRONG><a name="[1de]"></a>Area_ClearRectArea</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Area_ClearRectArea &rArr; Area_EraseFlash &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_EraseFlash
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaParameterInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ReadAndCheckParam
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundArea
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRectArea
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectArea
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaUpdate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_EraseAllArea
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetArea
</UL>

<P><STRONG><a name="[1df]"></a>Area_ClearRoundArea</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Area_ClearRoundArea &rArr; Area_EraseFlash &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_EraseFlash
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaParameterInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ReadAndCheckParam
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRoundArea
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundArea
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaUpdate
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectArea
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_EraseAllArea
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetArea
</UL>

<P><STRONG><a name="[1e0]"></a>Area_EraseAllArea</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Area_EraseAllArea &rArr; Area_ClearRoundArea &rArr; Area_EraseFlash &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRoundArea
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRectArea
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[1e1]"></a>Area_GetCurGpsCoordinate</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Area_GetCurGpsCoordinate &rArr; Public_GetCurBasicPositionInfo &rArr; Report_GetPositionBasicInfo &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurBasicPositionInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckScanTask
</UL>

<P><STRONG><a name="[1e4]"></a>Area_IsInRectArea</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Area_IsInRectArea &rArr; ComparePos
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparePos
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
</UL>

<P><STRONG><a name="[1e5]"></a>Area_RoundComparePos</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Area_RoundComparePos &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetPointDistance
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_IsInRoundArea
</UL>

<P><STRONG><a name="[1e8]"></a>Area_IsInRoundArea</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Area_IsInRoundArea &rArr; Area_RoundComparePos &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundComparePos
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
</UL>

<P><STRONG><a name="[1e9]"></a>Area_CheckRectTime</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Area_CheckRectTime &rArr; Area_GetConvertCurTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInRange
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConvertCurTime
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
</UL>

<P><STRONG><a name="[1eb]"></a>Area_CheckRoundTime</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Area_CheckRoundTime &rArr; Area_GetConvertCurTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInRange
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConvertCurTime
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
</UL>

<P><STRONG><a name="[1ec]"></a>Area_DisposeDriveInRoundArea</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = Area_DisposeDriveInRoundArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_SetAreaParameter
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInOutAreaAlarmInfo
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInAreaFlag
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetCloseGPRSFlag
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetCollectGnssFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ChoiceAreaArmDest
</UL>

<P><STRONG><a name="[1ef]"></a>Area_DisposeDriveInRectArea</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = Area_DisposeDriveInRectArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_SetAreaParameter
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInOutAreaAlarmInfo
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInAreaFlag
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetCloseGPRSFlag
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetCollectGnssFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ChoiceAreaArmDest
</UL>

<P><STRONG><a name="[1f0]"></a>Area_DisposeDriveOutRoundArea</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = Area_DisposeDriveOutRoundArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInOutAreaAlarmInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ChoiceAreaArmDest
</UL>

<P><STRONG><a name="[1f1]"></a>Area_DisposeDriveOutRectArea</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = Area_DisposeDriveOutRectArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInOutAreaAlarmInfo
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_TestRectAreaParameterInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ChoiceAreaArmDest
</UL>

<P><STRONG><a name="[1f2]"></a>Area_ChoiceAreaArmDest</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = Area_ChoiceAreaArmDest &rArr; Area_DisposeDriveOutRectArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveOutRectArea
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveOutRoundArea
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRectArea
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRoundArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
</UL>

<P><STRONG><a name="[db]"></a>Area_ScanRoundArea</STRONG> (Thumb, 644 bytes, Stack size 176 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480 + Unknown Stack Size
<LI>Call Chain = Area_ScanRoundArea &rArr; Area_ChoiceAreaArmDest &rArr; Area_DisposeDriveOutRectArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ChoiceAreaArmDest
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckRoundTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_IsInRoundArea
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaResetParam
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckOpenDoorAlarm
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ConverseBcdGmtime
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConverseBCDTimeType
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> areamanage.o(.text)
</UL>
<P><STRONG><a name="[1f6]"></a>Area_ScanRectArea</STRONG> (Thumb, 600 bytes, Stack size 184 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488 + Unknown Stack Size
<LI>Call Chain = Area_ScanRectArea &rArr; Area_ChoiceAreaArmDest &rArr; Area_DisposeDriveOutRectArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ChoiceAreaArmDest
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckRectTime
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_IsInRectArea
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaResetParam
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckOpenDoorAlarm
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ConverseBcdGmtime
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConverseBCDTimeType
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanTestRectArea
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetTestRectAreaParameter
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckScanTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> areamanage.o(.text)
</UL>
<P><STRONG><a name="[1f8]"></a>Area_ClearInOutRectAlarm</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, areamanage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearInOutAreaAlarmBit
</UL>

<P><STRONG><a name="[1f9]"></a>Area_GetRectAreaUserDatalen</STRONG> (Thumb, 130 bytes, Stack size 176 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Area_GetRectAreaUserDatalen &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModifyUserData
</UL>

<P><STRONG><a name="[1fa]"></a>Area_GetRectAreaDatalenStandard</STRONG> (Thumb, 102 bytes, Stack size 176 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Area_GetRectAreaDatalenStandard &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectAreaCheckProtoclType
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurRectAreaDatalen
</UL>

<P><STRONG><a name="[1fb]"></a>Area_GetRectAreaDatalenJiuTong</STRONG> (Thumb, 190 bytes, Stack size 176 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Area_GetRectAreaDatalenJiuTong &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectAreaCheckProtoclType
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurRectAreaDatalen
</UL>

<P><STRONG><a name="[b8a]"></a>Area_GetRectAreaDatalenSuoMei</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, areamanage.o(.text), UNUSED)

<P><STRONG><a name="[1fc]"></a>Area_SaveOneRectModifyUserData</STRONG> (Thumb, 230 bytes, Stack size 184 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Area_SaveOneRectModifyUserData &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModifyUserData
</UL>

<P><STRONG><a name="[1fd]"></a>Area_SaveOneRectArea</STRONG> (Thumb, 392 bytes, Stack size 176 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Area_SaveOneRectArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModify
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaAdd
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaUpdate
</UL>

<P><STRONG><a name="[1fe]"></a>Area_RectAreaUpdate</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = Area_RectAreaUpdate &rArr; Area_SaveOneRectArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectArea
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRectArea
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaParameterInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectArea
</UL>

<P><STRONG><a name="[1ff]"></a>Area_GetCurRectAreaDatalen</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Area_GetCurRectAreaDatalen &rArr; Area_GetRectAreaDatalenJiuTong &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRectAreaDatalenJiuTong
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRectAreaDatalenStandard
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModify
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaAdd
</UL>

<P><STRONG><a name="[200]"></a>Area_RectAreaAdd</STRONG> (Thumb, 260 bytes, Stack size 200 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Area_RectAreaAdd &rArr; Area_SaveOneRectArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurRectAreaDatalen
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectArea
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectArea
</UL>

<P><STRONG><a name="[201]"></a>Area_RectAreaModify</STRONG> (Thumb, 296 bytes, Stack size 208 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = Area_RectAreaModify &rArr; Area_SaveOneRectArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurRectAreaDatalen
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectArea
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaCheckForResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectArea
</UL>

<P><STRONG><a name="[202]"></a>Area_SetRectAreaCheckProtoclType</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Area_SetRectAreaCheckProtoclType &rArr; Area_GetRectAreaDatalenJiuTong &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRectAreaDatalenJiuTong
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRectAreaDatalenStandard
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectArea
</UL>

<P><STRONG><a name="[203]"></a>Area_SetRectArea</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = Area_SetRectArea &rArr; Area_RectAreaModify &rArr; Area_SaveOneRectArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ClearArea
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectAreaCheckProtoclType
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModify
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaAdd
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaUpdate
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRoundArea
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRectArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SetRectangleArea
</UL>

<P><STRONG><a name="[205]"></a>Area_DelRectArea</STRONG> (Thumb, 274 bytes, Stack size 200 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Area_DelRectArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRectArea
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaCheckForResetParam
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DelRectangleArea
</UL>

<P><STRONG><a name="[206]"></a>Area_GetRoundAreaUserDatalen</STRONG> (Thumb, 130 bytes, Stack size 176 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Area_GetRoundAreaUserDatalen &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModifyUserData
</UL>

<P><STRONG><a name="[207]"></a>Area_GetRoundAreaDatalenStandard</STRONG> (Thumb, 100 bytes, Stack size 176 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Area_GetRoundAreaDatalenStandard &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundAreaCheckProtoclType
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurRoundAreaDatalen
</UL>

<P><STRONG><a name="[208]"></a>Area_GetRoundAreaDatalenJiuTong</STRONG> (Thumb, 172 bytes, Stack size 176 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Area_GetRoundAreaDatalenJiuTong &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundAreaCheckProtoclType
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurRoundAreaDatalen
</UL>

<P><STRONG><a name="[b8b]"></a>Area_GetRoundAreaDatalenSuoMei</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, areamanage.o(.text), UNUSED)

<P><STRONG><a name="[209]"></a>Area_SaveOneRoundModifyUserData</STRONG> (Thumb, 292 bytes, Stack size 184 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = Area_SaveOneRoundModifyUserData &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Erase
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModifyUserData
</UL>

<P><STRONG><a name="[20b]"></a>Area_SaveOneRoundArea</STRONG> (Thumb, 378 bytes, Stack size 176 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Area_SaveOneRoundArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModify
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaAdd
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaUpdate
</UL>

<P><STRONG><a name="[20c]"></a>Area_RoundAreaUpdate</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = Area_RoundAreaUpdate &rArr; Area_SaveOneRoundArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundArea
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRoundArea
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaParameterInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundArea
</UL>

<P><STRONG><a name="[20d]"></a>Area_GetCurRoundAreaDatalen</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Area_GetCurRoundAreaDatalen &rArr; Area_GetRoundAreaDatalenJiuTong &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRoundAreaDatalenJiuTong
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRoundAreaDatalenStandard
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModify
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaAdd
</UL>

<P><STRONG><a name="[20e]"></a>Area_RoundAreaAdd</STRONG> (Thumb, 260 bytes, Stack size 200 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Area_RoundAreaAdd &rArr; Area_SaveOneRoundArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurRoundAreaDatalen
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundArea
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundArea
</UL>

<P><STRONG><a name="[20f]"></a>Area_RoundAreaModify</STRONG> (Thumb, 324 bytes, Stack size 200 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Area_RoundAreaModify &rArr; Area_SaveOneRoundArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurRoundAreaDatalen
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundArea
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaCheckForResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundArea
</UL>

<P><STRONG><a name="[210]"></a>Area_SetRoundAreaCheckProtoclType</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Area_SetRoundAreaCheckProtoclType &rArr; Area_GetRoundAreaDatalenJiuTong &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRoundAreaDatalenJiuTong
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRoundAreaDatalenStandard
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundArea
</UL>

<P><STRONG><a name="[211]"></a>Area_SetRoundArea</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = Area_SetRoundArea &rArr; Area_RoundAreaModify &rArr; Area_SaveOneRoundArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ClearArea
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundAreaCheckProtoclType
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModify
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaAdd
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaUpdate
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRoundArea
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRectArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SetRoundArea
</UL>

<P><STRONG><a name="[212]"></a>Area_DelRoundArea</STRONG> (Thumb, 272 bytes, Stack size 192 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Area_DelRoundArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRoundArea
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaCheckForResetParam
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DelRoundArea
</UL>

<P><STRONG><a name="[213]"></a>Area_RoundAreaModifyUserData</STRONG> (Thumb, 290 bytes, Stack size 200 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = Area_RoundAreaModifyUserData &rArr; Area_SaveOneRoundModifyUserData &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundModifyUserData
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRoundAreaUserDatalen
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeEIExpandProtocol
</UL>

<P><STRONG><a name="[214]"></a>Area_RectAreaModifyUserData</STRONG> (Thumb, 314 bytes, Stack size 208 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = Area_RectAreaModifyUserData &rArr; Area_SaveOneRectModifyUserData &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectModifyUserData
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRectAreaUserDatalen
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeEIExpandProtocol
</UL>

<P><STRONG><a name="[215]"></a>Area_DisposeEIExpandProtocol</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = Area_DisposeEIExpandProtocol &rArr; Area_RoundAreaModifyUserData &rArr; Area_SaveOneRoundModifyUserData &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_AreaModifyUserData
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModifyUserData
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModifyUserData
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_DisposeProtocol
</UL>

<P><STRONG><a name="[b8c]"></a>Area_DisposeReadAreaProtocol</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, areamanage.o(.text), UNUSED)

<P><STRONG><a name="[3b2]"></a>Area_GetRoundAreaTotalNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, areamanage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[3b1]"></a>Area_GetRectAreaTotalNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, areamanage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[217]"></a>Area_CheckScanTask</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496 + Unknown Stack Size
<LI>Call Chain = Area_CheckScanTask &rArr; Area_ScanRectArea &rArr; Area_ChoiceAreaArmDest &rArr; Area_DisposeDriveOutRectArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmMaskBit
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurGpsCoordinate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AreaManage_ScanTask
</UL>

<P><STRONG><a name="[219]"></a>AreaManage_ScanTask</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1536 + Unknown Stack Size
<LI>Call Chain = AreaManage_ScanTask &rArr; Area_CheckScanTask &rArr; Area_ScanRectArea &rArr; Area_ChoiceAreaArmDest &rArr; Area_DisposeDriveOutRectArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopygPosition
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckScanTask
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaResetParam
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaResetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> areamanage.o(.text)
</UL>
<P><STRONG><a name="[21c]"></a>AreaManage_StartScanTask</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AreaManage_StartScanTask &rArr; LZM_PublicSetCycTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> areamanage.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>AreaManage_TimeTask</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AreaManage_TimeTask &rArr; LZM_PublicTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[21f]"></a>Area_GetInOutAreaAlarmSubjoinInfo</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Area_GetInOutAreaAlarmSubjoinInfo &rArr; Public_ConvertLongToBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetManualAlarmSubjoinInfo
</UL>

<P><STRONG><a name="[222]"></a>Area_ReadAndCheckParam</STRONG> (Thumb, 266 bytes, Stack size 320 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Area_ReadAndCheckParam &rArr; Area_ClearRoundArea &rArr; Area_EraseFlash &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRoundArea
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRectArea
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaParameterInitialize
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaParameterInitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> areamanage.o(.text)
</UL>
<P><STRONG><a name="[223]"></a>Area_ParameterInitialize</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, areamanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Area_ParameterInitialize &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[20a]"></a>Blind_Erase</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Erase
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1SearchSector
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2SearchSector
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundModifyUserData
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[55]"></a>Blind_TimeTask</STRONG> (Thumb, 474 bytes, Stack size 8 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = Blind_TimeTask &rArr; Blind_Link1Report &rArr; RadioProtocol_PostionInformation_BulkUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_StartBlindReport
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTerminalAuthorizationFlag
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Search
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Report
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Init
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Search
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Report
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[23f]"></a>Blind_Save</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Blind_Save &rArr; Blind_Link1Save &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
</UL>

<P><STRONG><a name="[240]"></a>Blind_StartReport</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Blind_StartReport
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_StartLink1Report
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_StartLink2Report
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
</UL>

<P><STRONG><a name="[245]"></a>Blind_ReportAck</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Blind_ReportAck &rArr; Blind_Link1ReportAck &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1ReportAck
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2ReportAck
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
</UL>

<P><STRONG><a name="[290]"></a>Blind_GetLink2OpenFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, blind.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_AlarmChange
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_StatusChange
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[1bd]"></a>Blind_EnableLink1Save</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, blind.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CloseGSMModule
</UL>

<P><STRONG><a name="[1c0]"></a>Blind_DisableLink1Save</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, blind.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_OpenGSMModule
</UL>

<P><STRONG><a name="[b8d]"></a>Blind_EnableLink2Save</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blind.o(.text), UNUSED)

<P><STRONG><a name="[b8e]"></a>Blind_DisableLink2Save</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blind.o(.text), UNUSED)

<P><STRONG><a name="[252]"></a>BMA250E_ClearInitFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bma250e.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
</UL>

<P><STRONG><a name="[253]"></a>BMA250E_UpdateCrashParameter</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_WriteRegister
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadAllRegister
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[259]"></a>BMA250E_UpdateRolloverParameter</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = BMA250E_UpdateRolloverParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[25f]"></a>BMA250E_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = BMA250E_Init &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateRolloverParameter
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_InitExit
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_WriteRegister
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadAllRegister
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Delay
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_TimeTask
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
</UL>

<P><STRONG><a name="[3e]"></a>BMA250E_TimeTask</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = BMA250E_TimeTask &rArr; BMA250E_ReadXYZAcceleration &rArr; BMA250E_Init &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_CrashAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[26b]"></a>BMA250E_GetAngle</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BMA250E_GetAngle &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Calibration
</UL>

<P><STRONG><a name="[26c]"></a>BMA250E_Calibration</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BMA250E_Calibration &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_GetAngle
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugSetPositionEx
</UL>

<P><STRONG><a name="[b8f]"></a>BMA250E_GetRolloverAlarmFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bma250e.o(.text), UNUSED)

<P><STRONG><a name="[b90]"></a>BMA250E_GetCrashAlarmFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bma250e.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>Camera_TimeTask</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3380 + Unknown Stack Size
<LI>Call Chain = Camera_TimeTask &rArr; Camera_StateStore &rArr; Media_SaveLog &rArr; Media_SignDelFlag &rArr; Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TaskInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSchedule
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateCheck
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StatePhoto
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateFetch
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateStore
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSend
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateResend
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateTiming
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ErrorHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[28f]"></a>Camera_Photo</STRONG> (Thumb, 418 bytes, Stack size 80 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Camera_Photo &rArr; Camera_WriteParameter &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_WriteParameter
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_GetLink2OpenFlag
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_JiutongPhoto
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CameraPhoto
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_AlarmChange
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_StatusChange
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_TimeArive
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_DistanceArive
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[6a8]"></a>Camera_MediaUploadAck</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Camera_MediaUploadAck
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaUploadAck
</UL>

<P><STRONG><a name="[76d]"></a>Camera_GetOnlineFlag</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, camera_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adjust_Array_Size
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCameraInfo
</UL>

<P><STRONG><a name="[74e]"></a>Camera_GetTotalNum</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, camera_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[291]"></a>Usart3_Init</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, camera_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Usart3_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
</UL>

<P><STRONG><a name="[297]"></a>Camera_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, camera_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Camera_Init &rArr; Usart3_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[b91]"></a>Usart3_ClrRxBuffer</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, camera_driver.o(.text), UNUSED)

<P><STRONG><a name="[299]"></a>Usart3_TxIsr</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, camera_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Usart3_TxIsr &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Isr
</UL>

<P><STRONG><a name="[29b]"></a>Usart3_RxIsr</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, camera_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Usart3_RxIsr
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Isr
</UL>

<P><STRONG><a name="[29d]"></a>Usart3_Isr</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, camera_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Usart3_Isr &rArr; Usart3_TxIsr &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_RxIsr
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_TxIsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[274]"></a>Usart3_SendData</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, camera_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Usart3_SendData &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateCheck
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StatePhoto
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateFetch
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateTiming
</UL>

<P><STRONG><a name="[2a0]"></a>Usart3_CameraProtocolParse</STRONG> (Thumb, 428 bytes, Stack size 24 bytes, camera_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Usart3_CameraProtocolParse
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_TimeTask
</UL>

<P><STRONG><a name="[3a]"></a>Usart3_TimeTask</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, camera_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Usart3_TimeTask &rArr; Usart3_CameraProtocolParse
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_CameraProtocolParse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[2a1]"></a>Can_UpdatePram</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, can_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Can_UpdatePram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[65]"></a>Can_TimeTask</STRONG> (Thumb, 574 bytes, Stack size 80 bytes, can_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = Can_TimeTask &rArr; RadioProtocol_CAN_UpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unTransMean
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_HEX2BCD
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_BCD2HEX
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CAN_UpTrans
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueLength
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueFrontAndOut2
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Init
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_UpdatePram
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[2b3]"></a>Can_SoftwareFilter</STRONG> (Thumb, 136 bytes, Stack size 12 bytes, can_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Can_SoftwareFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Rx_Isr
</UL>

<P><STRONG><a name="[2a2]"></a>Can_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, can_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Can_Init &rArr; Can_1_Init &rArr; Can_1_Baud_Init &rArr; CAN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
</UL>

<P><STRONG><a name="[2b1]"></a>Can_1_Rx_Isr</STRONG> (Thumb, 348 bytes, Stack size 72 bytes, can_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Can_1_Rx_Isr &rArr; TransMean
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransMean
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueInBuffer
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_HEX2BCD
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Receive
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_SoftwareFilter
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[2b7]"></a>CAN_1_ID_Filter</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, can_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_FilterInit
</UL>

<P><STRONG><a name="[2c3]"></a>Card_ParseCmd</STRONG> (Thumb, 866 bytes, Stack size 72 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Card_ParseCmd &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_SendCmd
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_Switch
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unTransMean
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCommProtocolParse
</UL>

<P><STRONG><a name="[49]"></a>Card_TimeTask</STRONG> (Thumb, 282 bytes, Stack size 8 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1968 + Unknown Stack Size
<LI>Call Chain = Card_TimeTask &rArr; CARDState_DriverLogin &rArr; RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_ReadBuff
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_ParseCmd
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_Init
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_Idle
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_ConnectNet
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_AuthenticationRequest
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogin
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[95f]"></a>Card_GetLinkFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, card.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Login
</UL>

<P><STRONG><a name="[2c6]"></a>Card_AuthenticationAck</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Card_AuthenticationAck &rArr; Card_SendCmd &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_SendCmd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataDownTrans
</UL>

<P><STRONG><a name="[2c7]"></a>Card_GetExternalDriverName</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2c8]"></a>COMM_QueueInit</STRONG> (Thumb, 286 bytes, Stack size 8 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = COMM_QueueInit &rArr; LZM_QueueDataInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_Initialize
</UL>

<P><STRONG><a name="[2ca]"></a>COMM_SetBaudRateEx</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, comm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUsartPtr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[2cc]"></a>COMM_SetBaudRate</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, comm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUsartPtr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[2cd]"></a>COMM_SetBaudRateInitialize</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = COMM_SetBaudRateInitialize &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsartITConfig
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUsartPtr
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_NVIC_Config
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_Initialize
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_BaudrateInit
</UL>

<P><STRONG><a name="[2d2]"></a>COMM_Initialize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = COMM_Initialize &rArr; COMM_SetBaudRateInitialize &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRateInitialize
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_QueueInit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_Init
</UL>

<P><STRONG><a name="[2d4]"></a>Comm_CtrlEnableRecv</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Comm_CtrlEnableRecv
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_TxIsr
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_CtrlEnableInitialize
</UL>

<P><STRONG><a name="[2e2]"></a>Comm_CtrlEnableSend</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Comm_CtrlEnableSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SendData
</UL>

<P><STRONG><a name="[2d3]"></a>COMM_CtrlEnableInitialize</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, comm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_CtrlEnableRecv
</UL>

<P><STRONG><a name="[2d5]"></a>COMM_putc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, comm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUsartPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_putstr
</UL>

<P><STRONG><a name="[2d6]"></a>COMM_putstr</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, comm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_putc
</UL>

<P><STRONG><a name="[2d7]"></a>COMM_RxIsr</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = COMM_RxIsr &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueInsert
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUsartReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_IRQHandler
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_RxIsr
</UL>

<P><STRONG><a name="[2da]"></a>COMM_TxIsr</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = COMM_TxIsr &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSendData
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsartITConfig
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueEmpty
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDelete
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_CtrlEnableRecv
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_IRQHandler
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_TxIsr
</UL>

<P><STRONG><a name="[2de]"></a>COMM_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = COMM_IRQHandler &rArr; COMM_TxIsr &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUsartStatus
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_TxIsr
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_RxIsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[2e0]"></a>COMM_SendData</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsartITConfig
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueEmpty
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataFreeSpace
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataBatchInsert
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_CtrlEnableSend
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_WriteBuff
</UL>

<P><STRONG><a name="[2e4]"></a>COMM_ReadData</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = COMM_ReadData &rArr; LZM_QueueDataBatchDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataBatchDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_ReadBuff
</UL>

<P><STRONG><a name="[811]"></a>COMM_GetSendBusy</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, comm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_GetSendBusy
</UL>

<P><STRONG><a name="[2e6]"></a>Corner_UpdataPram</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, corner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Corner_UpdataPram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[52]"></a>Corner_TimeTask</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, corner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2000 + Unknown Stack Size
<LI>Call Chain = Corner_TimeTask &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadCourse
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[6ae]"></a>Encrypt</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, crypt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
</UL>

<P><STRONG><a name="[b92]"></a>Decrypt</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, crypt.o(.text), UNUSED)

<P><STRONG><a name="[2e8]"></a>DeepPlow_CheckSelectShow</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DeepPlow_CheckSelectShow &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsDeepFlag
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
</UL>

<P><STRONG><a name="[2ec]"></a>DeepPlow_CalcDeepParam</STRONG> (Thumb, 270 bytes, Stack size 72 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DeepPlow_CalcDeepParam &rArr; acos &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
</UL>

<P><STRONG><a name="[2f0]"></a>DeepPlow_UpdatePram</STRONG> (Thumb, 370 bytes, Stack size 16 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = DeepPlow_UpdatePram &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsDeepFlag
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_ParameterInitialize
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
</UL>

<P><STRONG><a name="[f4]"></a>TaskSystemDeepBaseCalib</STRONG> (Thumb, 596 bytes, Stack size 24 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = TaskSystemDeepBaseCalib &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinLoseFocus
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CheckSelectShow
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[f2]"></a>TaskSystemDeepMinCalib</STRONG> (Thumb, 528 bytes, Stack size 32 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemDeepMinCalib &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CheckSelectShow
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[f3]"></a>TaskSystemDeepMaxCalib</STRONG> (Thumb, 646 bytes, Stack size 32 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemDeepMaxCalib &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CheckSelectShow
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[10c]"></a>TaskSystemDeepBaseSet</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = TaskSystemDeepBaseSet &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CheckSelectShow
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[300]"></a>DeepPlow_ParameterInitialize</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = DeepPlow_ParameterInitialize &rArr; DeepPlow_UpdatePram &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_TimeTask
</UL>

<P><STRONG><a name="[301]"></a>DeepPlow_GetSubjoinInfoCurDeepVal</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DeepPlow_GetSubjoinInfoCurDeepVal
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsDeepFlag
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
</UL>

<P><STRONG><a name="[302]"></a>DeepPlow_CalcCurDeepLength</STRONG> (Thumb, 260 bytes, Stack size 96 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = DeepPlow_CalcCurDeepLength &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_TimeTask
</UL>

<P><STRONG><a name="[465]"></a>DeepPlow_GetCurDeepLength</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, deepplow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
</UL>

<P><STRONG><a name="[467]"></a>DeepPlow_GetResultIsQualified</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, deepplow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
</UL>

<P><STRONG><a name="[466]"></a>DeepPlow_GetCheckParamResult</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, deepplow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
</UL>

<P><STRONG><a name="[6c]"></a>DeepPlow_TimeTask</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, deepplow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DeepPlow_TimeTask &rArr; DeepPlow_CalcCurDeepLength &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsDeepFlag
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_ParameterInitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[307]"></a>DownloadGB2313_CheckFlashArea</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, downloadgb2313.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DownloadGB2313_CheckFlashArea &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_ParameterInitialize
</UL>

<P><STRONG><a name="[308]"></a>EraseDownloadGB2313FlashArea</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, downloadgb2313.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EraseDownloadGB2313FlashArea &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[309]"></a>DownloadGB2313_WriteToFlash</STRONG> (Thumb, 370 bytes, Stack size 48 bytes, downloadgb2313.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DownloadGB2313_WriteToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
</UL>

<P><STRONG><a name="[30a]"></a>DownloadGB2313_ReadFromFlash</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, downloadgb2313.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DownloadGB2313_ReadFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIndexTextDetails
</UL>

<P><STRONG><a name="[7c3]"></a>DownloadGB2313_GetTotalStep</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, downloadgb2313.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTextIndexTotalNum
</UL>

<P><STRONG><a name="[30b]"></a>E2ParamApp_ConverseGmtime</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = E2ParamApp_ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YearDay
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadTimeParam
</UL>

<P><STRONG><a name="[30e]"></a>E2ParamApp_Gmtime</STRONG> (Thumb, 290 bytes, Stack size 64 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = E2ParamApp_Gmtime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteTimeParam
</UL>

<P><STRONG><a name="[315]"></a>E2ParamApp_ConvertOldSelfDefinePramID</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, e2paramapp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertPramID
</UL>

<P><STRONG><a name="[316]"></a>E2ParamApp_ConvertSuomeiPramID</STRONG> (Thumb, 534 bytes, Stack size 0 bytes, e2paramapp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertPramID
</UL>

<P><STRONG><a name="[b93]"></a>E2ParamApp_ConvertPramIDToSuomeiID</STRONG> (Thumb, 574 bytes, Stack size 0 bytes, e2paramapp.o(.text), UNUSED)

<P><STRONG><a name="[30f]"></a>E2ParamApp_WriteTimeParam</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = E2ParamApp_WriteTimeParam &rArr; Public_ConvertTimeToBCDEx &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCDEx
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_Gmtime
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteSpecialParam
</UL>

<P><STRONG><a name="[310]"></a>E2ParamApp_ReadTimeParam</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = E2ParamApp_ReadTimeParam &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToTime
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConverseGmtime
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
</UL>

<P><STRONG><a name="[311]"></a>E2ParamApp_WriteSpecialParam</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = E2ParamApp_WriteSpecialParam &rArr; E2ParamApp_WriteTimeParam &rArr; Public_ConvertTimeToBCDEx &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteTimeParam
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[312]"></a>E2ParamApp_ReadSpecialParam</STRONG> (Thumb, 364 bytes, Stack size 56 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = E2ParamApp_ReadSpecialParam &rArr; E2ParamApp_ReadTimeParam &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadTimeParam
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadOneParam
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
</UL>

<P><STRONG><a name="[314]"></a>E2ParamApp_ConvertPramID</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = E2ParamApp_ConvertPramID
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertSuomeiPramID
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertOldSelfDefinePramID
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeReadParam
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[334]"></a>E2ParamApp_ConvertTranPramID</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, e2paramapp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeReadAllParam
</UL>

<P><STRONG><a name="[318]"></a>E2ParamApp_ConvertPramIDToGroupIndex</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, e2paramapp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>

<P><STRONG><a name="[b94]"></a>E2ParamApp_CheckIPFormatData</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, e2paramapp.o(.text), UNUSED)

<P><STRONG><a name="[31a]"></a>E2ParamApp_CheckPhoneFormatData</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = E2ParamApp_CheckPhoneFormatData
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[317]"></a>E2ParamApp_DisposeWriteParam</STRONG> (Thumb, 850 bytes, Stack size 104 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1640 + Unknown Stack Size
<LI>Call Chain = E2ParamApp_DisposeWriteParam &rArr; DriverInfo_DisposeRadioProtocol &rArr; DriverInfoAdd &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckArrayValIsEqual
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ClearArea
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Erase
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_EraseAllArea
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_EraseFlashArea
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_EraseAllFlashArea
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseDeleteAll
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CallRecordDeleteAll
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookDeleteAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetCurOnlineStatus
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdModifyPassWord
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_SetFlag
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ClearStatusWord
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ClearExtCarStatusWord
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ClearAlarmWord
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceDeleteAll
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandDeleteAll
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_SetPram
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_EraseAllDvrArea
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDeleteAll
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_GBTestSet
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_BBGNTestSet
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfo_DisposeRadioProtocol
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoDeleteAll
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrRoute
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationCode
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_CheckPhoneFormatData
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertPramIDToGroupIndex
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertPramID
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteSpecialParam
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseDownloadGB2313FlashArea
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_WritePram
</UL>

<P><STRONG><a name="[332]"></a>E2ParamApp_ReadOneParam</STRONG> (Thumb, 96 bytes, Stack size 224 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = E2ParamApp_ReadOneParam &rArr; E2ParamApp_ReadSpecialParam &rArr; E2ParamApp_ReadTimeParam &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeReadParam
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeReadAllParam
</UL>

<P><STRONG><a name="[333]"></a>E2ParamApp_DisposeReadAllParam</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = E2ParamApp_DisposeReadAllParam &rArr; E2ParamApp_ReadOneParam &rArr; E2ParamApp_ReadSpecialParam &rArr; E2ParamApp_ReadTimeParam &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadOneParam
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertTranPramID
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PramSearch
</UL>

<P><STRONG><a name="[335]"></a>E2ParamApp_DisposeReadParam</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, e2paramapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = E2ParamApp_DisposeReadParam &rArr; E2ParamApp_ReadOneParam &rArr; E2ParamApp_ReadSpecialParam &rArr; E2ParamApp_ReadTimeParam &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfo_ReadDataForRadioProtocol
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadOneParam
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertPramID
</UL>
<BR>[Called By]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ReadPram
</UL>

<P><STRONG><a name="[337]"></a>E2prom_InitIO</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, e2prom_25lc320a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = E2prom_InitIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[338]"></a>E2prom_ReadStatusRegister</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, e2prom_25lc320a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadByte
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
</UL>

<P><STRONG><a name="[26e]"></a>E2prom_ReadByte</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, e2prom_25lc320a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadByte
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadStatusRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TaskInit
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ErrorHandle
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_UpdatePram
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEepromChip
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
</UL>

<P><STRONG><a name="[31d]"></a>E2prom_WriteByte</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, e2prom_25lc320a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = E2prom_WriteByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadStatusRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_EraseAllPram
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEepromChip
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationCode
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CameraPhoto
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpEnd
</UL>

<P><STRONG><a name="[33c]"></a>CheckEepromChip</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, e2prom_25lc320a.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CheckEepromChip &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryChipSelfCheck
</UL>

<P><STRONG><a name="[2f1]"></a>EepromPram_WritePram</STRONG> (Thumb, 228 bytes, Stack size 96 bytes, eeprompram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertPramIDToGroupIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WriteAllPram
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_GBTestSet
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteSpecialParam
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteTimeParam
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SetTerminalPassWordToLcd
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentDriverParameter
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTerminalFirmwareVersion
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TelephoneCallback
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegisterAck
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SaveCurSIMICcidNumberToE2Param
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vss_TimeTask
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurSIMICcidNumberToE2Param
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeOk
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSystemBacklightFlag
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAndCheckSystemDeviceID
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemPassWord
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAndCheckTerminalPhoneNumber
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainIp
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainApn
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackupIp
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackApn
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataTCPPort
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataUDPPort
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClearUsbUpdataFlag
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetUsbUpdataFlag
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_ModifyPulseCoef
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DeviceId
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Heartbeat
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_ReportTime
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DevicePhone
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Ip
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Num
<LI><a href="#[a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd82H
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd83H
<LI><a href="#[a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC3H
<LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC4H
</UL>

<P><STRONG><a name="[233]"></a>EepromPram_ReadPram</STRONG> (Thumb, 342 bytes, Stack size 88 bytes, eeprompram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConvertPramIDToGroupIndex
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Corner_UpdataPram
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_UpdatePram
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateRolloverParameter
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRunMode
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_UpdateLink2OpenFlag
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadParam
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadBaseData
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadUpdateMode
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadCollectFreq
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_UpdateParameter
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_UpdateParameter
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_UpdateParameter
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePeripheralType
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataToplightControlFlag
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataTaximeterControlFlag
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLedlightControlFlag
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataAccOffGpsControlFlag
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedFlagUpdatePram
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_UpdateParam
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_UpdatePram
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdateOnePram
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_UpdatePram
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateMaxPhoneTimeMonth
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateMaxPhoneTimeEach
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_UpdataPram
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBeat_UpdatePram
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssCheckChangePar
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WriteAllPram
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSetRead
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadOneParam
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteSpecialParam
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadTimeParam
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTiredDriverAutoLog
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SetTerminalPassWordToLcd
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeKeyValue
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTerminalFirmwareVersion
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_Init
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_Init
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_ParameterIsRight
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegister
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalQualify
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Second_connect_To_Specific_Server
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurentProductModel
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_connect_To_Specific_Server
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_UpdateTerminalPhoneNum
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TelephoneCallback
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ParamQueryAll
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalAttribute
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayE2ParamAlarmVoice
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneIsSpecialNumber
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckIsPhoneServerRunStatus
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TakeCallMonitorServerPhone
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CallBackPhone
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SetDialEvTask
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataEvaluatorControlFlag
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Init
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCarInfo
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProductInfo
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQueryServerParameter
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentReportMode
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeOk
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemShowTerminalID
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemBacklightFlag
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemDeviceID
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemPassWord
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAndCheckPhoneNumber
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadUsbUpdataFlag
<LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_Init
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadUserPass
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadApn
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadSleep
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Value
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpVal
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsRst
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_SmsRst
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Alarm
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Value
<LI><a href="#[a9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm
<LI><a href="#[a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_UpdateParameter
<LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd03H
<LI><a href="#[a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd04H
<LI><a href="#[a7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd05H
<LI><a href="#[a7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd07H
<LI><a href="#[a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE1H
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleAlarm
<LI><a href="#[a47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleNightRunVoice
<LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm2
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_AckE1H
</UL>

<P><STRONG><a name="[331]"></a>EepromPram_UpdateVariable</STRONG> (Thumb, 1308 bytes, Stack size 48 bytes, eeprompram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Corner_UpdataPram
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_UpdatePram
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateRolloverParameter
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRunMode
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_UpdateParameter
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_UpdateParameter
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ClearStartTime
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_UpdateParameter
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_ClearTime
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePeripheralType
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataToplightControlFlag
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataTaximeterControlFlag
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLedlightControlFlag
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataAccOffGpsControlFlag
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedFlagUpdatePram
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_UpdateParam
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_UpdatePram
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdateOnePram
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_UpdatePram
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateMaxPhoneTimeMonth
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateMaxPhoneTimeEach
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_UpdataParameter
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_UpdataParameter
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_UpdataPram
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBeat_UpdatePram
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssCheckChangePar
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_SetPram
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeOk
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Heartbeat
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_ReportTime
</UL>

<P><STRONG><a name="[ea]"></a>EepromPram_DefaultSet</STRONG> (Thumb, 4014 bytes, Stack size 48 bytes, eeprompram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = EepromPram_DefaultSet &rArr; GpsMile_SetPram &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_SetPram
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultParamter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> public.o(.text)
</UL>
<P><STRONG><a name="[32f]"></a>EepromPram_GBTestSet</STRONG> (Thumb, 458 bytes, Stack size 24 bytes, eeprompram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = EepromPram_GBTestSet &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[330]"></a>EepromPram_BBGNTestSet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, eeprompram.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[354]"></a>EepromPram_DefaultSetRead</STRONG> (Thumb, 1272 bytes, Stack size 48 bytes, eeprompram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>

<P><STRONG><a name="[355]"></a>EepromPram_EraseAllPram</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, eeprompram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
</UL>

<P><STRONG><a name="[356]"></a>EepromPram_WriteAllPram</STRONG> (Thumb, 62 bytes, Stack size 72 bytes, eeprompram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[357]"></a>EIExpand_DisposeFunctionProtocol</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, eiexpand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = EIExpand_DisposeFunctionProtocol &rArr; Temperature_DisposeRadioProtocol &rArr; Temperature_ComSend &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Protocol_Paramter
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_DisposeRadioProtocol
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_Turn_DisposeRadioProtocol
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_DisposeRadioProtocol
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_RadioProtocolParse
</UL>

<P><STRONG><a name="[35b]"></a>EIExpand_DisposeProtocol</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, eiexpand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = EIExpand_DisposeProtocol &rArr; Area_DisposeEIExpandProtocol &rArr; Area_RoundAreaModifyUserData &rArr; Area_SaveOneRoundModifyUserData &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeEIExpandProtocol
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_RadioProtocolParse
</UL>

<P><STRONG><a name="[35c]"></a>EIExpand_RadioProtocolParse</STRONG> (Thumb, 242 bytes, Stack size 936 bytes, eiexpand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840<LI>Call Chain = EIExpand_RadioProtocolParse &rArr; EIExpand_DisposeProtocol &rArr; Area_DisposeEIExpandProtocol &rArr; Area_RoundAreaModifyUserData &rArr; Area_SaveOneRoundModifyUserData &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_DisposeProtocol
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_DisposeFunctionProtocol
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataDownTrans
</UL>

<P><STRONG><a name="[35d]"></a>EIExpand_PotocolPackData</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, eiexpand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EIExpand_PotocolPackData
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolSendData
</UL>

<P><STRONG><a name="[35e]"></a>EIExpand_PotocolResendData</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, eiexpand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = EIExpand_PotocolResendData &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetEIExpandTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eiexpand.o(.text)
</UL>
<P><STRONG><a name="[16f]"></a>EIExpand_PotocolSendData</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, eiexpand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832 + Unknown Stack Size
<LI>Call Chain = EIExpand_PotocolSendData &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetEIExpandTimer
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolPackData
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_8900Send
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_PlatformReadDriverInfoData
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_8900Send
</UL>

<P><STRONG><a name="[2f4]"></a>ESpinInit</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, espin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = ESpinInit &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
</UL>

<P><STRONG><a name="[360]"></a>ESpinInitLimit</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, espin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[2f5]"></a>ESpinShow</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, espin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = ESpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinLoseFocus
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
</UL>

<P><STRONG><a name="[2f6]"></a>ESpinSetFocus</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, espin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = ESpinSetFocus &rArr; ESpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
</UL>

<P><STRONG><a name="[2fc]"></a>ESpinLoseFocus</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, espin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = ESpinLoseFocus &rArr; ESpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
</UL>

<P><STRONG><a name="[364]"></a>ESpinShowEx</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, espin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = ESpinShowEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
</UL>

<P><STRONG><a name="[2fb]"></a>ESpinResponse</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, espin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShowEx
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinPoint
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordKeyResponse
</UL>

<P><STRONG><a name="[368]"></a>FRAM_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fm25c160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FRAM_Init &rArr; GpioOutInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[17d]"></a>FRAM_BufferRead</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, fm25c160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadByte
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_Init
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TaskInit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_TimeTask
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_StartBlindReport
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_PowerOnUpdataPosition
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFramChip
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_Turn_DisposeRadioProtocol
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_DisposeRadioProtocol
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_UpdateParameter
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdateOnePram
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_UpdatePram
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_UpdataPram
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlOil_TimeTask
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_ParameterInitialize
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeIncr
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeDecr
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_UpdatePram
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTerminalFirmwareVersion
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_PowerOnHandle
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TimeTask
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_SendResultNoteTimeTask
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TtsVolumeInit
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeIncr
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeDecr
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadInterfaceSwitchflg
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadAud
<LI><a href="#[a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_Init
<LI><a href="#[a8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Init
<LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd03H
<LI><a href="#[a67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_Init
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Get15MinuteSpeed
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadCurrentDriverInfo
<LI><a href="#[a39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_GetWriteCount
<LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
</UL>

<P><STRONG><a name="[36c]"></a>FRAM_WriteEnable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fm25c160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FRAM_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
</UL>

<P><STRONG><a name="[36d]"></a>FRAM_WriteDisable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fm25c160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FRAM_WriteDisable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFramChip
</UL>

<P><STRONG><a name="[36e]"></a>FRAM_ReadStatusRegister</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, fm25c160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadByte
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFramChip
</UL>

<P><STRONG><a name="[17e]"></a>FRAM_BufferWrite</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, fm25c160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_ReadStatusRegister
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteDisable
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteEnable
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_WriteParameter
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TaskInit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_SavePhotoNumToFram
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StatePhoto
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ErrorHandle
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Calibration
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteRecordConrtolBit
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectAlarm
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_SavePositionToFram
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_BlindReport
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_EraseBlindArea
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_EraseChip
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFramChip
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_Turn_DisposeRadioProtocol
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_DisposeRadioProtocol
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_EraseFlashArea
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ClearAlarmWord
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_SetPram
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_EraseAllDvrArea
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_GBTestSet
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlOil_TimeTask
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_OffOil
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_OpenOil
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeIncr
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeDecr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_OpenAccountAck
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_Init
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TempPositionControl
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_AlarmConfirmManual
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPeripheralUpdataType
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckSystemLogoAndVerSion
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TimeTask
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_SendResultNoteTimeTask
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTtsVolumeDecr
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTtsVolumeIncr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimeTask
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_TimeTask
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_TimeTask
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeIncr
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeDecr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMainInterfaceSelection
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadAud
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpEnd
<LI><a href="#[a8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_Write
<LI><a href="#[a8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_SaveMinuteSpeed
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveAllDriverInfo
<LI><a href="#[a3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_Write
<LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_SaveCurrentSpeedStatus
</UL>

<P><STRONG><a name="[36f]"></a>CheckFramChip</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, fm25c160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CheckFramChip &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_ReadStatusRegister
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryChipSelfCheck
</UL>

<P><STRONG><a name="[370]"></a>FRAM_WriteStatusRegister</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, fm25c160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
</UL>

<P><STRONG><a name="[371]"></a>FRAM_EraseChip</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fm25c160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
</UL>

<P><STRONG><a name="[32a]"></a>FRAM_EraseAllDvrArea</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, fm25c160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FRAM_EraseAllDvrArea &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
</UL>

<P><STRONG><a name="[372]"></a>SetLcdCopyFlag</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetLcdCopyFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetDisplayCtrlFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
</UL>

<P><STRONG><a name="[374]"></a>ClearLcdCopyFlag</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearLcdCopyFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearDisplayCtrlFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReadyNewTask
</UL>

<P><STRONG><a name="[393]"></a>GetLcdCopyFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gdi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsg
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReflashToReturnMainInterface
</UL>

<P><STRONG><a name="[376]"></a>LcdWriteData</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LcdWriteData &rArr; Lcd_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>

<P><STRONG><a name="[378]"></a>LcdWriteCmd</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteCom
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdMoveCursor
</UL>

<P><STRONG><a name="[37c]"></a>LcdConvertPage</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gdi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdMoveCursorEx
</UL>

<P><STRONG><a name="[37a]"></a>LcdMoveCursor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdMoveCursorEx
</UL>

<P><STRONG><a name="[37b]"></a>LcdMoveCursorEx</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdMoveCursor
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdConvertPage
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>

<P><STRONG><a name="[37d]"></a>LcdPaintScreen</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdMoveCursorEx
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayOneChineseCharacter
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowPic
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowWindow
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowArrow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowVerLine
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyArea
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawStr
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowCharacter
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showMeddlePoint
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOneMeddleNumber
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_dis_SpeedUnit
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOneHugeNumber
</UL>

<P><STRONG><a name="[37f]"></a>LcdSetPixel</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LcdSetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPic
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseBar
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHorLine
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVerLine
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyArea
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillArea
</UL>

<P><STRONG><a name="[381]"></a>LcdGetPixel</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LcdGetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseBar
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHorLine
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVerLine
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyArea
</UL>

<P><STRONG><a name="[37e]"></a>FillArea</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FillArea &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
</UL>

<P><STRONG><a name="[380]"></a>CopyArea</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CopyArea &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdGetPixel
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyArea
</UL>

<P><STRONG><a name="[382]"></a>DrawVerLine</STRONG> (Thumb, 146 bytes, Stack size 28 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DrawVerLine &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdGetPixel
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowVerLine
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
</UL>

<P><STRONG><a name="[383]"></a>DrawHorLine</STRONG> (Thumb, 146 bytes, Stack size 28 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DrawHorLine &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdGetPixel
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
</UL>

<P><STRONG><a name="[384]"></a>DrawRect</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DrawRect &rArr; DrawHorLine &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHorLine
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVerLine
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowWindow
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArrow
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
</UL>

<P><STRONG><a name="[385]"></a>ReverseBar</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ReverseBar &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdGetPixel
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
</UL>

<P><STRONG><a name="[386]"></a>DrawArrow</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrawArrow &rArr; DrawRect &rArr; DrawHorLine &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowArrow
</UL>

<P><STRONG><a name="[387]"></a>DrawPic</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DrawPic &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayOneChineseCharacter
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowPic
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowCharacter
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showMeddlePoint
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOneMeddleNumber
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_dis_SpeedUnit
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOneHugeNumber
</UL>

<P><STRONG><a name="[388]"></a>DrawChar</STRONG> (Thumb, 276 bytes, Stack size 104 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ReadOneEnglishCharacterFromFlash
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ReadOneChineseCharacterFromFlash
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawStr
</UL>

<P><STRONG><a name="[38b]"></a>DrawStr</STRONG> (Thumb, 252 bytes, Stack size 64 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStrEx
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
</UL>

<P><STRONG><a name="[22a]"></a>LcdClearScreen</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LcdClearScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdMoveCursorEx
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Erase
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Erase
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowOnePage
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowBorder
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CheckSelectShow
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FolderCheck
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartLogo
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryChipSelfCheck
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TrigOpenAccount
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TimeTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_TimeTask
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayClr
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_TerminalShutdown
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordIndex
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CheckSelectShow
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemInstallModel
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendShortMessage
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCarInfo
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriverInfo
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTiredDriveRecord
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecord
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShow15MinSpeed
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show15MinSpeed
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTextInfo
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoIndex
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInfoService
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoServiceIndex
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionList
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQuestionListIndex
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowEventReport
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEventReportInfoIndex
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInformationDemand
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInformationDemandIndex
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriveMile
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProductInfo
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSIMCardNumber
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowAdjustTtsVolume
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQueryServerParameter
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugShowIOstatus
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentIOstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentReportMode
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenFeatureCoefFlag
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeOk
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugSetPosition
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugSetPositionEx
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentSystemLogout
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemShowTerminalID
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultParamter
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCameraInfo
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemWeightCollector
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCANInformCollector
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemNavationScr
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintstart
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPublicMsgBox
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
</UL>

<P><STRONG><a name="[2fa]"></a>LcdClearArea</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LcdClearArea &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillArea
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayNumber16
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowButton
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowWindow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShowEx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuReShow
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SendTerminalLogout
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowTurnSpeedValue
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOnlyBigSpeed
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneBookIndex
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowTtsVolume
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugShowIOstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentSystemLogout
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
</UL>

<P><STRONG><a name="[38c]"></a>LcdCopyArea</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LcdCopyArea &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyArea
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuReShow
</UL>

<P><STRONG><a name="[38d]"></a>LcdShowVerLine</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LcdShowVerLine &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVerLine
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentIOstatus
</UL>

<P><STRONG><a name="[2f2]"></a>LcdShowHorLine</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LcdShowHorLine &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHorLine
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriverInfo
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriveMile
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSIMCardNumber
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowAdjustTtsVolume
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugShowIOstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemShowTerminalID
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintstart
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPublicMsgBox
</UL>

<P><STRONG><a name="[363]"></a>LcdShowRect</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LcdShowRect &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowButton
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowBorder
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShowEx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowItem
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemInstallModel
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowTtsVolume
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCameraInfo
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
</UL>

<P><STRONG><a name="[362]"></a>LcdReverseBar</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LcdReverseBar &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseBar
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShowEx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinLoseFocus
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowTtsVolume
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowReverseBarForOneEx
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowReverseBarForOne
</UL>

<P><STRONG><a name="[38e]"></a>LcdShowArrow</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LcdShowArrow &rArr; DrawArrow &rArr; DrawRect &rArr; DrawHorLine &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArrow
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowBar
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEventReportInfoIndex
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInformationDemandIndex
</UL>

<P><STRONG><a name="[38f]"></a>LcdShowBorder</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LcdShowBorder &rArr; LcdShowRect &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
</UL>
<BR>[Called By]<UL><LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordKeyResponse
</UL>

<P><STRONG><a name="[390]"></a>LcdShowWindow</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gdi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsg
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
</UL>

<P><STRONG><a name="[391]"></a>LcdCopyScreen</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LcdCopyScreen &rArr; SetLcdCopyFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLcdCopyFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsg
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReflashToReturnMainInterface
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
</UL>

<P><STRONG><a name="[392]"></a>LcdPasteScreen</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LcdPasteScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdMoveCursorEx
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWriteData
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLcdCopyFlag
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLcdCopyFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPhone
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
</UL>

<P><STRONG><a name="[2f3]"></a>LcdShowStr</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawStr
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsg
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowWaitPlease
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowButton
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShowEx
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowItem
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TrigOpenAccount
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TimeTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_TimeTask
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_LcdShowTime
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowTurnSpeedValue
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowMeddleNumber
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_GetContDriveTimeStr
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowValue
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordIndex
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneBookIndex
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemInstallModel
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detection_Changed_Status
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCarInfo
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriverInfo
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecord
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show15MinSpeed
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoIndex
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoServiceIndex
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQuestionListIndex
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEventReportInfoIndex
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInformationDemandIndex
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProductInfo
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSIMCardNumber
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowAdjustTtsVolume
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQueryServerParameter
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentIOstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCameraInfo
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemWeightCollector
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemNavationScr
</UL>

<P><STRONG><a name="[394]"></a>LcdShowStrEx</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LcdShowStrEx &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawStr
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowOnePage
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayString
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
</UL>

<P><STRONG><a name="[395]"></a>LcdShowPic</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LcdShowPic &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPic
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGprsOnLine
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGsmRssi
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowAzimuth
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGpsStatus
</UL>

<P><STRONG><a name="[396]"></a>LcdShowButton</STRONG> (Thumb, 214 bytes, Stack size 72 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = LcdShowButton &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPublicMsgBox
</UL>

<P><STRONG><a name="[2ea]"></a>LcdShowCaption</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CheckSelectShow
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartLogo
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SendTerminalLogout
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CheckSelectShow
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendShortMessage
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCarInfo
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriverInfo
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecordInit
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show15MinSpeed
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTextInfo
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInfoService
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionList
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowEventReport
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInformationDemand
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriveMile
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSIMCardNumber
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugShowIOstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentReportMode
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenFeatureCoefFlag
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeOk
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugSetPosition
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugSetPositionEx
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentSystemLogout
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemShowTerminalID
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultParamter
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintstart
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordKeyResponse
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPublicMsgBox
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
</UL>

<P><STRONG><a name="[22b]"></a>LcdShowCaptionEx</STRONG> (Thumb, 256 bytes, Stack size 184 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Erase
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Erase
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSDFile
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FolderCheck
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryChipSelfCheck
</UL>

<P><STRONG><a name="[397]"></a>LcdShowWaitPlease</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gdi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[398]"></a>LcdShowMsg</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, gdi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLight
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowWindow
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLcdCopyFlag
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[39a]"></a>LcdShowMsgEx</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLight
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLcdCopyFlag
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationFeatureCoef
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_DisPlay
</UL>

<P><STRONG><a name="[39b]"></a>Lcd_DisplayString</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Lcd_DisplayString &rArr; LcdShowStrEx &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShowMainInterfaceFlag
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStrEx
</UL>
<BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayOneEnglishCharacter
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[39d]"></a>Lcd_DisplayOneChineseCharacter</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Lcd_DisplayOneChineseCharacter &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPic
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayOneNumber
</UL>

<P><STRONG><a name="[39e]"></a>Lcd_DisplayOneNumber</STRONG> (Thumb, 76 bytes, Stack size 72 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Lcd_DisplayOneNumber &rArr; Lcd_DisplayOneChineseCharacter &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ReadOneChineseCharacterFromFlash
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayOneChineseCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayNumber16
</UL>

<P><STRONG><a name="[39f]"></a>Lcd_DisplayNumber16</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = Lcd_DisplayNumber16 &rArr; Lcd_DisplayOneNumber &rArr; Lcd_DisplayOneChineseCharacter &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayOneNumber
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
</UL>

<P><STRONG><a name="[3a0]"></a>LcdShowOnePage</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LcdShowOnePage &rArr; LcdShowStrEx &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunCountReset
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStrEx
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
</UL>

<P><STRONG><a name="[3a3]"></a>Gnss_BlindAreaParamInit</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gnss_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckBlindAreaStart
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_EraseBlindArea
</UL>

<P><STRONG><a name="[3a2]"></a>Gnss_EraseBlindArea</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Gnss_EraseBlindArea &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_BlindAreaParamInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckOneBlindArea
</UL>

<P><STRONG><a name="[3a4]"></a>Gnss_CheckOneBlindArea</STRONG> (Thumb, 428 bytes, Stack size 848 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = Gnss_CheckOneBlindArea &rArr; Gnss_EraseBlindArea &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeStruct
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_EraseBlindArea
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckBlindArea
</UL>

<P><STRONG><a name="[3a6]"></a>Gnss_BlindReport</STRONG> (Thumb, 684 bytes, Stack size 48 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1856 + Unknown Stack Size
<LI>Call Chain = Gnss_BlindReport &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndBlindReport
</UL>

<P><STRONG><a name="[3a7]"></a>Gnss_CheckAndBlindReport</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1864 + Unknown Stack Size
<LI>Call Chain = Gnss_CheckAndBlindReport &rArr; Gnss_BlindReport &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_GetMudulState
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_BlindReport
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gnss_app.o(.text)
</UL>
<P><STRONG><a name="[23c]"></a>Gnss_StartBlindReport</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Gnss_StartBlindReport &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gnss_app.o(.text)
</UL>
<P><STRONG><a name="[1c2]"></a>DIS_GnssArea</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gnss_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CloseCollectGNSSDetailLocatorData
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadUpdateMode
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_OriginalDataUpTrans
</UL>

<P><STRONG><a name="[3a9]"></a>Gnss_OriginalDataUpTrans</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816 + Unknown Stack Size
<LI>Call Chain = Gnss_OriginalDataUpTrans &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIS_GnssArea
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_GetMudulState
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[3aa]"></a>Gnss_GetCurTotalMeter</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Gnss_GetCurTotalMeter &rArr; MileMeter_GetTotalMile &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeedType
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetTotalMile
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_GetTotalMile
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[3b4]"></a>Gnss_CheckCmpConstantParam</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gnss_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[3af]"></a>Gnss_GetcollectFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gnss_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[3ae]"></a>Gnss_CheckAndUploadData</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = Gnss_CheckAndUploadData &rArr; Gnss_OriginalDataUpTrans &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIS_GnssArea
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRectAreaTotalNum
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRoundAreaTotalNum
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetInAreaFlag
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCloseGPRSFlag
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCollectGnssFlag
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetAreaTotalNum
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_GetcollectFlag
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckCmpConstantParam
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_GetCurTotalMeter
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_OriginalDataUpTrans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gnss_app.o(.text)
</UL>
<P><STRONG><a name="[3b6]"></a>Gnss_StartCheckAndUploadData</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gnss_StartCheckAndUploadData &rArr; LZM_PublicSetCycTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gnss_app.o(.text)
</UL>
<P><STRONG><a name="[3b7]"></a>Gnss_CheckBlindArea</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = Gnss_CheckBlindArea &rArr; Gnss_CheckOneBlindArea &rArr; Gnss_EraseBlindArea &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckOneBlindArea
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gnss_app.o(.text)
</UL>
<P><STRONG><a name="[3b8]"></a>Gnss_CheckBlindAreaStart</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gnss_CheckBlindAreaStart &rArr; LZM_PublicSetCycTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_BlindAreaParamInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gnss_app.o(.text)
</UL>
<P><STRONG><a name="[3b9]"></a>Gnss_WriteOneGnssDataToFlash</STRONG> (Thumb, 504 bytes, Stack size 856 bytes, gnss_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeStruct
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_SaveCurCollectDataToFlash
</UL>

<P><STRONG><a name="[3d8]"></a>Gnss_CommRxIsr</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gnss_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_RxIsr
</UL>

<P><STRONG><a name="[b95]"></a>Gnss_ShowDebugInfo</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gnss_app.o(.text), UNUSED)

<P><STRONG><a name="[3ba]"></a>EN_GnssAreaEx</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EN_GnssAreaEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EN_GnssArea
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadUpdateMode
</UL>

<P><STRONG><a name="[1c4]"></a>EN_GnssArea</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EN_GnssArea &rArr; EN_GnssAreaEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EN_GnssAreaEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_OpenCollectGNSSDetailLocatorData
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadUpdateMode
</UL>

<P><STRONG><a name="[3c2]"></a>Delay_nop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gnss_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadParam
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssCheckChangePar
</UL>

<P><STRONG><a name="[3bb]"></a>GNSS_BaudrateInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gnss_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRateInitialize
</UL>

<P><STRONG><a name="[3bc]"></a>Gnss_ReadCollectFreq</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Gnss_ReadCollectFreq &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_UpdataUploadParam
</UL>

<P><STRONG><a name="[3bd]"></a>Gnss_ReadUpdateMode</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Gnss_ReadUpdateMode &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EN_GnssArea
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIS_GnssArea
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetInAreaFlag
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCollectGnssFlag
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EN_GnssAreaEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_UpdataUploadParam
</UL>

<P><STRONG><a name="[b96]"></a>Gnss_GetCurUpdateMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gnss_app.o(.text), UNUSED)

<P><STRONG><a name="[3be]"></a>Gnss_ReadBaseData</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Gnss_ReadBaseData &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_UpdataUploadParam
</UL>

<P><STRONG><a name="[3bf]"></a>Gnss_UpdataUploadParam</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Gnss_UpdataUploadParam &rArr; Gnss_ReadBaseData &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadBaseData
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadUpdateMode
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadCollectFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadParam
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssCheckChangePar
</UL>

<P><STRONG><a name="[3c0]"></a>Check_cmd_String</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Check_cmd_String &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadParam
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssCheckChangePar
</UL>

<P><STRONG><a name="[349]"></a>GnssCheckChangePar</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GnssCheckChangePar &rArr; Gnss_UpdataUploadParam &rArr; Gnss_ReadBaseData &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_SendData
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_cmd_String
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_UpdataUploadParam
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_nop
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[b97]"></a>Gnss_App_TimeTask</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gnss_app.o(.text), UNUSED)

<P><STRONG><a name="[3c3]"></a>Gnss_SaveCurCollectDataToFlash</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gnss_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
</UL>

<P><STRONG><a name="[3c4]"></a>Gnss_ReadParam</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = Gnss_ReadParam &rArr; Gnss_UpdataUploadParam &rArr; Gnss_ReadBaseData &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_SendData
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_cmd_String
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_UpdataUploadParam
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_nop
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gnss_app.o(.text)
</UL>
<P><STRONG><a name="[3c5]"></a>InitConfigGNSS</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InitConfigGNSS &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[3c6]"></a>Gnss_CheckReckData</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Gnss_CheckReckData
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssRealData_TimeTask
</UL>

<P><STRONG><a name="[4c]"></a>GnssRealData_TimeTask</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gnss_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GnssRealData_TimeTask &rArr; LZM_PublicTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckReckData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[b98]"></a>CmpConstantPar</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gnss_app.o(.text), UNUSED)

<P><STRONG><a name="[369]"></a>GpioOutInit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gpiocontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GpioOutInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Init
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_Init
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_Init
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_IoInitial
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_BeepIoInit
</UL>

<P><STRONG><a name="[36a]"></a>GpioOutOn</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpiocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSpeakerConrtolBit
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteCom
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLight
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteStatusRegister
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_ReadStatusRegister
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteDisable
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteEnable
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_Init
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLightFinish
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KeyHandler
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert_KEYQueue
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_IoInitial
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowText_EvTask
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_OpenAllUserPower
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CloseAllUserPower
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangCurrentIOOutstatus
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCurrentLcdBackLight
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
</UL>

<P><STRONG><a name="[36b]"></a>GpioOutOff</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpiocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSpeakerConrtolBit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunCountReset
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteCom
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLight
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteStatusRegister
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_ReadStatusRegister
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteDisable
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteEnable
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicSysParamterInit
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLightFinish
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenLcdBackLight
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CloseAllUserPower
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangCurrentIOOutstatus
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCurrentLcdBackLight
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
</UL>

<P><STRONG><a name="[b99]"></a>GpioOutToggle</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gpiocontrol.o(.text), UNUSED)

<P><STRONG><a name="[3c7]"></a>GpioInInit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gpiocontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GpioInInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Init
</UL>

<P><STRONG><a name="[3c8]"></a>GpioInGetState</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gpiocontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GpioInGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectDefine2Status
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectAlarm
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectExtCarStatus
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectStatus
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectFrontDoor
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectPhoneKey
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckRDYFlag
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoicePlay
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStr
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckPackVoiceStr
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentIOstatus
</UL>

<P><STRONG><a name="[6c7]"></a>Gps_ReadStaNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gps_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
</UL>

<P><STRONG><a name="[3ca]"></a>Gps_AdjustRtc</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Gps_AdjustRtc &rArr; SetRtc &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeStruct
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtc
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
</UL>

<P><STRONG><a name="[3cf]"></a>Gps_DataIsOk</STRONG> (Thumb, 166 bytes, Stack size 28 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Gps_DataIsOk
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
</UL>

<P><STRONG><a name="[3d0]"></a>Gps_GprmcIsLocation</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Gps_GprmcIsLocation
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
</UL>

<P><STRONG><a name="[3d2]"></a>Gps_GprmcParse</STRONG> (Thumb, 1468 bytes, Stack size 44 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Gps_GprmcParse
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
</UL>

<P><STRONG><a name="[3d3]"></a>Gps_GpggaParse</STRONG> (Thumb, 748 bytes, Stack size 40 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Gps_GpggaParse
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
</UL>

<P><STRONG><a name="[21a]"></a>Gps_CopygPosition</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, gps_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AreaManage_ScanTask
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckGpsDataChange
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurPositionInfoDataBlock
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanTask
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_GetPoint
<LI><a href="#[a26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePositionNoChange
</UL>

<P><STRONG><a name="[6c9]"></a>Gps_CopyPosition</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, gps_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
</UL>

<P><STRONG><a name="[3d5]"></a>Gps_UpdatagPosition</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, gps_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
</UL>

<P><STRONG><a name="[1a7]"></a>Gps_ReadSpeed</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsDeepFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurSpeed
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetSecondSpeed
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlOil_TimeTask
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_MinuteSpeed
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckIsPhoneServerRunStatus
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetInstantSpeed
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vss_TimeTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_RunOrStop
<LI><a href="#[a2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_CalSecondSpeed
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_SaveCurrentSpeedStatus
</UL>

<P><STRONG><a name="[b9a]"></a>Gps_ReadStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gps_app.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>Gps_ReadCourse</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gps_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Turn_check
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Corner_TimeTask
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
</UL>

<P><STRONG><a name="[b9b]"></a>Gps_ReadCourseDiv2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gps_app.o(.text), UNUSED)

<P><STRONG><a name="[3cc]"></a>Gps_PowerOnUpdataPosition</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Gps_PowerOnUpdataPosition &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[3cd]"></a>Gps_SavePositionToFram</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Gps_SavePositionToFram &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
</UL>

<P><STRONG><a name="[3d4]"></a>Gps_GetRunFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gps_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
</UL>

<P><STRONG><a name="[3ce]"></a>Gps_IsInRunning</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Gps_IsInRunning
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsDeepFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
</UL>

<P><STRONG><a name="[72]"></a>Gps_EvTask</STRONG> (Thumb, 1332 bytes, Stack size 32 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Gps_EvTask &rArr; Gps_AdjustRtc &rArr; SetRtc &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteStatusBit
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_GetRunFlag
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_SavePositionToFram
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_UpdatagPosition
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_GpggaParse
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_GprmcParse
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_GprmcIsLocation
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_DataIsOk
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_AdjustRtc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>Gps_TimeTask</STRONG> (Thumb, 484 bytes, Stack size 8 bytes, gps_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = Gps_TimeTask &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteStatusBit
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_IsInRunning
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_SavePositionToFram
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_AdjustRtc
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[3d6]"></a>Gps_Init</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gps_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Gps_Init &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsartITConfig
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_NVIC_Config
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[3d7]"></a>Gps_RxIsr</STRONG> (Thumb, 478 bytes, Stack size 8 bytes, gps_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gps_RxIsr &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEvTask
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteStatusBit
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CommRxIsr
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[3db]"></a>Gps_TxIsr</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, gps_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Gps_TxIsr &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSendData
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsartITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[b9c]"></a>Gps_ReadGPRMC</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gps_driver.o(.text), UNUSED)

<P><STRONG><a name="[b9d]"></a>Gps_ReadGPGSV</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gps_driver.o(.text), UNUSED)

<P><STRONG><a name="[3c1]"></a>Gps_SendData</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gps_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Gps_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsartITConfig
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadParam
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssCheckChangePar
</UL>

<P><STRONG><a name="[3dd]"></a>GPS_putc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gps_driver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_putstr
</UL>

<P><STRONG><a name="[3dc]"></a>GPS_putstr</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, gps_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_putc
</UL>

<P><STRONG><a name="[39]"></a>HeartBeat_TimeTask</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, heartbeat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = HeartBeat_TimeTask &rArr; RadioProtocol_TerminalHeartbeat &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalHeartbeat
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[33d]"></a>HeartBeat_UpdatePram</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, heartbeat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = HeartBeat_UpdatePram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[6b4]"></a>Heartbeat_ClrHeartbeatCount</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, heartbeat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ProtocolParse
</UL>

<P><STRONG><a name="[3df]"></a>E2_Check_I2C_Ack</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, iccard_e2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = E2_Check_I2C_Ack &rArr; ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckAck
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteOneByte
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadOneByte
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteBytes
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadBytes
</UL>

<P><STRONG><a name="[248]"></a>E2_ReadOneByte</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, iccard_e2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = E2_ReadOneByte &rArr; E2_Check_I2C_Ack &rArr; ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Start
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendNAck
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendByte
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_ReadByte
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_Check_I2C_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadRegister
</UL>

<P><STRONG><a name="[3e5]"></a>E2_ReadBytes</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, iccard_e2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = E2_ReadBytes &rArr; E2_Check_I2C_Ack &rArr; ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Start
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendNAck
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendByte
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendAck
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_ReadByte
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_Check_I2C_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_24XX_HL_Buf_Read
</UL>

<P><STRONG><a name="[24c]"></a>E2_WriteOneByte</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, iccard_e2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = E2_WriteOneByte &rArr; E2_Check_I2C_Ack &rArr; ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Start
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendByte
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckAck
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_Check_I2C_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_WriteRegisterAndCheck
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_WriteRegister
</UL>

<P><STRONG><a name="[3e7]"></a>E2_WriteBytes</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, iccard_e2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Start
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendByte
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckAck
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_Check_I2C_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_24XX_HL_Buf_Write
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_24XX_HL_Byte_Write
</UL>

<P><STRONG><a name="[3e8]"></a>EEPROM_HL_CheckOk</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, iccard_e2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckDevice
</UL>

<P><STRONG><a name="[3e9]"></a>EEPROM_24XX_HL_Byte_Write</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, iccard_e2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteBytes
</UL>

<P><STRONG><a name="[3ea]"></a>EEPROM_24XX_HL_Buf_Read</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, iccard_e2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EEPROM_24XX_HL_Buf_Read &rArr; E2_ReadBytes &rArr; E2_Check_I2C_Ack &rArr; ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateRead
</UL>

<P><STRONG><a name="[3eb]"></a>EEPROM_24XX_HL_Buf_Write</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, iccard_e2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteBytes
</UL>

<P><STRONG><a name="[3ec]"></a>SL4442_Buffer_Read</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, iccard_e2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SL4442_Buffer_Read &rArr; Rmm &rArr; Read_Mod &rArr; InByte &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendComm
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rmm
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proce_Mod
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_On
</UL>
<BR>[Called By]<UL><LI><a href="#[9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateRead
</UL>

<P><STRONG><a name="[3f1]"></a>ICCARD_M3_SDA_OUT</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ICCARD_M3_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_Init
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Start
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendNAck
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendByte
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendAck
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_ReadByte
</UL>

<P><STRONG><a name="[3f2]"></a>ICCARD_M3_SDA_IN</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_ReadByte
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckAck
</UL>

<P><STRONG><a name="[3f3]"></a>ICCARD_M3_CLK_OUT</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ICCARD_M3_CLK_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_Init
</UL>

<P><STRONG><a name="[3f4]"></a>ICCARD_M3_I2C_Delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, iccard_m3.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M3_I2C_Delays
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Start
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendNAck
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendByte
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendAck
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_ReadByte
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckAck
</UL>

<P><STRONG><a name="[261]"></a>ICCARD_M3_I2C_Stop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ICCARD_M3_I2C_Stop &rArr; ICCARD_M3_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Delay
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckDevice
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteOneByte
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadOneByte
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_Init
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_HL_CheckOk
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteBytes
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadBytes
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_Check_I2C_Ack
</UL>

<P><STRONG><a name="[3f5]"></a>ICCARD_M3_Init</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ICCARD_M3_Init &rArr; ICCARD_M3_I2C_Stop &rArr; ICCARD_M3_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_CLK_OUT
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckDevice
<LI><a href="#[9ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_Init
</UL>

<P><STRONG><a name="[3e1]"></a>ICCARD_M3_I2C_Start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ICCARD_M3_I2C_Start &rArr; ICCARD_M3_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Delay
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckDevice
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteOneByte
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadOneByte
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteBytes
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadBytes
</UL>

<P><STRONG><a name="[3e2]"></a>ICCARD_M3_I2C_SendByte</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ICCARD_M3_I2C_SendByte &rArr; ICCARD_M3_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Delay
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckDevice
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteOneByte
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadOneByte
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteBytes
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadBytes
</UL>

<P><STRONG><a name="[3e3]"></a>ICCARD_M3_I2C_ReadByte</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ICCARD_M3_I2C_ReadByte &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Delay
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_IN
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_OUT
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadOneByte
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadBytes
</UL>

<P><STRONG><a name="[3e0]"></a>ICCARD_M3_I2C_CheckAck</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Delay
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_IN
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckDevice
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteOneByte
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteBytes
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_Check_I2C_Ack
</UL>

<P><STRONG><a name="[3e6]"></a>ICCARD_M3_I2C_SendAck</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ICCARD_M3_I2C_SendAck &rArr; ICCARD_M3_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Delay
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadBytes
</UL>

<P><STRONG><a name="[3e4]"></a>ICCARD_M3_I2C_SendNAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ICCARD_M3_I2C_SendNAck &rArr; ICCARD_M3_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Delay
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadOneByte
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadBytes
</UL>

<P><STRONG><a name="[260]"></a>ICCARD_M3_I2C_CheckDevice</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ICCARD_M3_I2C_CheckDevice &rArr; ICCARD_M3_Init &rArr; ICCARD_M3_I2C_Stop &rArr; ICCARD_M3_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_Init
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Start
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendByte
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckAck
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_HL_CheckOk
</UL>

<P><STRONG><a name="[3f6]"></a>M3_I2C_Delays</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstCard
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mod
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop_Comm
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Comm
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutByte
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InByte
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proce_Mod
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_On
</UL>

<P><STRONG><a name="[3f7]"></a>InByte</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InByte &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M3_I2C_Delays
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstCard
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mod
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_On
</UL>

<P><STRONG><a name="[3ed]"></a>Power_On</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Power_On &rArr; InByte &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InByte
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M3_I2C_Delays
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL4442_Buffer_Read
</UL>

<P><STRONG><a name="[3f8]"></a>OutByte</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OutByte &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M3_I2C_Delays
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendComm
</UL>

<P><STRONG><a name="[3f9]"></a>Start_Comm</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Start_Comm &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M3_I2C_Delays
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendComm
</UL>

<P><STRONG><a name="[3fa]"></a>Stop_Comm</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Stop_Comm &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M3_I2C_Delays
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendComm
</UL>

<P><STRONG><a name="[3ee]"></a>SendComm</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SendComm &rArr; OutByte &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop_Comm
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Comm
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rmm
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL4442_Buffer_Read
</UL>

<P><STRONG><a name="[3ef]"></a>Proce_Mod</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Proce_Mod &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M3_I2C_Delays
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL4442_Buffer_Read
</UL>

<P><STRONG><a name="[3fb]"></a>Read_Mod</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Read_Mod &rArr; InByte &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InByte
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M3_I2C_Delays
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rmm
</UL>

<P><STRONG><a name="[3fc]"></a>RstCard</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RstCard &rArr; InByte &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InByte
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M3_I2C_Delays
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rmm
</UL>

<P><STRONG><a name="[3f0]"></a>Rmm</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, iccard_m3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Rmm &rArr; Read_Mod &rArr; InByte &rArr; M3_I2C_Delays
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstCard
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mod
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendComm
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL4442_Buffer_Read
</UL>

<P><STRONG><a name="[404]"></a>Io_InitDefine2StatusHighValid</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Init
</UL>

<P><STRONG><a name="[3fe]"></a>Io_WriteAlarmHighValidBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_InitAlarmHighValid
</UL>

<P><STRONG><a name="[3fd]"></a>Io_InitAlarmHighValid</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Io_InitAlarmHighValid
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmHighValidBit
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Init
</UL>

<P><STRONG><a name="[400]"></a>Io_WriteExtCarStatusHighValidBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_InitExtCarStatusHighValid
</UL>

<P><STRONG><a name="[3ff]"></a>Io_InitExtCarStatusHighValid</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Io_InitExtCarStatusHighValid
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteExtCarStatusHighValidBit
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Init
</UL>

<P><STRONG><a name="[402]"></a>Io_WriteStatusHighValidBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_InitStatusHighValid
</UL>

<P><STRONG><a name="[401]"></a>Io_InitStatusHighValid</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Io_InitStatusHighValid
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteStatusHighValidBit
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Init
</UL>

<P><STRONG><a name="[403]"></a>Io_Init</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Io_Init &rArr; GpioInInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_InitStatusHighValid
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_InitExtCarStatusHighValid
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_InitAlarmHighValid
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_InitDefine2StatusHighValid
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInInit
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[3d1]"></a>Io_WriteStatusBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectLoad
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_RxIsr
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_UpdataPram
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlOil_TimeTask
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetCarLoadStatus
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[1ce]"></a>Io_WriteAlarmBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateCheck
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_CrashAlarm
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearInOutAreaAlarmBit
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInOutAreaAlarmBit
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearOpenDoorAlarmBit
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetOpenDoorAlarmBit
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteOvertimeConrtolBit
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WritePreOvertimeConrtolBit
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteOverSpeedConrtolBit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectMainPower
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_UpdataPram
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdProtocolParse
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommResponeTimeout
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRouteAreaTask
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckDriverTime
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_SetDriverTimeAlarm
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeInOutAlarm
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ClearAlarm
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_AlarmConfirmManual
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vss_TimeTask
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_StopAlarm
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
<LI><a href="#[a3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_WriteEarlyAlarmFlagBit
</UL>

<P><STRONG><a name="[343]"></a>Io_UpdataPram</STRONG> (Thumb, 716 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Io_UpdataPram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteStatusBit
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[405]"></a>Io_DetectMainPower</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Io_DetectMainPower
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
</UL>

<P><STRONG><a name="[406]"></a>Io_DetectPhoneKey</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Io_DetectPhoneKey &rArr; GpioInGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
</UL>

<P><STRONG><a name="[407]"></a>Io_DetectFrontDoor</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Io_DetectFrontDoor &rArr; GpioInGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
</UL>

<P><STRONG><a name="[409]"></a>Io_WriteIoStatusBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectStatus
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckForEnterStopMode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_TimeTask
</UL>

<P><STRONG><a name="[16c]"></a>Io_ReadStatusBit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Turn_check
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_TimeTask
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Corner_TimeTask
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleTiming
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleCheck
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AreaManage_ScanTask
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckOpenDoorAlarm
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectStatus
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckACCStatus
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryStatusAlarm
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckForEnterStopMode
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_TerminalShutdown
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_TimeTask
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ScanTask
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetLink1NextReportPoint
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanTask
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vss_TimeTask
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_TimeTask
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detection_Changed_Status
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentIOstatus
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCurrentLcdBackLight
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Chk_Run
<LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_SaveCurrentSpeedStatus
<LI><a href="#[a29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WriteStop
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
<LI><a href="#[a26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePositionNoChange
</UL>

<P><STRONG><a name="[408]"></a>Io_DetectStatus</STRONG> (Thumb, 346 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Io_DetectStatus &rArr; GpioInGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteIoStatusBit
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
</UL>

<P><STRONG><a name="[40a]"></a>Io_DetectExtCarStatus</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Io_DetectExtCarStatus &rArr; GpioInGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
</UL>

<P><STRONG><a name="[40b]"></a>Io_DetectAlarm</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Io_DetectAlarm &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
</UL>

<P><STRONG><a name="[33]"></a>Io_TimeTask</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Io_TimeTask &rArr; Io_DetectAlarm &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectAlarm
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectExtCarStatus
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectStatus
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectFrontDoor
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectPhoneKey
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectMainPower
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEvTask
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[59b]"></a>Io_ReadStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryStatusAlarm
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_StatusChange
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detection_Changed_Status
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[59c]"></a>Io_ReadExtCarStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryStatusAlarm
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_AckE1H
</UL>

<P><STRONG><a name="[59d]"></a>Io_ReadExtCarStatusBit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryStatusAlarm
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCarInfo
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentIOstatus
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_SaveCurrentSpeedStatus
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_AckE1H
</UL>

<P><STRONG><a name="[b9e]"></a>Io_WriteExtCarStatusBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[6c5]"></a>Io_ReadIoStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
</UL>

<P><STRONG><a name="[b9f]"></a>Io_ReadIoStatusBit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[ba0]"></a>Io_ReadSuoMeiStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[ba1]"></a>Io_ReadSuoMeiStatusBit</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[ba2]"></a>Io_WriteSuoMeiStatusBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[218]"></a>Io_ReadAlarmMaskBit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckScanTask
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckGpsDataChange
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckScanTask
</UL>

<P><STRONG><a name="[450]"></a>Io_ReadAlarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryStatusAlarm
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_CheckAlarmStatus
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetManualAlarmSubjoinInfo
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_AlarmChange
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[ba3]"></a>Io_ReadKeyAlarm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[6bc]"></a>Io_ReadSelfDefine2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
</UL>

<P><STRONG><a name="[76b]"></a>Io_ReadSelfDefine2Bit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemWeightCollector
</UL>

<P><STRONG><a name="[220]"></a>Io_ReadAlarmBit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_CrashAlarm
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetInOutAreaAlarmSubjoinInfo
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_CheckAlarmStatus
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckAlarmVoiceTask
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDeviationAlarmInfo
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRouteAreaTask
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetInOutAlarmSubjoinInfo
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDriveAlarmInfoSubjoinInfo
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_Link2ReportOpenFlag
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetLink1NextReportPoint
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetManualAlarmSubjoinInfo
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_AlarmConfirmManual
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentIOstatus
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemNavationScr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[ba4]"></a>Io_ReadKeyAlarmBit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[ba5]"></a>Io_WriteKeyAlarmBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>Io_WriteSelfDefine2Bit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_TimeTask
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_DetectLoad
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_ComRec
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_ComSend
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
</UL>

<P><STRONG><a name="[6c4]"></a>Io_ReadOverSpeedConrtolBit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
</UL>

<P><STRONG><a name="[40d]"></a>Io_WriteOverSpeedConrtolBit</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Io_WriteOverSpeedConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_WriteAlarmFlagBit
</UL>

<P><STRONG><a name="[ba6]"></a>Io_ReadPreOvertimeConrtolBit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[40e]"></a>Io_WritePreOvertimeConrtolBit</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Io_WritePreOvertimeConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
</UL>

<P><STRONG><a name="[a4c]"></a>Io_ReadOvertimeConrtolBit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightWrite
</UL>

<P><STRONG><a name="[40f]"></a>Io_WriteOvertimeConrtolBit</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Io_WriteOvertimeConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
</UL>

<P><STRONG><a name="[ba7]"></a>Io_ReadRecordConrtol</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[410]"></a>Io_WriteRecordConrtolBit</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Io_WriteRecordConrtolBit &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[695]"></a>Io_ReadRecordConrtolBit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
</UL>

<P><STRONG><a name="[411]"></a>Io_WriteMicConrtolBit</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Io_WriteMicConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_MicOff
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_MicOn
</UL>

<P><STRONG><a name="[412]"></a>Io_WriteSpeakerConrtolBit</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_Init
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceInit
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOnPower
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOn
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOff
</UL>

<P><STRONG><a name="[413]"></a>Io_DetectDefine2Status</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
</UL>

<P><STRONG><a name="[414]"></a>Io_DetectLoad</STRONG> (Thumb, 400 bytes, Stack size 32 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSelfDefine2Bit
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteStatusBit
</UL>

<P><STRONG><a name="[415]"></a>Io_PowerOnDetectMainPower</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Io_PowerOnDetectMainPower
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba8]"></a>Io_WriteSelfDefine2HighValidBit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[ba9]"></a>Io_GetCarVoltageType</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, io.o(.text), UNUSED)

<P><STRONG><a name="[32d]"></a>Io_ClearAlarmWord</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Io_ClearAlarmWord &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[32b]"></a>Io_ClearStatusWord</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[32c]"></a>Io_ClearExtCarStatusWord</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[416]"></a>JointechOiLCost_COM_Buf_Write</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = JointechOiLCost_COM_Buf_Write &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_WriteBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_E
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_R
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataDownTrans
</UL>

<P><STRONG><a name="[418]"></a>JointechOiLCost_Protocol_Verify_Calc</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = JointechOiLCost_Protocol_Verify_Calc
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Extract
</UL>

<P><STRONG><a name="[baa]"></a>JointechOiLCost_Is_ASCII_NumDec</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text), UNUSED)

<P><STRONG><a name="[bab]"></a>JointechOiLCost_Is_ASCII_NumHex</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text), UNUSED)

<P><STRONG><a name="[419]"></a>JointechOiLCost_2ASCII_To_1Hex</STRONG> (Thumb, 86 bytes, Stack size 36 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = JointechOiLCost_2ASCII_To_1Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_R
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Parser
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Extract
</UL>

<P><STRONG><a name="[41d]"></a>JointechOiLCost_1Hex_To_2ASCII</STRONG> (Thumb, 58 bytes, Stack size 36 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = JointechOiLCost_1Hex_To_2ASCII
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_G
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
</UL>

<P><STRONG><a name="[421]"></a>JointechOiLCost_2ASCII_To_1Dec</STRONG> (Thumb, 84 bytes, Stack size 28 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = JointechOiLCost_2ASCII_To_1Dec
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_G
</UL>

<P><STRONG><a name="[41c]"></a>JointechOiLCost_1Dec_To_2ASCII</STRONG> (Thumb, 50 bytes, Stack size 36 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = JointechOiLCost_1Dec_To_2ASCII
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_D
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Operation_Damp
</UL>

<P><STRONG><a name="[417]"></a>JointechOiLCost_Protocol_Extract</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = JointechOiLCost_Protocol_Extract &rArr; JointechOiLCost_2ASCII_To_1Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_2ASCII_To_1Hex
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Verify_Calc
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost
</UL>

<P><STRONG><a name="[41a]"></a>JointechOiLCost_Protocol_Parser</STRONG> (Thumb, 140 bytes, Stack size 28 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = JointechOiLCost_Protocol_Parser &rArr; JointechOiLCost_2ASCII_To_1Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_2ASCII_To_1Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost
</UL>

<P><STRONG><a name="[41b]"></a>JointechOiLCost_Protocol_Packet</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = JointechOiLCost_Protocol_Packet &rArr; JointechOiLCost_1Dec_To_2ASCII
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_1Dec_To_2ASCII
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_1Hex_To_2ASCII
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Verify_Calc
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_R
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_N
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_I
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_H
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_G
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_E
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_D
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_C
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_B
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_A
</UL>

<P><STRONG><a name="[41e]"></a>JointechOiLCost_Process_CMD_A</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = JointechOiLCost_Process_CMD_A &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[424]"></a>JointechOiLCost_Process_CMD_B</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JointechOiLCost_Process_CMD_B
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[425]"></a>JointechOiLCost_Process_CMD_C</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JointechOiLCost_Process_CMD_C
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[426]"></a>JointechOiLCost_Process_CMD_D</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JointechOiLCost_Process_CMD_D
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[427]"></a>JointechOiLCost_Process_CMD_E</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JointechOiLCost_Process_CMD_E
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[420]"></a>JointechOiLCost_Process_CMD_G</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = JointechOiLCost_Process_CMD_G &rArr; JointechOiLCost_2ASCII_To_1Dec
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_2ASCII_To_1Dec
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[428]"></a>JointechOiLCost_Process_CMD_H</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JointechOiLCost_Process_CMD_H
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[429]"></a>JointechOiLCost_Process_CMD_I</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = JointechOiLCost_Process_CMD_I
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[42a]"></a>JointechOiLCost_Process_CMD_N</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = JointechOiLCost_Process_CMD_N
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[422]"></a>JointechOiLCost_Process_CMD_R</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = JointechOiLCost_Process_CMD_R &rArr; JointechOiLCost_2ASCII_To_1Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_2ASCII_To_1Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
</UL>

<P><STRONG><a name="[423]"></a>JointechOiLCost_Process_CMD</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = JointechOiLCost_Process_CMD &rArr; JointechOiLCost_Process_CMD_R &rArr; JointechOiLCost_2ASCII_To_1Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_R
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_N
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_I
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_H
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_G
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_E
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_D
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_C
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_B
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_A
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost
</UL>

<P><STRONG><a name="[42b]"></a>JointechOiLCost_Request_CMD_A</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, jointechoil_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[42c]"></a>JointechOiLCost_Request_CMD_B</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, jointechoil_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
</UL>

<P><STRONG><a name="[42d]"></a>JointechOiLCost_Request_CMD_C</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, jointechoil_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
</UL>

<P><STRONG><a name="[42e]"></a>JointechOiLCost_Request_CMD_D</STRONG> (Thumb, 110 bytes, Stack size 28 bytes, jointechoil_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_1Dec_To_2ASCII
</UL>

<P><STRONG><a name="[42f]"></a>JointechOiLCost_Request_CMD_E</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = JointechOiLCost_Request_CMD_E &rArr; JointechOiLCost_Protocol_Packet &rArr; JointechOiLCost_1Dec_To_2ASCII
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_E
</UL>

<P><STRONG><a name="[430]"></a>JointechOiLCost_Request_CMD_G</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, jointechoil_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_1Hex_To_2ASCII
</UL>

<P><STRONG><a name="[431]"></a>JointechOiLCost_Request_CMD_H</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
</UL>

<P><STRONG><a name="[432]"></a>JointechOiLCost_Request_CMD_I</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
</UL>

<P><STRONG><a name="[433]"></a>JointechOiLCost_Request_CMD_N</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
</UL>

<P><STRONG><a name="[434]"></a>JointechOiLCost_Request_CMD_R</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = JointechOiLCost_Request_CMD_R &rArr; JointechOiLCost_Protocol_Packet &rArr; JointechOiLCost_1Dec_To_2ASCII
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Packet
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_R
</UL>

<P><STRONG><a name="[437]"></a>JointechOiLCost_Error_Set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_E
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_R
</UL>

<P><STRONG><a name="[435]"></a>JointechOiLCost_StateMachine_R</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = JointechOiLCost_StateMachine_R &rArr; JointechOiLCost_COM_Buf_Write &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Error_Set
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_R
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_COM_Buf_Write
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StageMain_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine
</UL>

<P><STRONG><a name="[439]"></a>JointechOiLCost_StateMachine_I</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = JointechOiLCost_StateMachine_I &rArr; JointechOiLCost_Operation_Damp &rArr; JointechOiLCost_1Dec_To_2ASCII
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Operation_Damp
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine
</UL>

<P><STRONG><a name="[43a]"></a>JointechOiLCost_StateMachine_H</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = JointechOiLCost_StateMachine_H &rArr; JointechOiLCost_StageMain_Set &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StageMain_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine
</UL>

<P><STRONG><a name="[43b]"></a>JointechOiLCost_StateMachine_E</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = JointechOiLCost_StateMachine_E &rArr; JointechOiLCost_COM_Buf_Write &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Error_Set
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_E
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_COM_Buf_Write
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StageMain_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine
</UL>

<P><STRONG><a name="[43f]"></a>Task_JointechOiLCost</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Task_JointechOiLCost &rArr; JointechOiLCost_Protocol_Extract &rArr; JointechOiLCost_2ASCII_To_1Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Parser
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Extract
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost_Init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_TimeTask
</UL>

<P><STRONG><a name="[6a]"></a>JointechOiLCost_TimeTask</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = JointechOiLCost_TimeTask &rArr; Task_JointechOiLCost &rArr; JointechOiLCost_Protocol_Extract &rArr; JointechOiLCost_2ASCII_To_1Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[443]"></a>JointechOiLCost_OilVolumeCur_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilVolume
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
</UL>

<P><STRONG><a name="[445]"></a>JointechOiLCost_OilLevelPercentCur_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilLevelPercent
</UL>

<P><STRONG><a name="[440]"></a>JointechOiLCost_CopyBuf</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JointechOiLCost_CopyBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_OilProtocolCheck
</UL>

<P><STRONG><a name="[bac]"></a>JointechOiLCost_Error_Clr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text), UNUSED)

<P><STRONG><a name="[bad]"></a>JointechOiLCost_Error_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text), UNUSED)

<P><STRONG><a name="[bae]"></a>JointechOiLCost_Online_Set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text), UNUSED)

<P><STRONG><a name="[baf]"></a>JointechOiLCost_Online_Clr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text), UNUSED)

<P><STRONG><a name="[bb0]"></a>JointechOiLCost_Online_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jointechoil_protocol.o(.text), UNUSED)

<P><STRONG><a name="[441]"></a>JointechOiLCost_OilProtocolCheck</STRONG> (Thumb, 442 bytes, Stack size 48 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = JointechOiLCost_OilProtocolCheck &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_CopyBuf
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCommProtocolParse
</UL>

<P><STRONG><a name="[442]"></a>JointechOiLCost_GetSubjoinInfoCurOilVolume</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = JointechOiLCost_GetSubjoinInfoCurOilVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_OilVolumeCur_Get
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
</UL>

<P><STRONG><a name="[444]"></a>JointechOiLCost_GetSubjoinInfoCurOilLevelPercent</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = JointechOiLCost_GetSubjoinInfoCurOilLevelPercent
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_OilLevelPercentCur_Get
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
</UL>

<P><STRONG><a name="[375]"></a>Lcd_ClearDisplayCtrlFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLcdCopyFlag
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowText_EvTask
</UL>

<P><STRONG><a name="[446]"></a>Lcd_SetMainRedrawFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TimeTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_TimeTask
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowText_EvTask
</UL>

<P><STRONG><a name="[7a]"></a>Lcd_ShowText_EvTask</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lcd_ShowText_EvTask &rArr; SystemAutoShowText &rArr; LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearDisplayCtrlFlag
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowText
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextForMsgBusyFlag
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenLcdBackLight
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetMainRedrawFlag
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[44a]"></a>Lcd_ShowGpsStatus</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Lcd_ShowGpsStatus &rArr; LcdShowPic &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowPic
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
</UL>

<P><STRONG><a name="[44b]"></a>Lcd_ShowAzimuth</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Lcd_ShowAzimuth &rArr; LcdShowPic &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowPic
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeGraphFormatToChineseFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
</UL>

<P><STRONG><a name="[44d]"></a>Lcd_ShowGsmRssi</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Lcd_ShowGsmRssi &rArr; LcdShowPic &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowPic
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
</UL>

<P><STRONG><a name="[44e]"></a>Lcd_ShowGprsOnLine</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Lcd_ShowGprsOnLine &rArr; LcdShowPic &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowPic
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
</UL>

<P><STRONG><a name="[44f]"></a>Lcd_CheckAlarmStatus</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lcd_CheckAlarmStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
</UL>

<P><STRONG><a name="[451]"></a>Lcd_GetContDriveTimeStr</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = Lcd_GetContDriveTimeStr &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetDriveTime
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
</UL>

<P><STRONG><a name="[453]"></a>Lcd_ShowSafetyCaution</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = Lcd_ShowSafetyCaution &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_GetFlag
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_CheckAlarmStatus
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowTurnSpeedValue
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
</UL>

<P><STRONG><a name="[455]"></a>Lcd_ShowOneHugeNumber</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Lcd_ShowOneHugeNumber &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPic
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOnlyBigSpeed
</UL>

<P><STRONG><a name="[456]"></a>Lcd_dis_SpeedUnit</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Lcd_dis_SpeedUnit &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPic
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowHugeNumber
</UL>

<P><STRONG><a name="[457]"></a>Lcd_ShowOneMeddleNumber</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Lcd_ShowOneMeddleNumber &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPic
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowTurnSpeedValue
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowMeddleNumber
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowHugeNumber
</UL>

<P><STRONG><a name="[458]"></a>Lcd_ShowHugeNumber</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Lcd_ShowHugeNumber &rArr; Lcd_ShowOneMeddleNumber &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOneMeddleNumber
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_dis_SpeedUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOnlyBigSpeed
</UL>

<P><STRONG><a name="[459]"></a>LCD_showMeddlePoint</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_showMeddlePoint &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPic
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowMeddleNumber
</UL>

<P><STRONG><a name="[45a]"></a>Lcd_ShowCharacter</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPic
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPaintScreen
</UL>

<P><STRONG><a name="[45b]"></a>Lcd_ShowMeddleNumber</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Lcd_ShowMeddleNumber &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showMeddlePoint
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOneMeddleNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
</UL>

<P><STRONG><a name="[45c]"></a>Lcd_ShowOnlyBigSpeed</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Lcd_ShowOnlyBigSpeed &rArr; Lcd_ShowHugeNumber &rArr; Lcd_ShowOneMeddleNumber &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowHugeNumber
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOneHugeNumber
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
</UL>

<P><STRONG><a name="[7e2]"></a>Lcd_ShowBigNumFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetShowMainInterfaceFlag
</UL>

<P><STRONG><a name="[45d]"></a>Lcd_UpdateCurStatusInfo</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Lcd_UpdateCurStatusInfo &rArr; VDRSpeed_GetCurSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadCourse
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTerminalAuthorizationFlag
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_GetMudulState
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
</UL>

<P><STRONG><a name="[45e]"></a>Lcd_MainInterface</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = Lcd_MainInterface &rArr; Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayNumber16
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_LcdShowTime
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_GetContDriveTimeStr
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGprsOnLine
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGsmRssi
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowAzimuth
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGpsStatus
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSelectMainInterface
</UL>

<P><STRONG><a name="[460]"></a>Lcd_DisplayTemperature</STRONG> (Thumb, 672 bytes, Stack size 120 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = Lcd_DisplayTemperature &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_PosEx
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
</UL>

<P><STRONG><a name="[462]"></a>LCD_TemperatureInterface</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = LCD_TemperatureInterface &rArr; Lcd_DisplayTemperature &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayNumber16
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGprsOnLine
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGsmRssi
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowAzimuth
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGpsStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSelectMainInterface
</UL>

<P><STRONG><a name="[463]"></a>LCD_SpeedInterface</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = LCD_SpeedInterface &rArr; Lcd_ShowSafetyCaution &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayNumber16
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOnlyBigSpeed
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGprsOnLine
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGsmRssi
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowAzimuth
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGpsStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSelectMainInterface
</UL>

<P><STRONG><a name="[464]"></a>LCD_ShowDeepValue</STRONG> (Thumb, 348 bytes, Stack size 80 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = LCD_ShowDeepValue &rArr; Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLight
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_GetCheckParamResult
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_GetResultIsQualified
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_GetCurDeepLength
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_LcdShowTime
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOneMeddleNumber
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
</UL>

<P><STRONG><a name="[468]"></a>LCD_DeepInterface</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = LCD_DeepInterface &rArr; LCD_ShowDeepValue &rArr; Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayNumber16
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGprsOnLine
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGsmRssi
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowAzimuth
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGpsStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSelectMainInterface
</UL>

<P><STRONG><a name="[469]"></a>LCD_ShowTurnSpeedValue</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = LCD_ShowTurnSpeedValue &rArr; Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_GetCurTurnSpeed
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_LcdShowTime
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOneMeddleNumber
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
</UL>

<P><STRONG><a name="[46b]"></a>LCD_TurnSpeepInterface</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = LCD_TurnSpeepInterface &rArr; LCD_ShowTurnSpeedValue &rArr; Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayNumber16
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowTurnSpeedValue
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGprsOnLine
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGsmRssi
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowAzimuth
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGpsStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSelectMainInterface
</UL>

<P><STRONG><a name="[46c]"></a>LCD_ShowLoadValue</STRONG> (Thumb, 466 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = LCD_ShowLoadValue &rArr; Lcd_ShowMeddleNumber &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_GetLoadInfo
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowMeddleNumber
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
</UL>

<P><STRONG><a name="[46e]"></a>LCD_LoadInterface</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = LCD_LoadInterface &rArr; LCD_ShowLoadValue &rArr; Lcd_ShowMeddleNumber &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayNumber16
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGprsOnLine
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGsmRssi
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowAzimuth
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowGpsStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSelectMainInterface
</UL>

<P><STRONG><a name="[373]"></a>Lcd_SetDisplayCtrlFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLcdCopyFlag
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMain
</UL>

<P><STRONG><a name="[7d5]"></a>Lcd_GetDisplayCtrlFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
</UL>

<P><STRONG><a name="[46f]"></a>Lcd_DisplaySystemTest</STRONG> (Thumb, 504 bytes, Stack size 136 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2192 + Unknown Stack Size
<LI>Call Chain = Lcd_DisplaySystemTest &rArr; RadioProtocol_TerminalRegister &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformationReport
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurBasicPositionInfo
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_EraseFlashArea
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_EraseAllFlashArea
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_EraseAllDvrArea
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegister
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalQualify
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaEvenReport
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_InforamtionOrder
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_EvenReport
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ElectricReceiptReport
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCDEx
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
</UL>

<P><STRONG><a name="[477]"></a>Lcd_SendTerminalLogout</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = Lcd_SendTerminalLogout &rArr; RadioProtocol_TerminalLogout &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalLogout
</UL>
<BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentSystemLogout
</UL>

<P><STRONG><a name="[bb1]"></a>Lcd_CheckCurShowFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[7a0]"></a>Lcd_SetSystemRFEnable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
</UL>

<P><STRONG><a name="[bb2]"></a>RFLogin_EvTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[389]"></a>Lcd_ReadOneEnglishCharacterFromFlash</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar
</UL>

<P><STRONG><a name="[479]"></a>Lcd_DisplayOneEnglishCharacter</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcd_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayString
</UL>

<P><STRONG><a name="[38a]"></a>Lcd_ReadOneChineseCharacterFromFlash</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lcd_ReadOneChineseCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayOneNumber
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar
<LI><a href="#[aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dot_image_Flash
</UL>

<P><STRONG><a name="[47c]"></a>LCD_Delay</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_IoInitial
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_InitialST7567
</UL>

<P><STRONG><a name="[379]"></a>Lcd_WriteCom</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWriteCmd
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayfull
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_InitialST7567
</UL>

<P><STRONG><a name="[47b]"></a>Lcd_InitialST7567</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lcd_InitialST7567 &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteCom
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Initial
</UL>

<P><STRONG><a name="[47d]"></a>Lcd_BeepIoInit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Lcd_BeepIoInit &rArr; GpioOutInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutInit
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Initial
</UL>

<P><STRONG><a name="[47e]"></a>Lcd_IoInitial</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Lcd_IoInitial &rArr; GpioOutInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutInit
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Initial
</UL>

<P><STRONG><a name="[377]"></a>Lcd_WriteData</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lcd_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWriteData
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayfull
</UL>

<P><STRONG><a name="[47f]"></a>Lcd_DisplayClr</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Lcd_DisplayClr &rArr; LcdClearScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Initial
</UL>

<P><STRONG><a name="[480]"></a>Lcd_Initial</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Lcd_Initial &rArr; Lcd_DisplayClr &rArr; LcdClearScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayClr
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_IoInitial
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_BeepIoInit
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_InitialST7567
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintend
</UL>

<P><STRONG><a name="[44c]"></a>ChangeGraphFormatToChineseFormat</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, lcd_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ChangeGraphFormatToChineseFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowAzimuth
</UL>

<P><STRONG><a name="[481]"></a>displayfull</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteCom
</UL>

<P><STRONG><a name="[482]"></a>Hand_WeightingSystem_ProtocolParse</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, load_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = Hand_WeightingSystem_ProtocolParse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCommProtocolParse
</UL>

<P><STRONG><a name="[484]"></a>Hand_WeightingSystem_GetPositionAdditionalInfo</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, load_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Hand_WeightingSystem_GetPositionAdditionalInfo &rArr; Public_ConvertLongToBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionAdditionalInfo
</UL>

<P><STRONG><a name="[46d]"></a>Hand_WeightingSystem_GetLoadInfo</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, load_detection.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
</UL>

<P><STRONG><a name="[66]"></a>Lock1_TimeTask</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, lock1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Lock1_TimeTask &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_GetLock2Flag
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_Init
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_ParameterIsRight
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetMainRedrawFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[33e]"></a>Lock1_UpdataParameter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lock1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[48b]"></a>Lock1_GetLock1Flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lock1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TimeTask
</UL>

<P><STRONG><a name="[67]"></a>Lock2_TimeTask</STRONG> (Thumb, 462 bytes, Stack size 8 bytes, lock2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1968 + Unknown Stack Size
<LI>Call Chain = Lock2_TimeTask &rArr; RadioProtocol_OpenAccount &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_Init
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_GetLock1Flag
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetMainRedrawFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[33f]"></a>Lock2_UpdataParameter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lock2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[48c]"></a>Lock2_OpenAccountAck</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lock2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Lock2_OpenAccountAck &rArr; ClearTerminalAuthorizationCode &rArr; E2prom_WriteByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationCode
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
</UL>

<P><STRONG><a name="[938]"></a>Lock2_OpenAccountOnline</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lock2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Login
</UL>

<P><STRONG><a name="[bb3]"></a>Lock2_GetOpenAccountFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lock2.o(.text), UNUSED)

<P><STRONG><a name="[488]"></a>Lock2_GetLock2Flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lock2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_TimeTask
</UL>

<P><STRONG><a name="[599]"></a>Lock2_GetEnableFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lock2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
</UL>

<P><STRONG><a name="[937]"></a>Lock2_GetOpenAccountRequestFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lock2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Login
</UL>

<P><STRONG><a name="[48d]"></a>Lock2_TrigOpenAccount</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lock2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Lock2_TrigOpenAccount &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_QuickOpenAccount
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSetTerminalParamter
</UL>

<P><STRONG><a name="[490]"></a>Insert_STARTQueue</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Insert_STARTQueue &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_FreshNowTask
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTaskEx
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTask
</UL>

<P><STRONG><a name="[2fe]"></a>LZM_KillTimer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lzmsys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowLogo
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReadyNewTask
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMain
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuDriveRecord
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuInfoServer
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirmAll
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
</UL>

<P><STRONG><a name="[491]"></a>LZM_ReadyNewTask</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueInsert
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueEmpty
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDelete
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLcdCopyFlag
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueClear
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_FreshNowTask
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTaskEx
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTask
</UL>

<P><STRONG><a name="[493]"></a>LZM_RefuseNowTask</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReadyNewTask
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert_STARTQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReturnPreTask
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordTo
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirmAll
</UL>

<P><STRONG><a name="[2f8]"></a>LZM_StartNewTask</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTask
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebug
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_StartPrintStopRecord
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowLogo
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunToMainInfoTask
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TaskInitHook
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowText
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMain
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPhone
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TakeCallMonitorServerPhone
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SetCurrentCallStatus
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemInstallModel
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowShortMessage
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuDriveRecord
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCarInfo
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriverInfo
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTiredDriveRecord
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShow15MinSpeed
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuInfoServer
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTextInfo
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInfoService
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionList
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainInterface
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowEventReport
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInformationDemand
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriveMile
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowProductInfo
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowSIMCardNumber
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowAdjustTtsVolume
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemAdvanced
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemCarInfo
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemManageServer
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemQueryServerParameter
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemServer
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1CancelModify
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugShowIOstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugCurrentReportMode
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeCancel
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemParameter
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemShowTerminalID
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCameraInfo
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemWeightCollector
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCANInformCollector
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemNavationScr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMainInterfaceSelection
</UL>

<P><STRONG><a name="[494]"></a>LZM_DisposeOperateTimer</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LZM_DisposeOperateTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
</UL>

<P><STRONG><a name="[2fd]"></a>LZM_DefTaskProc</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LZM_DefTaskProc &rArr; LcdPasteScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearDisplayCtrlFlag
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLightFinish
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DisposeOperateTimer
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetMainRedrawFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebug
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowLogo
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TaskEmpty
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMain
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPhone
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemInstallModel
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowShortMessage
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuDriveRecord
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCarInfo
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriverInfo
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTiredDriveRecord
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShow15MinSpeed
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuInfoServer
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTextInfo
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInfoService
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionList
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowEventReport
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInformationDemand
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriveMile
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowProductInfo
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowSIMCardNumber
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowAdjustTtsVolume
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemAdvanced
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemCarInfo
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemManageServer
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemQueryServerParameter
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemServer
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugShowIOstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugCurrentReportMode
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemParameter
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemShowTerminalID
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCameraInfo
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemWeightCollector
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCANInformCollector
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemNavationScr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMainInterfaceSelection
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPublicMsgBox
</UL>

<P><STRONG><a name="[496]"></a>LZM_TaskEmpty</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LZM_TaskEmpty &rArr; LZM_DefTaskProc &rArr; LcdPasteScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lzmsys.o(.text)
</UL>
<P><STRONG><a name="[499]"></a>LZM_GetMessage</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LZM_GetMessage &rArr; LZM_QueueDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueEmpty
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMessage_TimeTask
</UL>

<P><STRONG><a name="[49a]"></a>LZM_SetTimer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LZM_SetTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
</UL>

<P><STRONG><a name="[2eb]"></a>LZM_SetAlarm</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LZM_SetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLight
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsg
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CheckSelectShow
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowLogo
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetOperateTimer
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CheckSelectShow
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReflashToReturnMainInterface
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowShortMessage
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTiredDriveRecord
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShow15MinSpeed
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTextInfo
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInfoService
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionList
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowEventReport
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInformationDemand
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemandconfirm
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowSIMCardNumber
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAndShowTTsVolume
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugShowIOstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenFeatureCoefFlag
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeOk
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugSetPositionEx
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentSystemLogout
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultParamter
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintstart
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordKeyResponse
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPublicMsgBox
</UL>

<P><STRONG><a name="[bb4]"></a>LZM_TimerGetEnabled</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lzmsys.o(.text), UNUSED)

<P><STRONG><a name="[49b]"></a>LZM_TimerHandler</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LZM_TimerHandler &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueInsert
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMessage_TimeTask
</UL>

<P><STRONG><a name="[2f7]"></a>LZM_GetSutMessage</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lzmsys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebug
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowLogo
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMessage_TimeTask
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMain
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPhone
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemInstallModel
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowShortMessage
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuDriveRecord
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCarInfo
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriverInfo
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTiredDriveRecord
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShow15MinSpeed
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuInfoServer
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTextInfo
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInfoService
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionList
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowEventReport
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInformationDemand
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriveMile
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowProductInfo
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowSIMCardNumber
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowAdjustTtsVolume
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemAdvanced
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemCarInfo
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemManageServer
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemQueryServerParameter
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemServer
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugShowIOstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugCurrentReportMode
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemParameter
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemShowTerminalID
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCameraInfo
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemWeightCollector
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCANInformCollector
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemNavationScr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMainInterfaceSelection
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPublicMsgBox
</UL>

<P><STRONG><a name="[4a2]"></a>KeyFormatValue</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lzmsys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KeyHandler
</UL>

<P><STRONG><a name="[49c]"></a>Insert_KEYQueue</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Insert_KEYQueue &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueInsert
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KeyHandler
</UL>

<P><STRONG><a name="[49d]"></a>LZM_RefuseNowTaskEx</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LZM_RefuseNowTaskEx &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReadyNewTask
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert_STARTQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReturnOldTaskEx
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTaskEx
</UL>

<P><STRONG><a name="[49e]"></a>LZM_FreshNowTask</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lzmsys.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReadyNewTask
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert_STARTQueue
</UL>

<P><STRONG><a name="[49f]"></a>LZM_StartNewTaskEx</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LZM_StartNewTaskEx &rArr; LZM_RefuseNowTaskEx &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTaskEx
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordCorrect
</UL>

<P><STRONG><a name="[4a6]"></a>LZM_DispatchMessage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LZM_DispatchMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMessage_TimeTask
</UL>

<P><STRONG><a name="[4a0]"></a>LZM_KeyHandler</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LZM_KeyHandler &rArr; Insert_KEYQueue &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValue_Read
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunCountReset
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert_KEYQueue
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyFormatValue
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMessage_TimeTask
</UL>

<P><STRONG><a name="[4a3]"></a>LZM_SetOperateTimer</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LZM_SetOperateTimer &rArr; LZM_SetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DisposeEIExpandProtocolForDriverInfo
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowLogo
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Question_DisposeRadioProtocol
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_HangUpCall
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugSetPosition
</UL>

<P><STRONG><a name="[bb5]"></a>LZM_Nothing</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lzmsys.o(.text), UNUSED)

<P><STRONG><a name="[4a4]"></a>LZM_ReturnPreTask</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LZM_ReturnPreTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTask
</UL>
<BR>[Called By]<UL><LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordCancel
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicMsgBoxCancel
</UL>

<P><STRONG><a name="[4a5]"></a>LZM_ReturnOldTaskEx</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LZM_ReturnOldTaskEx &rArr; LZM_RefuseNowTaskEx &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTaskEx
</UL>
<BR>[Called By]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
</UL>

<P><STRONG><a name="[44]"></a>TaskMenuMessage_TimeTask</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TaskMenuMessage_TimeTask &rArr; SysAutoRunToMainInfoTask &rArr; LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunToMainInfoTask
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KeyHandler
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DispatchMessage
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TimerHandler
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TaskMenuStart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[4a8]"></a>LZM_TaskMenuStart</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LZM_TaskMenuStart &rArr; LZM_TaskInitHook &rArr; PublicSysParamterInit &rArr; Message_ParameterInitialize &rArr; MessageFlashReadAndCheck &rArr; MessageReadAndCheckEventReport &rArr; EventReportDefaultValue &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMessage_TimeTask
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TaskInitHook
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DevInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[158]"></a>main</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2572<LI>Call Chain = main &rArr; PeripheralInit &rArr; Media_FolderCheck &rArr; Media_SignDelFlag &rArr; Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_PowerOnDetectMainPower
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl_task
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Init
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerTaskScheduler
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartLogo
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTerminalFirmwareVersion
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRtc
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_PowerOnHandle
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryChipSelfCheck
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvTaskScheduler
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TaskMenuStart
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[27a]"></a>Media_GetSdOnLineFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, media.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_SchedulePhoto
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateStore
</UL>

<P><STRONG><a name="[4b4]"></a>Media_FindCurFolder</STRONG> (Thumb, 1046 bytes, Stack size 864 bytes, media.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = Media_FindCurFolder &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FolderCheck
</UL>

<P><STRONG><a name="[4b9]"></a>Media_CheckSdOnOff</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, media.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Media_CheckSdOnOff
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[4bc]"></a>Media_EnableDeleteFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, media.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
</UL>

<P><STRONG><a name="[4ba]"></a>Media_GetSignNum</STRONG> (Thumb, 386 bytes, Stack size 776 bytes, media.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1652<LI>Call Chain = Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
</UL>

<P><STRONG><a name="[4bb]"></a>Media_SignDelFlag</STRONG> (Thumb, 864 bytes, Stack size 872 bytes, media.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2524<LI>Call Chain = Media_SignDelFlag &rArr; Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRestKByte
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSignNum
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_EnableDeleteFlag
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FolderCheck
</UL>

<P><STRONG><a name="[4be]"></a>Media_FolderCheck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, media.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2532<LI>Call Chain = Media_FolderCheck &rArr; Media_SignDelFlag &rArr; Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[27b]"></a>Media_GetFileName</STRONG> (Thumb, 560 bytes, Stack size 32 bytes, media.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Media_GetFileName &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateStore
</UL>

<P><STRONG><a name="[280]"></a>Media_SaveLog</STRONG> (Thumb, 624 bytes, Stack size 832 bytes, media.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3356<LI>Call Chain = Media_SaveLog &rArr; Media_SignDelFlag &rArr; Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateStore
</UL>

<P><STRONG><a name="[46]"></a>Media_TimeTask</STRONG> (Thumb, 1020 bytes, Stack size 1088 bytes, media.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3612<LI>Call Chain = Media_TimeTask &rArr; Media_SignDelFlag &rArr; Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameForward
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRestKByte
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSignNum
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_EnableDeleteFlag
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>Media_UploadTimeTask</STRONG> (Thumb, 626 bytes, Stack size 40 bytes, media.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1848 + Unknown Stack Size
<LI>Call Chain = Media_UploadTimeTask &rArr; RadioProtocol_MultiMediaDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaDataReport
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[4c4]"></a>MediaSearch_Find</STRONG> (Thumb, 1444 bytes, Stack size 1704 bytes, mediasearch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2580<LI>Call Chain = MediaSearch_Find &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeStruct
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
</UL>

<P><STRONG><a name="[4c5]"></a>MediaSearch_GetMediaIDFileName</STRONG> (Thumb, 1844 bytes, Stack size 840 bytes, mediasearch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1716<LI>Call Chain = MediaSearch_GetMediaIDFileName &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SingleMemoryIndex
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[4c6]"></a>MediaSearch_GetMediaIndexInformation</STRONG> (Thumb, 932 bytes, Stack size 1288 bytes, mediasearch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3868<LI>Call Chain = MediaSearch_GetMediaIndexInformation &rArr; MediaSearch_Find &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MemoryIndex
</UL>

<P><STRONG><a name="[4c8]"></a>MenuModify</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MenuModify
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[4c7]"></a>MenuInit</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MenuInit &rArr; MenuModify
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuModify
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebug
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMain
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPhone
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowShortMessage
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuDriveRecord
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuInfoServer
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemAdvanced
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemCarInfo
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemManageServer
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemServer
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemParameter
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMainInterfaceSelection
</UL>

<P><STRONG><a name="[4c9]"></a>MenuShowBar</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = MenuShowBar &rArr; LcdShowArrow &rArr; DrawArrow &rArr; DrawRect &rArr; DrawHorLine &rArr; LcdSetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowArrow
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
</UL>

<P><STRONG><a name="[4ca]"></a>MenuShowItem</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuReShow
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
</UL>

<P><STRONG><a name="[4cb]"></a>MenuShow</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = MenuShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowItem
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowBar
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebug
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMain
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPhone
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowShortMessage
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuDriveRecord
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuInfoServer
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemAdvanced
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemCarInfo
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemManageServer
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemServer
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemParameter
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMainInterfaceSelection
</UL>

<P><STRONG><a name="[4cc]"></a>MenuReShow</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyArea
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
</UL>

<P><STRONG><a name="[4cd]"></a>MenuResponse</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuReShow
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShowBar
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuModify
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebug
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMain
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPhone
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowShortMessage
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuDriveRecord
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuInfoServer
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemAdvanced
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemCarInfo
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemManageServer
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemServer
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemParameter
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMainInterfaceSelection
</UL>

<P><STRONG><a name="[635]"></a>MenuGetHandle</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebug
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMain
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPhone
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowShortMessage
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuDriveRecord
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuInfoServer
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemAdvanced
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemCarInfo
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemManageServer
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemServer
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebugTest
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemParameter
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMainInterfaceSelection
</UL>

<P><STRONG><a name="[4ce]"></a>MessageFlashFormat</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MessageFlashFormat &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseDeleteAll
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookDeleteAll
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceDeleteAll
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandDeleteAll
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDeleteAll
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoDeleteAll
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseSaveDataToFlash
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceSaveDataToFlash
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoSaveDataToFlash
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandSaveDataToFlash
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportSaveDataToFlash
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookSaveDataToFlash
</UL>

<P><STRONG><a name="[4cf]"></a>MessageSaveDataToFlash</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseDeleteAll
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookDeleteAll
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceDeleteAll
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandDeleteAll
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDeleteAll
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoDeleteAll
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseSaveDataToFlash
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceSaveDataToFlash
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoSaveDataToFlash
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandSaveDataToFlash
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportSaveDataToFlash
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookSaveDataToFlash
</UL>

<P><STRONG><a name="[4d0]"></a>MessageReadDataFromFlash</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_GetOnePhoneBookContent
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_GetPhoneBookTotalNum
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_GetTotalNum
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_ReadOneData
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_GetTotalNum
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_ReadOneData
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckQuestionResponse
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckInfoService
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckDriverInfo
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckInfoDemand
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckEventReport
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckPhoneBook
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoTotalNumber
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneInfoDemandDetails
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInfoDemandTotalNum
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneEventReportDetails
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEventReportTotalNum
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseReadDataFromFlash
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceReadDataFromFlash
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandReadDataFromFlash
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportReadDataFromFlash
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookReadDataFromFlash
</UL>

<P><STRONG><a name="[4d1]"></a>PhoneBookReadDataFromFlash</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PhoneBookReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_GetOnePhoneBookContent
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneBook
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPhoneInformation
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookModify
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookAdd
</UL>

<P><STRONG><a name="[4d2]"></a>PhoneBookSaveDataToFlash</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = PhoneBookSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookModify
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookAdd
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookUpdate
</UL>

<P><STRONG><a name="[4d3]"></a>EventReportReadDataFromFlash</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EventReportReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEventReport
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDelEx
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportModify
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportAdd
</UL>

<P><STRONG><a name="[4d4]"></a>EventReportSaveDataToFlash</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDefaultValue
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDelEx
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportModify
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportAdd
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportUpdate
</UL>

<P><STRONG><a name="[4d5]"></a>InfoDemandReadDataFromFlash</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InfoDemandReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandChangeStatus
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInfoDemand
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandModify
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandAdd
</UL>

<P><STRONG><a name="[4d6]"></a>InfoDemandSaveDataToFlash</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = InfoDemandSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandChangeStatus
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandModify
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandAdd
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandUpdate
</UL>

<P><STRONG><a name="[4d7]"></a>DriverInfoReadDataFromFlash</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DriverInfoReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DeleteOneDriverInfo
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoModify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoAdd
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentDriverParameter
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfo
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoAll
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAddOrModify
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModify
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModifyDriverCodeAndPassword
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAdd
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDriverInfoForLogin
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberForCheckData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumber
</UL>

<P><STRONG><a name="[4d8]"></a>DriverInfoSaveDataToFlash</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DriverInfoSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DeleteOneDriverInfo
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoModify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoAdd
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoUpdate
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModify
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModifyDriverCodeAndPassword
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAdd
</UL>

<P><STRONG><a name="[4d9]"></a>InfoServiceReadDataFromFlash</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InfoServiceReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_ReadOneData
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_SaveOneData
</UL>

<P><STRONG><a name="[4da]"></a>InfoServiceSaveDataToFlash</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = InfoServiceSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_SaveOneData
</UL>

<P><STRONG><a name="[4db]"></a>QuestionResponseReadDataFromFlash</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = QuestionResponseReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_ReadOneData
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_SaveOneData
</UL>

<P><STRONG><a name="[4dc]"></a>QuestionResponseSaveDataToFlash</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = QuestionResponseSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_SaveOneData
</UL>

<P><STRONG><a name="[4dd]"></a>Message_stMsgHeadInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, message.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseDeleteAll
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookDeleteAll
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceDeleteAll
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandDeleteAll
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDeleteAll
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoDeleteAll
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoUpdate
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandUpdate
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDefaultValue
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportUpdate
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookUpdate
</UL>

<P><STRONG><a name="[321]"></a>PhoneBookDeleteAll</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = PhoneBookDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeRadioProtocol
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckPhoneBook
</UL>

<P><STRONG><a name="[4de]"></a>GetLinkmanAddressFromPhoneBook</STRONG> (Thumb, 62 bytes, Stack size 72 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetLinkmanAddressFromPhoneBook
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookModify
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookAdd
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookUpdate
</UL>

<P><STRONG><a name="[4e0]"></a>PhoneBookUpdate</STRONG> (Thumb, 252 bytes, Stack size 88 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = PhoneBookUpdate &rArr; PhoneBookSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkmanAddressFromPhoneBook
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookSaveDataToFlash
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4e1]"></a>PhoneBookAdd</STRONG> (Thumb, 246 bytes, Stack size 88 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = PhoneBookAdd &rArr; PhoneBookSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkmanAddressFromPhoneBook
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookSaveDataToFlash
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4e2]"></a>PhoneBookModify</STRONG> (Thumb, 190 bytes, Stack size 88 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = PhoneBookModify &rArr; PhoneBookSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkmanAddressFromPhoneBook
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookSaveDataToFlash
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[322]"></a>EventReportDeleteAll</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = EventReportDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReport_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4e3]"></a>GetAddressFromEventReport</STRONG> (Thumb, 58 bytes, Stack size 104 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GetAddressFromEventReport
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDelEx
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportModify
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportAdd
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportUpdate
</UL>

<P><STRONG><a name="[4e4]"></a>EventReportUpdate</STRONG> (Thumb, 220 bytes, Stack size 120 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = EventReportUpdate &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromEventReport
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportSaveDataToFlash
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReport_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4e5]"></a>EventReportAdd</STRONG> (Thumb, 214 bytes, Stack size 120 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = EventReportAdd &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromEventReport
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportSaveDataToFlash
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReport_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4e6]"></a>EventReportModify</STRONG> (Thumb, 142 bytes, Stack size 120 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = EventReportModify &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromEventReport
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportSaveDataToFlash
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReport_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4e7]"></a>EventReportDelEx</STRONG> (Thumb, 238 bytes, Stack size 128 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = EventReportDelEx &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromEventReport
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportSaveDataToFlash
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportReadDataFromFlash
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReport_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4e8]"></a>EventReportDefaultValue</STRONG> (Thumb, 148 bytes, Stack size 96 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = EventReportDefaultValue &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportSaveDataToFlash
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckEventReport
</UL>

<P><STRONG><a name="[4e9]"></a>GetEventReportTotalNum</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GetEventReportTotalNum &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowEventReport
</UL>

<P><STRONG><a name="[4ea]"></a>GetOneEventReportDetails</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GetOneEventReportDetails &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEventReportInfoIndex
</UL>

<P><STRONG><a name="[323]"></a>InfoDemandDeleteAll</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = InfoDemandDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemand_DisposeRadioProtocol
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckInfoDemand
</UL>

<P><STRONG><a name="[4eb]"></a>GetAddressFromInfoDemand</STRONG> (Thumb, 58 bytes, Stack size 104 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GetAddressFromInfoDemand
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandChangeStatus
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandModify
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandAdd
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandUpdate
</UL>

<P><STRONG><a name="[4ec]"></a>InfoDemandUpdate</STRONG> (Thumb, 244 bytes, Stack size 120 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = InfoDemandUpdate &rArr; InfoDemandSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromInfoDemand
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandSaveDataToFlash
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemand_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4ed]"></a>InfoDemandAdd</STRONG> (Thumb, 238 bytes, Stack size 120 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = InfoDemandAdd &rArr; InfoDemandSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromInfoDemand
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandSaveDataToFlash
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemand_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4ee]"></a>InfoDemandModify</STRONG> (Thumb, 172 bytes, Stack size 120 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = InfoDemandModify &rArr; InfoDemandSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromInfoDemand
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandSaveDataToFlash
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemand_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[4ef]"></a>GetInfoDemandTotalNum</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GetInfoDemandTotalNum &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInformationDemand
</UL>

<P><STRONG><a name="[4f0]"></a>GetOneInfoDemandDetails</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GetOneInfoDemandDetails &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInformationDemandIndex
</UL>

<P><STRONG><a name="[320]"></a>DriverInfoDeleteAll</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DriverInfoDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogout
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfo_DisposeRadioProtocol
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoDelete
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckDriverInfo
</UL>

<P><STRONG><a name="[4f2]"></a>GetDriverInfoRecordNumber</STRONG> (Thumb, 80 bytes, Stack size 184 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GetDriverInfoRecordNumber &rArr; DriverInfoReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTiredDriverAutoLog
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoModify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoAdd
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModify
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModifyDriverCodeAndPassword
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAdd
</UL>

<P><STRONG><a name="[4f3]"></a>GetDriverInfoRecordNumberEx</STRONG> (Thumb, 76 bytes, Stack size 184 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>

<P><STRONG><a name="[4f4]"></a>GetDriverInfoTotalNumber</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>

<P><STRONG><a name="[4f5]"></a>GetDriverInfoRecordNumberForCheckData</STRONG> (Thumb, 90 bytes, Stack size 192 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GetDriverInfoRecordNumberForCheckData &rArr; DriverInfoReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoDelete
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoModify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoAdd
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModify
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAdd
</UL>

<P><STRONG><a name="[4f6]"></a>CheckDriverInfoForLogin</STRONG> (Thumb, 120 bytes, Stack size 192 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480 + Unknown Stack Size
<LI>Call Chain = CheckDriverInfoForLogin &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogin
</UL>

<P><STRONG><a name="[4f8]"></a>Messege_GetOneDriverInfoDatalen</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Messege_GetOneDriverInfoDatalen
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoDelete
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoModify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoAdd
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoUpdate
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_CheckDriverInfodatalen
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModify
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAdd
</UL>

<P><STRONG><a name="[4f7]"></a>DriverInfoAdd</STRONG> (Thumb, 224 bytes, Stack size 200 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488 + Unknown Stack Size
<LI>Call Chain = DriverInfoAdd &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_GetOneDriverInfoDatalen
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberForCheckData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumber
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoSaveDataToFlash
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfo_DisposeRadioProtocol
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAddOrModify
</UL>

<P><STRONG><a name="[4f9]"></a>DriverInfoModifyDriverCodeAndPassword</STRONG> (Thumb, 156 bytes, Stack size 192 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumber
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoSaveDataToFlash
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[4fa]"></a>DriverInfoModify</STRONG> (Thumb, 392 bytes, Stack size 200 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_GetOneDriverInfoDatalen
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberForCheckData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumber
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoSaveDataToFlash
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAddOrModify
</UL>

<P><STRONG><a name="[4fb]"></a>DriverInfoAddOrModify</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModify
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAdd
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
</UL>

<P><STRONG><a name="[4fc]"></a>MessageReadAndCheckPhoneBook</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MessageReadAndCheckPhoneBook &rArr; PhoneBookDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookDeleteAll
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashReadAndCheck
</UL>

<P><STRONG><a name="[4fd]"></a>MessageReadAndCheckEventReport</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = MessageReadAndCheckEventReport &rArr; EventReportDefaultValue &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDefaultValue
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashReadAndCheck
</UL>

<P><STRONG><a name="[4fe]"></a>MessageReadAndCheckInfoDemand</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MessageReadAndCheckInfoDemand &rArr; InfoDemandDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandDeleteAll
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashReadAndCheck
</UL>

<P><STRONG><a name="[4ff]"></a>MessageReadAndCheckDriverInfo</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MessageReadAndCheckDriverInfo &rArr; DriverInfoDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoDeleteAll
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashReadAndCheck
</UL>

<P><STRONG><a name="[324]"></a>InfoServiceDeleteAll</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = InfoServiceDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckInfoService
</UL>

<P><STRONG><a name="[500]"></a>MessageReadAndCheckInfoService</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MessageReadAndCheckInfoService &rArr; InfoServiceDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceDeleteAll
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashReadAndCheck
</UL>

<P><STRONG><a name="[325]"></a>QuestionResponseDeleteAll</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = QuestionResponseDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckQuestionResponse
</UL>

<P><STRONG><a name="[501]"></a>MessageReadAndCheckQuestionResponse</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MessageReadAndCheckQuestionResponse &rArr; QuestionResponseDeleteAll &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseDeleteAll
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashReadAndCheck
</UL>

<P><STRONG><a name="[502]"></a>MessageFlashReadAndCheck</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = MessageFlashReadAndCheck &rArr; MessageReadAndCheckEventReport &rArr; EventReportDefaultValue &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckQuestionResponse
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckInfoService
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckDriverInfo
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckInfoDemand
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckEventReport
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadAndCheckPhoneBook
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_ParameterInitialize
</UL>

<P><STRONG><a name="[503]"></a>CheckPhoneInformation</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = CheckPhoneInformation &rArr; PhoneBookReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookReadDataFromFlash
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
</UL>

<P><STRONG><a name="[504]"></a>GetPhoneBook</STRONG> (Thumb, 226 bytes, Stack size 88 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GetPhoneBook &rArr; PhoneBookReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryPhoneBooks
</UL>

<P><STRONG><a name="[505]"></a>GetEventReport</STRONG> (Thumb, 130 bytes, Stack size 112 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GetEventReport &rArr; EventReportReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryFixText
</UL>

<P><STRONG><a name="[506]"></a>GetInfoDemand</STRONG> (Thumb, 142 bytes, Stack size 112 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GetInfoDemand &rArr; InfoDemandReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryFixText
</UL>

<P><STRONG><a name="[507]"></a>InfoDemandChangeStatus</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = InfoDemandChangeStatus &rArr; InfoDemandSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromInfoDemand
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandSaveDataToFlash
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendFixText
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemandconfirm
</UL>

<P><STRONG><a name="[508]"></a>GetDriverInfoAll</STRONG> (Thumb, 432 bytes, Stack size 200 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GetDriverInfoAll &rArr; DriverInfoReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfo_ReadDataForRadioProtocol
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryDriverInfo
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_PlatformReadDriverInfoData
</UL>

<P><STRONG><a name="[509]"></a>GetDriverInfo</STRONG> (Thumb, 542 bytes, Stack size 208 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GetDriverInfo &rArr; DriverInfoReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_WriteDriverInfoToICcard
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverSign
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverInfoAddInfo
</UL>

<P><STRONG><a name="[50a]"></a>SaveCurrentDriverParameter</STRONG> (Thumb, 144 bytes, Stack size 200 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = SaveCurrentDriverParameter &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTiredDriverAutoLog
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogin
</UL>

<P><STRONG><a name="[50b]"></a>InfoService_SaveOneData</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = InfoService_SaveOneData &rArr; InfoServiceSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceSaveDataToFlash
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[50c]"></a>InfoService_ReadOneData</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = InfoService_ReadOneData &rArr; InfoServiceReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoServiceReadDataFromFlash
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoServiceDetails
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoServiceIndex
</UL>

<P><STRONG><a name="[50d]"></a>InfoService_GetTotalNum</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = InfoService_GetTotalNum &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInfoService
</UL>

<P><STRONG><a name="[50e]"></a>QuestionResponse_SaveOneData</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = QuestionResponse_SaveOneData &rArr; QuestionResponseSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseSaveDataToFlash
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Question_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[50f]"></a>QuestionResponse_ReadOneData</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = QuestionResponse_ReadOneData &rArr; QuestionResponseReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponseReadDataFromFlash
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQuestionListDetails
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQuestionListIndex
</UL>

<P><STRONG><a name="[510]"></a>QuestionResponse_GetTotalNum</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = QuestionResponse_GetTotalNum &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionList
</UL>

<P><STRONG><a name="[511]"></a>EventReport_DisposeRadioProtocol</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EventReport_DisposeRadioProtocol &rArr; EventReportDelEx &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDeleteAll
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDelEx
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportModify
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportAdd
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_EvenSet
</UL>

<P><STRONG><a name="[512]"></a>InfoDemand_DisposeRadioProtocol</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = InfoDemand_DisposeRadioProtocol &rArr; InfoDemandModify &rArr; InfoDemandSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandDeleteAll
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandModify
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandAdd
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_InformationOrderSet
</UL>

<P><STRONG><a name="[513]"></a>PhoneBook_DisposeRadioProtocol</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = PhoneBook_DisposeRadioProtocol &rArr; PhoneBookModify &rArr; PhoneBookSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookDeleteAll
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookModify
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookAdd
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TelephoneBookSet
</UL>

<P><STRONG><a name="[514]"></a>Message_GetPhoneBookTotalNum</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Message_GetPhoneBookTotalNum &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
</UL>

<P><STRONG><a name="[515]"></a>Message_GetOnePhoneBookContent</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Message_GetOnePhoneBookContent &rArr; PhoneBookReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookReadDataFromFlash
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneBookTalkCall
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneBookIndex
</UL>

<P><STRONG><a name="[319]"></a>DriverInfo_DisposeRadioProtocol</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1536 + Unknown Stack Size
<LI>Call Chain = DriverInfo_DisposeRadioProtocol &rArr; DriverInfoAdd &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoDeleteAll
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAdd
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[336]"></a>DriverInfo_ReadDataForRadioProtocol</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = DriverInfo_ReadDataForRadioProtocol &rArr; GetDriverInfoAll &rArr; DriverInfoReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoAll
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeReadParam
</UL>

<P><STRONG><a name="[516]"></a>Messege_PlatformReadDriverInfoData</STRONG> (Thumb, 50 bytes, Stack size 1032 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2864 + Unknown Stack Size
<LI>Call Chain = Messege_PlatformReadDriverInfoData &rArr; EIExpand_PotocolSendData &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolSendData
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoAll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.text)
</UL>
<P><STRONG><a name="[517]"></a>Messege_CheckDriverInfodatalen</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_GetOneDriverInfoDatalen
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoUpdate
</UL>

<P><STRONG><a name="[518]"></a>Messege_DriverInfoUpdate</STRONG> (Thumb, 230 bytes, Stack size 208 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_CheckDriverInfodatalen
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_GetOneDriverInfoDatalen
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_stMsgHeadInit
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoSaveDataToFlash
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DisposeEIExpandProtocolForDriverInfo
</UL>

<P><STRONG><a name="[519]"></a>Messege_DriverInfoAdd</STRONG> (Thumb, 306 bytes, Stack size 208 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_GetOneDriverInfoDatalen
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberForCheckData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumber
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoSaveDataToFlash
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DisposeEIExpandProtocolForDriverInfo
</UL>

<P><STRONG><a name="[51a]"></a>Messege_DriverInfoModify</STRONG> (Thumb, 358 bytes, Stack size 256 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_GetOneDriverInfoDatalen
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberForCheckData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumber
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoSaveDataToFlash
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DisposeEIExpandProtocolForDriverInfo
</UL>

<P><STRONG><a name="[51b]"></a>Messege_DeleteOneDriverInfo</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoSaveDataToFlash
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoReadDataFromFlash
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoDelete
</UL>

<P><STRONG><a name="[51c]"></a>Messege_DriverInfoDelete</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoDeleteAll
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DeleteOneDriverInfo
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_GetOneDriverInfoDatalen
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberForCheckData
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DisposeEIExpandProtocolForDriverInfo
</UL>

<P><STRONG><a name="[51d]"></a>Messege_DisposeEIExpandProtocolForDriverInfo</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoDelete
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoModify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoAdd
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoUpdate
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetOperateTimer
</UL>

<P><STRONG><a name="[51e]"></a>Message_ParameterInitialize</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Message_ParameterInitialize &rArr; MessageFlashReadAndCheck &rArr; MessageReadAndCheckEventReport &rArr; EventReportDefaultValue &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_CheckFlashArea
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadAndCheckCallRecord
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashReadAndCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicSysParamterInit
</UL>

<P><STRONG><a name="[520]"></a>MileMeter_DecimalDegree</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, milemeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MileMeter_DecimalDegree &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_InitialLonLat
</UL>

<P><STRONG><a name="[521]"></a>MileMeter_InitialLonLat</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, milemeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = MileMeter_InitialLonLat &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_DecimalDegree
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
</UL>

<P><STRONG><a name="[523]"></a>MileMeter_CalDistance</STRONG> (Thumb, 462 bytes, Stack size 136 bytes, milemeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = MileMeter_CalDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
</UL>

<P><STRONG><a name="[524]"></a>GpsMile_UpdatePram</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, milemeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GpsMile_UpdatePram &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedFlagUpdatePram
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_SetPram
<LI><a href="#[a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_UpdateParameter
</UL>

<P><STRONG><a name="[32e]"></a>GpsMile_SetPram</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, milemeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GpsMile_SetPram &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_UpdateParameter
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_UpdatePram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC4H
</UL>

<P><STRONG><a name="[525]"></a>MileMeter_MinuteSpeed</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, milemeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MileMeter_MinuteSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
</UL>

<P><STRONG><a name="[35]"></a>GpsMile_TimeTask</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, milemeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GpsMile_TimeTask &rArr; MileMeter_CalDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_GetRunFlag
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_MinuteSpeed
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_CalDistance
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_InitialLonLat
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_DecimalDegree
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[526]"></a>MileMeter_GpsPosSpeedCount</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, milemeter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[bb6]"></a>MileMeter_GetMinuteSpeed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, milemeter.o(.text), UNUSED)

<P><STRONG><a name="[528]"></a>ReadMileSum</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, milemeter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[3ac]"></a>MileMeter_GetTotalMile</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, milemeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MileMeter_GetTotalMile &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_GetCurTotalMeter
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetCurDistance
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurTotalMile
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_GetCurDistance
</UL>

<P><STRONG><a name="[5ef]"></a>MileMeter_ClearOldPoint</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, milemeter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedFlagUpdatePram
<LI><a href="#[a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_UpdateParameter
</UL>

<P><STRONG><a name="[bb7]"></a>ReadGpsPosSpeed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, milemeter.o(.text), UNUSED)

<P><STRONG><a name="[529]"></a>SD_SPI_ReadWriteByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendBlock
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_RecvData
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetResponse
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
</UL>

<P><STRONG><a name="[52b]"></a>SD_SPI_SpeedLow</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_SPI_SpeedLow &rArr; SPIx_SetSpeed &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_SetSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize
</UL>

<P><STRONG><a name="[52d]"></a>SD_SPI_SpeedHigh</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_SPI_SpeedHigh &rArr; SPIx_SetSpeed &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_SetSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize
</UL>

<P><STRONG><a name="[52e]"></a>SD_SPI_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_SPI_Init &rArr; SPIx_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize
</UL>

<P><STRONG><a name="[530]"></a>SD_DisSelect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_DisSelect &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCID
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Select
</UL>

<P><STRONG><a name="[531]"></a>SD_WaitReady</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendBlock
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Select
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[532]"></a>SD_Select</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_Select &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
</UL>

<P><STRONG><a name="[533]"></a>SD_GetResponse</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_GetResponse &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_RecvData
</UL>

<P><STRONG><a name="[534]"></a>SD_RecvData</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_RecvData &rArr; SD_GetResponse &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetResponse
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCID
</UL>

<P><STRONG><a name="[535]"></a>SD_SendBlock</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_SendBlock &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
</UL>

<P><STRONG><a name="[536]"></a>SD_SendCmd</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_SendCmd &rArr; SD_Select &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Select
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Idle_Sta
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCID
</UL>

<P><STRONG><a name="[537]"></a>SD_GetCID</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_RecvData
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
</UL>

<P><STRONG><a name="[538]"></a>SD_GetCSD</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SD_GetCSD &rArr; SD_SendCmd &rArr; SD_Select &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_RecvData
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetSectorCount
</UL>

<P><STRONG><a name="[539]"></a>SD_GetSectorCount</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_GetSectorCount &rArr; SD_GetCSD &rArr; SD_SendCmd &rArr; SD_Select &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
</UL>
<BR>[Called By]<UL><LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[53a]"></a>SD_Idle_Sta</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
</UL>

<P><STRONG><a name="[53b]"></a>SD_Initialize</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SD_Initialize &rArr; SD_SendCmd &rArr; SD_Select &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_Init
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_SpeedHigh
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_SpeedLow
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[53c]"></a>SD_ReadDisk</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SD_ReadDisk &rArr; SD_SendCmd &rArr; SD_Select &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_RecvData
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[53d]"></a>SD_WriteDisk</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SD_WriteDisk &rArr; SD_SendCmd &rArr; SD_Select &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendBlock
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[4bd]"></a>GetRestKByte</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = GetRestKByte &rArr; f_getfree &rArr; chk_mounted &rArr; check_fs &rArr; disk_read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
</UL>

<P><STRONG><a name="[53f]"></a>IntToAsc</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAVWithID
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEGWithID
</UL>

<P><STRONG><a name="[541]"></a>SetupIndexFile</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mmc_sd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSDFile
</UL>

<P><STRONG><a name="[540]"></a>InitSDFile</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, mmc_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 884<LI>Call Chain = InitSDFile &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupIndexFile
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[542]"></a>FetchJPEGFileName</STRONG> (Thumb, 440 bytes, Stack size 24 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
</UL>

<P><STRONG><a name="[543]"></a>FetchWAVFileName</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
</UL>

<P><STRONG><a name="[54b]"></a>GetIntTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
</UL>

<P><STRONG><a name="[54c]"></a>CheckDayTime</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
</UL>

<P><STRONG><a name="[544]"></a>CheckJPEGEvent</STRONG> (Thumb, 120 bytes, Stack size 816 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameForward
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
</UL>

<P><STRONG><a name="[545]"></a>CheckWAVEvent</STRONG> (Thumb, 120 bytes, Stack size 816 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameForward
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
</UL>

<P><STRONG><a name="[546]"></a>GetFullJPEGFileName</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>

<P><STRONG><a name="[547]"></a>GetFullWAVFileName</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>

<P><STRONG><a name="[549]"></a>MyMemcpy</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileRecord
</UL>

<P><STRONG><a name="[548]"></a>GetFileRecord</STRONG> (Thumb, 110 bytes, Stack size 584 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyMemcpy
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[54a]"></a>_SearchJPEG</STRONG> (Thumb, 372 bytes, Stack size 288 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDayTime
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntTime
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameForward
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEG
</UL>

<P><STRONG><a name="[54e]"></a>_SearchWAV</STRONG> (Thumb, 424 bytes, Stack size 288 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDayTime
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntTime
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameForward
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAV
</UL>

<P><STRONG><a name="[54f]"></a>SearchJPEG</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[550]"></a>SearchWAV</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[bb8]"></a>SaveJPEGMediaID</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mmc_sd.o(.text), UNUSED)

<P><STRONG><a name="[bb9]"></a>SaveWAVMediaID</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mmc_sd.o(.text), UNUSED)

<P><STRONG><a name="[551]"></a>SearchFileSD</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAVWithID
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEGWithID
</UL>

<P><STRONG><a name="[552]"></a>SearchJPEGWithID</STRONG> (Thumb, 166 bytes, Stack size 608 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFileSD
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToAsc
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[553]"></a>SearchWAVWithID</STRONG> (Thumb, 166 bytes, Stack size 608 bytes, mmc_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFileSD
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToAsc
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[554]"></a>NaviLcdPowerIoInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NaviLcdPowerIoInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
</UL>

<P><STRONG><a name="[555]"></a>NaviLcdPowerOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NaviLcdPowerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_AccStatusOn
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[556]"></a>NaviLcdPowerOff</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NaviLcdPowerOff
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
</UL>
<BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_AccStatusOff
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommResponeTimeout
</UL>

<P><STRONG><a name="[5af]"></a>NaviLcdDelayms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[558]"></a>NaviLcdCommBusyTimeOut</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[557]"></a>NaviLcdCommSendEnd</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NaviLcdCommSendEnd &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[559]"></a>NaviLcdCommStartSendData</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_WriteBuff
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommResendData
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommSendData
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommBusyForResendData
</UL>

<P><STRONG><a name="[55a]"></a>NaviLcdCommBusyForResendData</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = NaviLcdCommBusyForResendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommStartSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[55b]"></a>NaviLcdCommSendData</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommStartSendData
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[55c]"></a>PactSendCmdForNaviLcd</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetXorVerify
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdModifyPassWord
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisponseLoadSensorTransToLcd
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SendCmdDataToCtrlUnit
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SendCmdTerminalTransDataToICCard
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_OriginalDataDownTrans
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdActiveSendKeyValue
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdReadICcardData
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDataToWriteICcard
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdCallTaxiPlatformCancel
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdCallTaxiDetail
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewCallTaxi
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdCurrentDriverInfo
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdInfoService
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQuestionDisplay
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQuestionDisplayEx
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewText
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewCallPhone
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdSetLcdParam
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdCaliTime
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdDislpay
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdSetBaudrate
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdResetLcd
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDriverInfoAdd
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDriverInfoAddOrModifyInfoResult
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQueryStatus
</UL>

<P><STRONG><a name="[e5]"></a>NaviLcdSendCmdQueryStatus</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = NaviLcdSendCmdQueryStatus &rArr; Public_ConvertNowTimeToBCD &rArr; Public_ConvertTimeToBCD &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCD
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SendWorkStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[55e]"></a>NaviLcdCommResendData</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = NaviLcdCommResendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommStartSendData
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommResponeTimeout
</UL>

<P><STRONG><a name="[e1]"></a>NaviLcdCommResponeTimeout</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = NaviLcdCommResponeTimeout &rArr; NaviLcdCommResendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommResendData
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerOff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[55f]"></a>IsNaviLcdCommBusy</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IsNaviLcdCommBusy &rArr; COM2_GetSendBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_GetSendBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SendWorkStatus
</UL>

<P><STRONG><a name="[bba]"></a>NaviLcdCommClearResponse</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, navilcd.o(.text), UNUSED)

<P><STRONG><a name="[561]"></a>PactSendCmdForNaviLcdEx</STRONG> (Thumb, 244 bytes, Stack size 1056 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1156<LI>Call Chain = PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetXorVerify
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdHeartBeat
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQueryParameter
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryStatusAlarm
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQueryPhoneBooks
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeAdjustVolume
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQueryFixText
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverRecord
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryDriverInfo
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDriverSignResult
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdGeneralAck
</UL>

<P><STRONG><a name="[563]"></a>NaviLcdGetStartPoint</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdProtocolParse
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdParseResultForRecvLen
</UL>

<P><STRONG><a name="[562]"></a>NaviLcdParseResultForRecvLen</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NaviLcdParseResultForRecvLen
</UL>
<BR>[Calls]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdGetStartPoint
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdAutoToDisposeRecvData
</UL>

<P><STRONG><a name="[564]"></a>NaviLcdSendCmdGeneralAck</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = NaviLcdSendCmdGeneralAck &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[565]"></a>NaviLcd_DisposeGNSSCheckUp</STRONG> (Thumb, 236 bytes, Stack size 128 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2184 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeGNSSCheckUp &rArr; RadioProtocol_TerminalRegister &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformationReport
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurBasicPositionInfo
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegister
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalQualify
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaEvenReport
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_InforamtionOrder
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_EvenReport
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ElectricReceiptReport
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5ba]"></a>NaviLcd_DisponseOneKeyNavigation</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5b9]"></a>NaviLcd_DisponseLcdTransToLoadSensor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5b8]"></a>NaviLcd_DisponseCtrlUnitTransDataToTerminal</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5b7]"></a>NaviLcd_DisponseICCardTransDataToTerminal</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[567]"></a>NaviLcd_DisposeOriginalDataTrans</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeOriginalDataTrans &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5b6]"></a>NaviLcd_DisposeReadICcardData</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NaviLcd_DisposeReadICcardData
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[568]"></a>NaviLcd_DisposeWriteICcardResult</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeWriteICcardResult &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[569]"></a>NaviLcdSendDriverSignResult</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = NaviLcdSendDriverSignResult &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
</UL>
<BR>[Called By]<UL><LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverSign
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeBrushCardDataForDriverInfo
</UL>

<P><STRONG><a name="[56b]"></a>NaviLcdDriverLoginFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentDriverLoginRecordNumber
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverSign
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogin
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetDriverInfo
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeBrushCardDataForDriverInfo
</UL>

<P><STRONG><a name="[56a]"></a>NaviLcd_DisposeBrushCardDataForDriverInfo</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1220<LI>Call Chain = NaviLcd_DisposeBrushCardDataForDriverInfo &rArr; NaviLcdSendDriverSignResult &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdDriverLoginFlag
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDriverSignResult
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeBrushCardForDriverInfo
</UL>

<P><STRONG><a name="[56c]"></a>NaviLcd_DisposeBrushCardForDriverInfo</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1236<LI>Call Chain = NaviLcd_DisposeBrushCardForDriverInfo &rArr; NaviLcd_DisposeBrushCardDataForDriverInfo &rArr; NaviLcdSendDriverSignResult &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeBrushCardDataForDriverInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeBrushCard
</UL>

<P><STRONG><a name="[56d]"></a>NaviLcd_DisposeBrushCard</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = NaviLcd_DisposeBrushCard &rArr; NaviLcd_DisposeBrushCardForDriverInfo &rArr; NaviLcd_DisposeBrushCardDataForDriverInfo &rArr; NaviLcdSendDriverSignResult &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeBrushCardForDriverInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[56f]"></a>NaviLcd_OpenBrushCard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverInfoAdd
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryDriverInfo
</UL>

<P><STRONG><a name="[56e]"></a>NaviLcd_DisposeQueryDriverInfo</STRONG> (Thumb, 118 bytes, Stack size 1040 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2196<LI>Call Chain = NaviLcd_DisposeQueryDriverInfo &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_OpenBrushCard
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoAll
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[570]"></a>NaviLcd_GetDriverInfo</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = NaviLcd_GetDriverInfo &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdDriverLoginFlag
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverRecord
</UL>

<P><STRONG><a name="[571]"></a>NaviLcd_StartPrintStopRecord</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NaviLcd_StartPrintStopRecord &rArr; LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverRecord
</UL>

<P><STRONG><a name="[572]"></a>NaviLcd_GetTiredDriveRecord</STRONG> (Thumb, 424 bytes, Stack size 160 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = NaviLcd_GetTiredDriveRecord &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToTime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverRecord
</UL>

<P><STRONG><a name="[573]"></a>NaviLcd_GetDriverSpeedRecord</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NaviLcd_GetDriverSpeedRecord &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverRecord
</UL>

<P><STRONG><a name="[574]"></a>NaviLcd_DisposeDriverRecord</STRONG> (Thumb, 86 bytes, Stack size 528 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1684 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeDriverRecord &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetDriverSpeedRecord
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetTiredDriveRecord
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_StartPrintStopRecord
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetDriverInfo
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[575]"></a>NaviLcdSendDriverInfoAddOrModifyInfoResult</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = NaviLcdSendDriverInfoAddOrModifyInfoResult &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>
<BR>[Called By]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverInfoAddInfo
</UL>

<P><STRONG><a name="[576]"></a>NaviLcd_DisposeDriverInfoAddInfo</STRONG> (Thumb, 78 bytes, Stack size 136 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = NaviLcd_DisposeDriverInfoAddInfo &rArr; GetDriverInfo &rArr; DriverInfoReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDriverInfoAddOrModifyInfoResult
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[577]"></a>NaviLcdSendDriverInfoAdd</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = NaviLcdSendDriverInfoAdd &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverInfoAdd
</UL>

<P><STRONG><a name="[578]"></a>NaviLcd_DisposeDriverInfoAdd</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = NaviLcd_DisposeDriverInfoAdd &rArr; NaviLcdSendDriverInfoAdd &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDriverInfoAdd
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_OpenBrushCard
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[57a]"></a>NaviLcdSaveDriverLogin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTiredDriverAutoLog
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogin
</UL>

<P><STRONG><a name="[579]"></a>NaviLcd_DriverLogin</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DriverLogin &rArr; CheckDriverInfoForLogin &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSaveDriverLogin
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdDriverLoginFlag
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentDriverParameter
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDriverInfoForLogin
</UL>
<BR>[Called By]<UL><LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverSign
</UL>

<P><STRONG><a name="[57b]"></a>NaviLcd_DisposeDriverSign</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeDriverSign &rArr; NaviLcd_DriverLogin &rArr; CheckDriverInfoForLogin &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogin
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdDriverLoginFlag
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDriverSignResult
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5b5]"></a>NaviLcd_DisposeTerminalCancelCallTaxi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5b4]"></a>NaviLcd_DisposeCallTaxiFinish</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5b3]"></a>NaviLcd_DisposeCallTaxiVie</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[57c]"></a>NaviLcd_DisposeSendTickleInfo</STRONG> (Thumb, 372 bytes, Stack size 56 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1864 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeSendTickleInfo &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_SndMsg2Svr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[57e]"></a>NaviLcd_DisposeSendFixText</STRONG> (Thumb, 140 bytes, Stack size 80 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeSendFixText &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandChangeStatus
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_InforamtionOrder
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_EvenReport
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[57f]"></a>NaviLcdSendCmdQueryFixText</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = NaviLcdSendCmdQueryFixText &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryFixText
</UL>

<P><STRONG><a name="[580]"></a>NaviLcd_GetFixPhrase</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NaviLcd_GetFixPhrase &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryFixText
</UL>

<P><STRONG><a name="[581]"></a>NaviLcd_DisposeQueryFixText</STRONG> (Thumb, 84 bytes, Stack size 1040 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2212<LI>Call Chain = NaviLcd_DisposeQueryFixText &rArr; NaviLcdSendCmdQueryFixText &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetFixPhrase
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQueryFixText
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInfoDemand
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEventReport
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[582]"></a>NaviLcd_DisposeQustionResponse</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeQustionResponse &rArr; RadioProtocol_QuestionAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_QuestionAck
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_GetDownloadCmdChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[58c]"></a>NaviLcd_CurrentTTSVolDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeAdjustVolume
</UL>

<P><STRONG><a name="[58b]"></a>NaviLcd_CurrentTTSVolUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeAdjustVolume
</UL>

<P><STRONG><a name="[585]"></a>NaviLcd_CurrentPhoneVolDown</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NaviLcd_CurrentPhoneVolDown &rArr; SetTelVolumeDecr &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeDecr
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeKeyValue
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeAdjustVolume
</UL>

<P><STRONG><a name="[587]"></a>NaviLcd_CurrentPhoneVolUp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NaviLcd_CurrentPhoneVolUp &rArr; SetTelVolumeIncr &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeIncr
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeKeyValue
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeAdjustVolume
</UL>

<P><STRONG><a name="[589]"></a>NaviLcd_DisposeAdjustVolume</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1180<LI>Call Chain = NaviLcd_DisposeAdjustVolume &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTelVolume
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModTtsVolume
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CurrentPhoneVolUp
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CurrentPhoneVolDown
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CurrentTTSVolUp
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CurrentTTSVolDown
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[58e]"></a>NaviLcdSendCmdQueryPhoneBooks</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = NaviLcdSendCmdQueryPhoneBooks &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryPhoneBooks
</UL>

<P><STRONG><a name="[58f]"></a>NaviLcd_DisposeQueryPhoneBooks</STRONG> (Thumb, 32 bytes, Stack size 1040 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2212<LI>Call Chain = NaviLcd_DisposeQueryPhoneBooks &rArr; NaviLcdSendCmdQueryPhoneBooks &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQueryPhoneBooks
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneBook
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[e4]"></a>NaviLcd_RecvKeyTimeOut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeKeyValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[590]"></a>NaviLcd_CheckDailPhone</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328 + Unknown Stack Size
<LI>Call Chain = NaviLcd_CheckDailPhone &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeKeyValue
</UL>

<P><STRONG><a name="[592]"></a>NaviLcd_HangUpPhone</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = NaviLcd_HangUpPhone &rArr; communication_CallPhone &rArr; Modem_Api_Phone_Atd &rArr; Modem_Bsp_SpkOn &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeHangUpPhoneStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[593]"></a>NaviLcd_DisposeKeyValue</STRONG> (Thumb, 304 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeKeyValue &rArr; NaviLcd_CheckDailPhone &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Vts
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckDailPhone
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_RecvKeyTimeOut
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CurrentPhoneVolUp
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CurrentPhoneVolDown
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[595]"></a>NaviLcd_DisposeHangUpPhoneStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = NaviLcd_DisposeHangUpPhoneStatus &rArr; NaviLcd_HangUpPhone &rArr; communication_CallPhone &rArr; Modem_Api_Phone_Atd &rArr; Modem_Bsp_SpkOn &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_HangUpPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[5b1]"></a>NaviLcd_DisposePJAResult</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5b0]"></a>NaviLcd_DisposeCarLoadWeight</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[596]"></a>NaviLcd_DisposeExportDataToUsbDisk</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2964 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeExportDataToUsbDisk &rArr; Usb_FindSDcardFileAndSaveToUdisk &rArr; USB_USR_WriterDataToUsb &rArr; USB_USR_ReadAndWriteOnefileToUsb &rArr; USB_USR_WriterDataToUsbDiskApp &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_FindSDcardFileAndSaveToUdisk
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5ae]"></a>NaviLcd_DisposeOutCityRegister</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[598]"></a>NaviLcd_DisposeQueryWorkStatus</STRONG> (Thumb, 338 bytes, Stack size 112 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = NaviLcd_DisposeQueryWorkStatus &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadCourse
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurBasicPositionInfo
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopygPosition
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_GetMudulState
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_GetEnableFlag
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_GetLock2Flag
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SendWorkStatus
</UL>

<P><STRONG><a name="[59a]"></a>NaviLcd_DisposeQueryStatusAlarm</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1204<LI>Call Chain = NaviLcd_DisposeQueryStatusAlarm &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarm
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadExtCarStatusBit
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadExtCarStatus
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatus
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[59e]"></a>NaviLcdSendCmdQueryParameter</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = NaviLcdSendCmdQueryParameter &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryTerminalParamter
</UL>

<P><STRONG><a name="[5a1]"></a>NaviLcd_CheckDataIsIPFormat</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
</UL>

<P><STRONG><a name="[59f]"></a>NaviLcd_QueryOrSaveTerminalParamter</STRONG> (Thumb, 2080 bytes, Stack size 72 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = NaviLcd_QueryOrSaveTerminalParamter &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckDataIsIPFormat
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSetTerminalParamter
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryTerminalParamter
</UL>

<P><STRONG><a name="[5a2]"></a>NaviLcd_DisposeQueryTerminalParamter</STRONG> (Thumb, 108 bytes, Stack size 1080 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2252 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeQueryTerminalParamter &rArr; NaviLcdSendCmdQueryParameter &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQueryParameter
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5a3]"></a>NaviLcd_DisposeSetTerminalParamter</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeSetTerminalParamter &rArr; NaviLcd_QueryOrSaveTerminalParamter &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TrigOpenAccount
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5a4]"></a>NaviLcd_DisposeTerminalCtrlCarLoadStatus</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = NaviLcd_DisposeTerminalCtrlCarLoadStatus &rArr; Public_WriteDataToFRAM &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetCarLoadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
</UL>

<P><STRONG><a name="[5a6]"></a>NaviLcd_DisposeTerminalCtrlQuickOpenAccount</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = NaviLcd_DisposeTerminalCtrlQuickOpenAccount &rArr; Public_QuickOpenAccount &rArr; Lock2_TrigOpenAccount &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_QuickOpenAccount
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
</UL>

<P><STRONG><a name="[5a8]"></a>NaviLcd_DisposeTerminalControl</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2072 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeTerminalControl &rArr; RadioProtocol_TerminalRegister &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationCode
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalCtrlQuickOpenAccount
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalCtrlCarLoadStatus
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegister
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalQualify
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalLogout
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5aa]"></a>NaviLcdSendCmdHeartBeat</STRONG> (Thumb, 42 bytes, Stack size 56 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1212 + Unknown Stack Size
<LI>Call Chain = NaviLcdSendCmdHeartBeat &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurBasicPositionInfo
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCD
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[31f]"></a>NaviLcdSendCmdModifyPassWord</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = NaviLcdSendCmdModifyPassWord &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SetTerminalPassWordToLcd
</UL>

<P><STRONG><a name="[5ab]"></a>NaviLcd_SetTerminalPassWordToLcd</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = NaviLcd_SetTerminalPassWordToLcd &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdModifyPassWord
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
</UL>

<P><STRONG><a name="[5ac]"></a>NaviLcd_SendWorkStatus</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276 + Unknown Stack Size
<LI>Call Chain = NaviLcd_SendWorkStatus &rArr; NaviLcd_DisposeQueryWorkStatus &rArr; PactSendCmdForNaviLcdEx &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNaviLcdCommBusy
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQueryStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[5ad]"></a>NaviLcd_DisposeRecvDataResponse</STRONG> (Thumb, 982 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2980 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeRecvDataResponse &rArr; NaviLcd_DisposeExportDataToUsbDisk &rArr; Usb_FindSDcardFileAndSaveToUdisk &rArr; USB_USR_WriterDataToUsb &rArr; USB_USR_ReadAndWriteOnefileToUsb &rArr; USB_USR_WriterDataToUsbDiskApp &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoDeleteAll
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SetTerminalPassWordToLcd
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdHeartBeat
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSetTerminalParamter
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryTerminalParamter
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryStatusAlarm
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeOutCityRegister
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeExportDataToUsbDisk
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCarLoadWeight
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposePJAResult
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeKeyValue
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryPhoneBooks
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeAdjustVolume
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQustionResponse
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryFixText
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendFixText
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendTickleInfo
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCallTaxiVie
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCallTaxiFinish
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalCancelCallTaxi
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverSign
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverInfoAdd
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverRecord
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryDriverInfo
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeBrushCard
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdDriverLoginFlag
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeWriteICcardResult
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeReadICcardData
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeOriginalDataTrans
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisponseICCardTransDataToTerminal
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisponseCtrlUnitTransDataToTerminal
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisponseLcdTransToLoadSensor
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisponseOneKeyNavigation
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdGeneralAck
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdDelayms
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[5bb]"></a>NaviLcdProtocolParse</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NaviLcdProtocolParse &rArr; Public_GetXorVerify
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetXorVerify
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdGetStartPoint
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdAutoToDisposeRecvData
</UL>

<P><STRONG><a name="[5bc]"></a>NaviLcd_DisposeCommProtocolParse</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2040 + Unknown Stack Size
<LI>Call Chain = NaviLcd_DisposeCommProtocolParse &rArr; Temperature_ComRec &rArr; Temperature_8900Send &rArr; EIExpand_PotocolSendData &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_UartDataProtocolParse
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_ParseCmd
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_OilProtocolCheck
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_ComRec
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_ProtocolParse
</UL>
<BR>[Called By]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdAutoToDisposeRecvData
</UL>

<P><STRONG><a name="[5be]"></a>NaviLcdAutoToDisposeRecvData</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2056 + Unknown Stack Size
<LI>Call Chain = NaviLcdAutoToDisposeRecvData &rArr; NaviLcd_DisposeCommProtocolParse &rArr; Temperature_ComRec &rArr; Temperature_8900Send &rArr; EIExpand_PotocolSendData &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_ReadBuff
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCommProtocolParse
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdProtocolParse
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdParseResultForRecvLen
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_TimerTask
</UL>

<P><STRONG><a name="[31e]"></a>NaviLcd_GetCurOnlineStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdCallTaxiDetail
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewCallTaxi
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdShowPlatformText
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Question_DisposeRadioProtocol
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_DisposeRadioProtocol
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_DisposePhoneStatus
</UL>

<P><STRONG><a name="[5bf]"></a>NaviLcdSendCmdResetLcd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[5c0]"></a>NaviLcdSendCmdSetBaudrate</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[5c1]"></a>NaviLcdSendCmdDislpay</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[5c2]"></a>NaviLcdSendCmdCaliTime</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCD
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[5c3]"></a>NaviLcdSendCmdSetLcdParam</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[5c4]"></a>NaviLcdSendCmdNewCallPhone</STRONG> (Thumb, 122 bytes, Stack size 104 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = NaviLcdSendCmdNewCallPhone &rArr; Public_CheckPhoneInformation &rArr; Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposePhoneStatus
</UL>

<P><STRONG><a name="[5c5]"></a>NaviLcdSendCmdNewText</STRONG> (Thumb, 80 bytes, Stack size 1056 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1188<LI>Call Chain = NaviLcdSendCmdNewText &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdShowTempText
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdShowPlatformText
</UL>

<P><STRONG><a name="[5c6]"></a>NaviLcdShowPlatformText</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1204<LI>Call Chain = NaviLcdShowPlatformText &rArr; NaviLcdSendCmdNewText &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetCurOnlineStatus
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewText
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
</UL>

<P><STRONG><a name="[5c7]"></a>NaviLcdShowTempText</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewText
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[5c8]"></a>NaviLcdSendCmdQuestionDisplayEx</STRONG> (Thumb, 56 bytes, Stack size 1048 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[5c9]"></a>NaviLcdSendCmdQuestionDisplay</STRONG> (Thumb, 188 bytes, Stack size 1056 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1188<LI>Call Chain = NaviLcdSendCmdQuestionDisplay &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_RadioProtocolQuestionDownload
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Question_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[5ca]"></a>NaviLcdSendCmdInfoService</STRONG> (Thumb, 64 bytes, Stack size 1048 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1180<LI>Call Chain = NaviLcdSendCmdInfoService &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_DisposeRadioProtocol
</UL>

<P><STRONG><a name="[5cb]"></a>NaviLcdSendCmdCurrentDriverInfo</STRONG> (Thumb, 116 bytes, Stack size 88 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[5cc]"></a>NaviLcdSendCmdNewCallTaxi</STRONG> (Thumb, 66 bytes, Stack size 1048 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetCurOnlineStatus
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[5cd]"></a>NaviLcdSendCmdCallTaxiDetail</STRONG> (Thumb, 66 bytes, Stack size 1048 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetCurOnlineStatus
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[5ce]"></a>NaviLcdSendCmdCallTaxiPlatformCancel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[5cf]"></a>NaviLcdCommParamInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = NaviLcdCommParamInit &rArr; COM2_Init &rArr; COMM_Initialize &rArr; COMM_SetBaudRateInitialize &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_Init
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_AccStatusOn
</UL>

<P><STRONG><a name="[5d1]"></a>NaviLcd_LogoutSaveParam</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogout
</UL>

<P><STRONG><a name="[5d2]"></a>NaviLcdSaveDriverLogout</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogout
</UL>

<P><STRONG><a name="[4f1]"></a>NaviLcd_DriverLogout</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = NaviLcd_DriverLogout
</UL>
<BR>[Calls]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSaveDriverLogout
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_LogoutSaveParam
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoDeleteAll
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTiredDriverAutoLog
</UL>

<P><STRONG><a name="[5d3]"></a>NaviLcdSendDataToWriteICcard</STRONG> (Thumb, 48 bytes, Stack size 280 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_WriteDriverInfoToICcard
</UL>

<P><STRONG><a name="[5d4]"></a>NaviLcdSendCmdReadICcardData</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[bbb]"></a>NaviLcd_DisposeDriverBusinessReport</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, navilcd.o(.text), UNUSED)

<P><STRONG><a name="[bbc]"></a>NaviLcd_SendCarLoadClearSensorResult</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text), UNUSED)

<P><STRONG><a name="[bbd]"></a>NaviLcd_SendCarLoadQuerySensorResult</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text), UNUSED)

<P><STRONG><a name="[5d5]"></a>NaviLcdActiveSendKeyValue</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = NaviLcdActiveSendKeyValue &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposePhoneStatus
</UL>

<P><STRONG><a name="[5d6]"></a>NaviLcd_OriginalDataDownTrans</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[5d7]"></a>GetCurrentDriverLoginRecordNumber</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdDriverLoginFlag
</UL>

<P><STRONG><a name="[5d8]"></a>CheckTiredDriverAutoLog</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSaveDriverLogin
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogout
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentDriverParameter
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumber
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[5d9]"></a>NaviLcd_RadioProtocolQuestionDownload</STRONG> (Thumb, 268 bytes, Stack size 80 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQuestionDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[bbe]"></a>NaviLcd_CloseBrushCard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text), UNUSED)

<P><STRONG><a name="[5da]"></a>NaviLcd_DisposePhoneStatus</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = NaviLcd_DisposePhoneStatus &rArr; NaviLcdSendCmdNewCallPhone &rArr; Public_CheckPhoneInformation &rArr; Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdActiveSendKeyValue
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewCallPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_DisposePhoneStatus
</UL>

<P><STRONG><a name="[4a]"></a>NaviLcd_TimerTask</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2064 + Unknown Stack Size
<LI>Call Chain = NaviLcd_TimerTask &rArr; NaviLcdAutoToDisposeRecvData &rArr; NaviLcd_DisposeCommProtocolParse &rArr; Temperature_ComRec &rArr; Temperature_8900Send &rArr; EIExpand_PotocolSendData &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdAutoToDisposeRecvData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[5db]"></a>NaviLcd_AccStatusOff</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NaviLcd_AccStatusOff &rArr; NaviLcdPowerOff
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerOff
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckACCStatus
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CloseAllUserPower
</UL>

<P><STRONG><a name="[5dc]"></a>NaviLcd_AccStatusOn</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = NaviLcd_AccStatusOn &rArr; NaviLcdCommParamInit &rArr; COM2_Init &rArr; COMM_Initialize &rArr; COMM_SetBaudRateInitialize &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommParamInit
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerOn
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckACCStatus
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_OpenAllUserPower
</UL>

<P><STRONG><a name="[bbf]"></a>NaviLcd_AccStatusTurnPromptDriver</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text), UNUSED)

<P><STRONG><a name="[5dd]"></a>NaviLcd_CheckACCStatus</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = NaviLcd_CheckACCStatus &rArr; NaviLcd_AccStatusOn &rArr; NaviLcdCommParamInit &rArr; COM2_Init &rArr; COMM_Initialize &rArr; COMM_SetBaudRateInitialize &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_AccStatusOn
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_AccStatusOff
</UL>
<BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_StartCheckACCStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[5de]"></a>NaviLcd_StartCheckACCStatus</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NaviLcd_StartCheckACCStatus &rArr; NaviLcd_CheckACCStatus &rArr; NaviLcd_AccStatusOn &rArr; NaviLcdCommParamInit &rArr; COM2_Init &rArr; COMM_Initialize &rArr; COMM_SetBaudRateInitialize &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckACCStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[5df]"></a>NaviLcd_ParameterInitialize</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, navilcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NaviLcd_ParameterInitialize &rArr; NaviLcd_CheckACCStatus &rArr; NaviLcd_AccStatusOn &rArr; NaviLcdCommParamInit &rArr; COM2_Init &rArr; COMM_Initialize &rArr; COMM_SetBaudRateInitialize &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckACCStatus
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommParamInit
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerOff
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerIoInit
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[5e0]"></a>NaviLcd_WriteDriverInfoToICcard</STRONG> (Thumb, 48 bytes, Stack size 216 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDataToWriteICcard
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DebugToWriteICcard
</UL>

<P><STRONG><a name="[5e1]"></a>NaviLcd_DebugToWriteICcard</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_WriteDriverInfoToICcard
</UL>

<P><STRONG><a name="[5e2]"></a>NaviLcd_SendCmdTerminalTransDataToICCard</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[5e3]"></a>NaviLcd_SendCmdDataToCtrlUnit</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SendCmdTerminalTransDataToCtrlUnit
</UL>

<P><STRONG><a name="[5e4]"></a>NaviLcd_SendCmdTerminalTransDataToCtrlUnit</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SendCmdDataToCtrlUnit
</UL>

<P><STRONG><a name="[5e5]"></a>NaviLcd_DisponseLoadSensorTransToLcd</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, navilcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[bc0]"></a>NaviLcd_SetCurrentPJAValid</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, navilcd.o(.text), UNUSED)

<P><STRONG><a name="[5e6]"></a>OilControl_IoInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, oilcontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OilControl_IoInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_ParameterInitialize
</UL>

<P><STRONG><a name="[5e7]"></a>OilControl_GetOilWayStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, oilcontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OilControl_GetOilWayStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlOil_TimeTask
</UL>

<P><STRONG><a name="[5e9]"></a>OilControl_CtrlOilWay</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, oilcontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OilControl_CtrlOilWay
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlOil_TimeTask
</UL>

<P><STRONG><a name="[5ea]"></a>OilControl_OpenOil</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, oilcontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OilControl_OpenOil &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_ParameterInitialize
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CarControl
</UL>

<P><STRONG><a name="[5eb]"></a>OilControl_OffOil</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, oilcontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OilControl_OffOil &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_ParameterInitialize
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CarControl
</UL>

<P><STRONG><a name="[5ec]"></a>OilControl_ParameterInitialize</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, oilcontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OilControl_ParameterInitialize &rArr; OilControl_OffOil &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_OffOil
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_OpenOil
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_IoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[48]"></a>ControlOil_TimeTask</STRONG> (Thumb, 460 bytes, Stack size 16 bytes, oilcontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ControlOil_TimeTask &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteStatusBit
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetSecondSpeed
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_CtrlOilWay
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_GetOilWayStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[4af]"></a>SetTerminalFirmwareVersion</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = SetTerminalFirmwareVersion &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23a]"></a>UpdateRunMode</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UpdateRunMode &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Init
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_UpdateParameter
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdatePram
</UL>

<P><STRONG><a name="[350]"></a>UpdatePeripheralType</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UpdatePeripheralType &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adjust_Array_Size
</UL>

<P><STRONG><a name="[76f]"></a>ReadPeripheral1TypeBit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adjust_Array_Size
</UL>

<P><STRONG><a name="[16b]"></a>ReadPeripheral2TypeBit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_TimeTask
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_TimeTask
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilLevelPercent
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilVolume
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_OilProtocolCheck
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_DisposeFunctionProtocol
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCommProtocolParse
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerOff
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionAdditionalInfo
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adjust_Array_Size
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
</UL>

<P><STRONG><a name="[34c]"></a>UpdataAccOffGpsControlFlag</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UpdataAccOffGpsControlFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[5ee]"></a>UpdataEvaluatorControlFlag</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, other.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>

<P><STRONG><a name="[34d]"></a>UpdataTaximeterControlFlag</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UpdataTaximeterControlFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[34e]"></a>UpdataToplightControlFlag</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UpdataToplightControlFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[34f]"></a>UpdataLedlightControlFlag</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UpdataLedlightControlFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[78]"></a>EvRing</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = EvRing &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[79]"></a>EvRingOver</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, other.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[34b]"></a>SpeedFlagUpdatePram</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = SpeedFlagUpdatePram &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_UpdateParameter
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_ClearOldPoint
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_UpdatePram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vss_TimeTask
</UL>

<P><STRONG><a name="[bc1]"></a>SetBeepOnEvBit</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, other.o(.text), UNUSED)

<P><STRONG><a name="[697]"></a>SetLink1LoginAuthorizationState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegisterAck
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Login
</UL>

<P><STRONG><a name="[698]"></a>SetLink2LoginAuthorizationState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegisterAck
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Login
</UL>

<P><STRONG><a name="[73]"></a>GetAkey_EvTask</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2064 + Unknown Stack Size
<LI>Call Chain = GetAkey_EvTask &rArr; RadioProtocol_TerminalRegister &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegister
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[74]"></a>ChangeServer_EvTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, other.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[75]"></a>FtpUpdata_EvTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, other.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>Dialling_EvTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, other.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>SevDial_EvTask</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SevDial_EvTask &rArr; Phone_SetDialEvTask &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SetDialEvTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>Updata_SendResultNoteTimeTask</STRONG> (Thumb, 432 bytes, Stack size 16 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = Updata_SendResultNoteTimeTask &rArr; RadioProtocol_UpdataResultNote &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_UpdataResultNote
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>Reset_TimeTask</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Reset_TimeTask
</UL>
<BR>[Calls]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>DelayTrigTimeTask</STRONG> (Thumb, 1350 bytes, Stack size 984 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2960 + Unknown Stack Size
<LI>Call Chain = DelayTrigTimeTask &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionInfo
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Erase
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CloseCollectGNSS
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEvTask
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteStatusBit
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_GetDownloadCmdChannel
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaEvenReport
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_DisposeTerminalShutdown
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PhotoAck
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOD_CloseMainIp
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_PWR_OFF
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[23b]"></a>GetTerminalAuthorizationFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_SchedulePhoto
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSend
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TimeTask
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[694]"></a>SetTerminalAuthorizationFlag</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
</UL>

<P><STRONG><a name="[5a9]"></a>ClearTerminalAuthorizationFlag</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Down
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Down
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Init
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Init
</UL>

<P><STRONG><a name="[31b]"></a>ClearTerminalAuthorizationCode</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ClearTerminalAuthorizationCode &rArr; E2prom_WriteByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_OpenAccountAck
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
</UL>

<P><STRONG><a name="[5fa]"></a>MultiCenterConnect_SetRequestFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
</UL>

<P><STRONG><a name="[5f9]"></a>MultiCenterConnect_GetConnectFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
</UL>

<P><STRONG><a name="[4b]"></a>MultiCenterConnect_TimeTask</STRONG> (Thumb, 700 bytes, Stack size 96 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = MultiCenterConnect_TimeTask &rArr; RadioProtocol_TerminalQualify &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SocSta
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Init
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalQualify
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_GetConnectFlag
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_SetRequestFlag
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[939]"></a>MultiCenterConnect_GetRequestFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Login
</UL>

<P><STRONG><a name="[31c]"></a>MultiCenterConnect_SetFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[bc2]"></a>MultiCenterConnect_ResetFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, other.o(.text), UNUSED)

<P><STRONG><a name="[bc3]"></a>MultiCenterConnect_ResetRequestFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, other.o(.text), UNUSED)

<P><STRONG><a name="[bc4]"></a>TexiService_PlayTTSVoiceStr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, other.o(.text), UNUSED)

<P><STRONG><a name="[5fb]"></a>Print_RTC</STRONG> (Thumb, 10 bytes, Stack size 16 bytes, other.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
</UL>

<P><STRONG><a name="[bc5]"></a>SetCostDownVersionFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, other.o(.text), UNUSED)

<P><STRONG><a name="[bc6]"></a>ClearCostDownVersionFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, other.o(.text), UNUSED)

<P><STRONG><a name="[bc7]"></a>GetCostDownVersionFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, other.o(.text), UNUSED)

<P><STRONG><a name="[5fc]"></a>GanSuOil_OilProtocolCheck</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, other.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[5fd]"></a>GanSuOil_GetOnePacketData</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, other.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[bc8]"></a>GanSuOil_GetCurPacketLen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, other.o(.text), UNUSED)

<P><STRONG><a name="[35a]"></a>Acceleration_DisposeRadioProtocol</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Acceleration_DisposeRadioProtocol &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Emer_Threshold
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_DisposeFunctionProtocol
</UL>

<P><STRONG><a name="[359]"></a>Acceleration_Turn_DisposeRadioProtocol</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Acceleration_Turn_DisposeRadioProtocol &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Emer_Threshold
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_DisposeFunctionProtocol
</UL>

<P><STRONG><a name="[3f]"></a>Link1Login_TimeTask</STRONG> (Thumb, 670 bytes, Stack size 40 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2096 + Unknown Stack Size
<LI>Call Chain = Link1Login_TimeTask &rArr; RadioProtocol_TerminalRegister &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTerminalAuthorizationFlag
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Open
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Close
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationCode
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegister
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalQualify
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Printf
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>Link2Login_TimeTask</STRONG> (Thumb, 504 bytes, Stack size 40 bytes, other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2096 + Unknown Stack Size
<LI>Call Chain = Link2Login_TimeTask &rArr; RadioProtocol_TerminalRegister &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTerminalAuthorizationFlag
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationCode
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegister
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalQualify
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Open
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Close
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Printf
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[69]"></a>PacketUpdate_TimeTask</STRONG> (Thumb, 514 bytes, Stack size 32 bytes, packetupdate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = PacketUpdate_TimeTask &rArr; PacketUpdate_SendPacketRequest &rArr; RadioProtocol_ResendPacketRequest &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTerminalAuthorizationFlag
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Close
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_SendUpdateResultNote
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TerminalGeneralAck
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_SendPacketRequest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[609]"></a>PacketUpdate_HandleCmd8108H</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, packetupdate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PacketUpdate_HandleCmd8108H
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DownloadUpdatePacket
</UL>

<P><STRONG><a name="[616]"></a>Phone_SetPhoneSpecialFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, phone.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CallBackPhone
</UL>

<P><STRONG><a name="[61a]"></a>Phone_GetPhoneSpecialFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, phone.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposeCallTalkStatus
</UL>

<P><STRONG><a name="[60a]"></a>Phone_GetCurMonthTotalSec</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Phone_GetCurMonthTotalSec
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurNextMonthStartTime
</UL>

<P><STRONG><a name="[60b]"></a>Phone_GetCurMonthStartTime</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Phone_GetCurMonthStartTime &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthStartTimeAndSave
</UL>

<P><STRONG><a name="[60c]"></a>Phone_GetCurNextMonthStartTime</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Phone_GetCurNextMonthStartTime &rArr; Phone_GetCurMonthTotalSec
</UL>
<BR>[Calls]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthTotalSec
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ParamInitialize
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthStartTimeAndSave
</UL>

<P><STRONG><a name="[60d]"></a>Phone_SaveMonthParam</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Phone_SaveMonthParam &rArr; Public_WriteDataToFRAM &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposeHangUpStatus
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CheckTalkTime
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthStartTimeAndSave
</UL>

<P><STRONG><a name="[60e]"></a>Phone_GetCurMonthStartTimeAndSave</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Phone_GetCurMonthStartTimeAndSave &rArr; Phone_GetCurMonthStartTime &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SaveMonthParam
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurNextMonthStartTime
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthStartTime
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateMaxPhoneTimeMonth
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CheckMonthStartTime
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ReadMonthParam
</UL>

<P><STRONG><a name="[60f]"></a>Phone_ReadMonthParam</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Phone_ReadMonthParam &rArr; Phone_GetCurMonthStartTimeAndSave &rArr; Phone_GetCurMonthStartTime &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthStartTimeAndSave
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ParamInitialize
</UL>

<P><STRONG><a name="[677]"></a>Phone_GetEachMaxTalkTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phone.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
</UL>

<P><STRONG><a name="[bc9]"></a>Phone_GetMonthMaxTalkTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phone.o(.text), UNUSED)

<P><STRONG><a name="[bca]"></a>Phone_GetCurMonthTalkTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phone.o(.text), UNUSED)

<P><STRONG><a name="[610]"></a>Phone_DisposeHangUp</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Phone_DisposeHangUp &rArr; communication_CallPhone &rArr; Modem_Api_Phone_Atd &rArr; Modem_Bsp_SpkOn &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phone.o(.text)
</UL>
<P><STRONG><a name="[611]"></a>Phone_CheckMonthStartTime</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Phone_CheckMonthStartTime &rArr; Phone_GetCurMonthStartTimeAndSave &rArr; Phone_GetCurMonthStartTime &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthStartTimeAndSave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phone.o(.text)
</UL>
<P><STRONG><a name="[613]"></a>Phone_GetOverMonthTalkTimeFlag</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, phone.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_StartCheckTalkTime
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CheckTalkTime
</UL>

<P><STRONG><a name="[612]"></a>Phone_CheckTalkTime</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Phone_CheckTalkTime &rArr; Phone_SaveMonthParam &rArr; Public_WriteDataToFRAM &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetOverMonthTalkTimeFlag
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SaveMonthParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phone.o(.text)
</UL>
<P><STRONG><a name="[614]"></a>Phone_StartCheckTalkTime</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Phone_StartCheckTalkTime &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetOverMonthTalkTimeFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposeCallTalkStatus
</UL>

<P><STRONG><a name="[615]"></a>Phone_CallBackPhone</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Phone_CallBackPhone &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_OnSta
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SetPhoneSpecialFlag
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phone.o(.text)
</UL>
<P><STRONG><a name="[5f0]"></a>Phone_SetDialEvTask</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Phone_SetDialEvTask &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_OnSta
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevDial_EvTask
</UL>

<P><STRONG><a name="[618]"></a>Phone_DisposeHangUpStatus</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Phone_DisposeHangUpStatus &rArr; Phone_SaveMonthParam &rArr; Public_WriteDataToFRAM &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SaveMonthParam
</UL>
<BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposePhoneStatus
</UL>

<P><STRONG><a name="[619]"></a>Phone_DisposeCallTalkStatus</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Phone_DisposeCallTalkStatus &rArr; Phone_StartCheckTalkTime &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_StartCheckTalkTime
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetPhoneSpecialFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposePhoneStatus
</UL>

<P><STRONG><a name="[61b]"></a>Phone_DisposePhoneStatus</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Phone_DisposePhoneStatus &rArr; Phone_DisposeHangUpStatus &rArr; Phone_SaveMonthParam &rArr; Public_WriteDataToFRAM &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposeCallTalkStatus
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposeHangUpStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_DisposePhoneStatus
</UL>

<P><STRONG><a name="[341]"></a>Phone_UpdateMaxPhoneTimeEach</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Phone_UpdateMaxPhoneTimeEach &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateParam
</UL>

<P><STRONG><a name="[342]"></a>Phone_UpdateMaxPhoneTimeMonth</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Phone_UpdateMaxPhoneTimeMonth &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthStartTimeAndSave
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateParam
</UL>

<P><STRONG><a name="[61c]"></a>Phone_UpdateParam</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Phone_UpdateParam &rArr; Phone_UpdateMaxPhoneTimeMonth &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateMaxPhoneTimeMonth
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateMaxPhoneTimeEach
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ParamInitialize
</UL>

<P><STRONG><a name="[61d]"></a>Phone_ParamInitialize</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Phone_ParamInitialize &rArr; Phone_UpdateParam &rArr; Phone_UpdateMaxPhoneTimeMonth &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateParam
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ReadMonthParam
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurNextMonthStartTime
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ParameterInitialize
</UL>

<P><STRONG><a name="[61e]"></a>Phone_TimeTask</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, phone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Phone_TimeTask &rArr; LZM_PublicTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerTask
</UL>

<P><STRONG><a name="[61f]"></a>PhoneBook_ReadCallRecord</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PhoneBook_ReadCallRecord &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ModifyCurCallRecord
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadOneCallRecordData
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SaveOneCallRecordData
</UL>

<P><STRONG><a name="[620]"></a>PhoneBook_SaveCallRecord</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PhoneBook_SaveCallRecord &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ModifyCurCallRecord
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SaveOneCallRecordData
</UL>

<P><STRONG><a name="[326]"></a>PhoneBook_CallRecordDeleteAll</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PhoneBook_CallRecordDeleteAll &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadAndCheckCallRecord
</UL>

<P><STRONG><a name="[51f]"></a>PhoneBook_ReadAndCheckCallRecord</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = PhoneBook_ReadAndCheckCallRecord &rArr; PhoneBook_CallRecordDeleteAll &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CallRecordDeleteAll
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_ParameterInitialize
</UL>

<P><STRONG><a name="[621]"></a>PhoneBook_SaveOneCallRecordData</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PhoneBook_SaveOneCallRecordData &rArr; PhoneBook_SaveCallRecord &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SaveCallRecord
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadCallRecord
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
</UL>

<P><STRONG><a name="[622]"></a>PhoneBook_ReadOneCallRecordData</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PhoneBook_ReadOneCallRecordData &rArr; PhoneBook_ReadCallRecord &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadCallRecord
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordTalkCall
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordIndex
</UL>

<P><STRONG><a name="[623]"></a>PhoneBook_GetCallRecordTotalNum</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PhoneBook_GetCallRecordTotalNum &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
</UL>

<P><STRONG><a name="[624]"></a>PhoneBook_ModifyCurCallRecord</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PhoneBook_ModifyCurCallRecord &rArr; PhoneBook_SaveCallRecord &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SaveCallRecord
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadCallRecord
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
</UL>

<P><STRONG><a name="[625]"></a>PhoneBook_HangUpCall</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PhoneBook_HangUpCall &rArr; communication_CallPhone &rArr; Modem_Api_Phone_Atd &rArr; Modem_Bsp_SpkOn &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetOperateTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TakeCallMonitorServerPhone
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeNewCallPhone
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonebook.o(.text)
</UL>
<P><STRONG><a name="[626]"></a>TaskShowCallTalking</STRONG> (Thumb, 506 bytes, Stack size 48 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = TaskShowCallTalking &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunCountReset
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeIncr
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeDecr
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTelVolume
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReturnOldTaskEx
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetTimer
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckIsPhoneServerRunStatus
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SetCurrentCallStatus
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_HangUpCall
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ModifyCurCallRecord
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonebook.o(.text)
</UL>
<P><STRONG><a name="[629]"></a>TaskShowNewCallPhone</STRONG> (Thumb, 432 bytes, Stack size 24 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TaskShowNewCallPhone &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunCountReset
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReturnOldTaskEx
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTaskEx
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneIsSpecialNumber
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckIsPhoneServerRunStatus
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SetCurrentCallStatus
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_HangUpCall
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SaveOneCallRecordData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonebook.o(.text)
</UL>
<P><STRONG><a name="[627]"></a>PhoneBook_SetCurrentCallStatus</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PhoneBook_SetCurrentCallStatus &rArr; LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TakeCallMonitorServerPhone
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposePhoneStatus
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeNewCallPhone
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
</UL>

<P><STRONG><a name="[62b]"></a>PhoneBook_DisposeNewCallPhone</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = PhoneBook_DisposeNewCallPhone &rArr; Public_CheckPhoneInformation &rArr; Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SetCurrentCallStatus
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_HangUpCall
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposePhoneStatus
</UL>

<P><STRONG><a name="[62c]"></a>PhoneBook_DisposePhoneStatus</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = PhoneBook_DisposePhoneStatus &rArr; PhoneBook_DisposeNewCallPhone &rArr; Public_CheckPhoneInformation &rArr; Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeNewCallPhone
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SetCurrentCallStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_DisposePhoneStatus
</UL>

<P><STRONG><a name="[62d]"></a>ShowPhoneBookIndex</STRONG> (Thumb, 158 bytes, Stack size 80 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = ShowPhoneBookIndex &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_GetOnePhoneBookContent
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
</UL>

<P><STRONG><a name="[62e]"></a>TaskShowMakeNewDial</STRONG> (Thumb, 412 bytes, Stack size 32 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskShowMakeNewDial &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonebook.o(.text)
</UL>
<P><STRONG><a name="[62f]"></a>ShowCallRecordIndex</STRONG> (Thumb, 196 bytes, Stack size 96 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = ShowCallRecordIndex &rArr; Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_LcdShowTime
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadOneCallRecordData
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
</UL>

<P><STRONG><a name="[630]"></a>ShowCallRecordTalkCall</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = ShowCallRecordTalkCall &rArr; PhoneBook_CheckPhoneCallResult &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadOneCallRecordData
</UL>
<BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallRecord
</UL>

<P><STRONG><a name="[631]"></a>TaskShowCallRecord</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = TaskShowCallRecord &rArr; ShowCallRecordTalkCall &rArr; PhoneBook_CheckPhoneCallResult &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordTalkCall
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordIndex
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_GetCallRecordTotalNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonebook.o(.text)
</UL>
<P><STRONG><a name="[632]"></a>ShowPhoneBookTalkCall</STRONG> (Thumb, 30 bytes, Stack size 56 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = ShowPhoneBookTalkCall &rArr; PhoneBook_CheckPhoneCallResult &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_GetOnePhoneBookContent
</UL>
<BR>[Called By]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowPhoneBook
</UL>

<P><STRONG><a name="[633]"></a>TaskShowPhoneBook</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = TaskShowPhoneBook &rArr; ShowPhoneBookTalkCall &rArr; PhoneBook_CheckPhoneCallResult &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_GetPhoneBookTotalNum
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneBookTalkCall
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneBookIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonebook.o(.text)
</UL>
<P><STRONG><a name="[634]"></a>TakeCallMonitorServerPhone</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = TakeCallMonitorServerPhone &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SetCurrentCallStatus
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_HangUpCall
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPhone
</UL>

<P><STRONG><a name="[e6]"></a>TaskMenuPhone</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuPhone &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TakeCallMonitorServerPhone
</UL>
<BR>[Address Reference Count : 2]<UL><LI> phonebook.o(.text)
<LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[e7]"></a>TaskShowDialing</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = TaskShowDialing &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunCountReset
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTaskEx
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckIsPhoneServerRunStatus
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SetCurrentCallStatus
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_HangUpCall
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SaveOneCallRecordData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonebook.o(.text)
</UL>
<P><STRONG><a name="[5b2]"></a>PhoneBook_CheckPhoneCallResult</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, phonebook.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = PhoneBook_CheckPhoneCallResult &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneIsSpecialNumber
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckIsPhoneServerRunStatus
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SetCurrentCallStatus
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_HangUpCall
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneBookTalkCall
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordTalkCall
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
</UL>

<P><STRONG><a name="[344]"></a>Photo_UpdatePram</STRONG> (Thumb, 502 bytes, Stack size 32 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Photo_UpdatePram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_TimeTask
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_TimeArive
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_DistanceArive
</UL>

<P><STRONG><a name="[4e]"></a>Photo_TimeTask</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Photo_TimeTask &rArr; Photo_AlarmChange &rArr; Camera_Photo &rArr; Camera_WriteParameter &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_UpdatePram
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_AlarmChange
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_StatusChange
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_TimeArive
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_DistanceArive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[63b]"></a>Polygon_ResetParam</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Polygon_ResetParam &rArr; Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanTask
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckScanTask
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckForResetParam
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_AreaParameterInit
</UL>

<P><STRONG><a name="[63c]"></a>Polygon_AreaParameterInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Polygon_AreaParameterInit &rArr; Polygon_ResetParam &rArr; Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ClearArea
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ReadAndCheckParam
</UL>

<P><STRONG><a name="[63d]"></a>Polygon_CheckForResetParam</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Polygon_CheckForResetParam &rArr; Polygon_ResetParam &rArr; Area_ClearAllAlarm &rArr; Area_ClearCloseGPRSFlag &rArr; Area_OpenGSMModule &rArr; Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DeleteArea
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetArea
</UL>

<P><STRONG><a name="[204]"></a>Polygon_ClearArea</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Polygon_ClearArea &rArr; Area_EraseFlash &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_EraseFlash
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_AreaParameterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundArea
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectArea
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ReadAndCheckParam
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DeleteArea
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetArea
</UL>

<P><STRONG><a name="[63e]"></a>Polygon_ReadEndPointData</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Polygon_ReadEndPointData &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
</UL>

<P><STRONG><a name="[63f]"></a>Polygon_GetCurGpsCoordinate</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Polygon_GetCurGpsCoordinate &rArr; Public_GetCurBasicPositionInfo &rArr; Report_GetPositionBasicInfo &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurBasicPositionInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckScanTask
</UL>

<P><STRONG><a name="[644]"></a>Polygon_CheckIsInMinRectArea</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, polygon.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_IsInArea
</UL>

<P><STRONG><a name="[640]"></a>Polygon_CalTrigonOrientation</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Polygon_CalTrigonOrientation &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ComparePosBlock
</UL>

<P><STRONG><a name="[641]"></a>Polygon_ComparePosBlock</STRONG> (Thumb, 204 bytes, Stack size 552 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = Polygon_ComparePosBlock &rArr; Polygon_CalTrigonOrientation &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CalTrigonOrientation
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ComparePos
</UL>

<P><STRONG><a name="[642]"></a>Polygon_ComparePos</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = Polygon_ComparePos &rArr; Polygon_ComparePosBlock &rArr; Polygon_CalTrigonOrientation &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ComparePosBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_IsInArea
</UL>

<P><STRONG><a name="[643]"></a>Polygon_IsInArea</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = Polygon_IsInArea &rArr; Polygon_ComparePos &rArr; Polygon_ComparePosBlock &rArr; Polygon_CalTrigonOrientation &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ComparePos
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckIsInMinRectArea
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
</UL>

<P><STRONG><a name="[645]"></a>Polygon_CheckTime</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Polygon_CheckTime &rArr; Area_GetConvertCurTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInRange
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConvertCurTime
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
</UL>

<P><STRONG><a name="[646]"></a>Polygon_ClearInOutAlarm</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, polygon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearInOutAreaAlarmBit
</UL>

<P><STRONG><a name="[647]"></a>Polygon_DisposeDriveOutArea</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = Polygon_DisposeDriveOutArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInOutAreaAlarmInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ChoiceAreaArmDest
</UL>

<P><STRONG><a name="[648]"></a>Polygon_DisposeDriveInArea</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = Polygon_DisposeDriveInArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_SetAreaParameter
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearAllAlarm
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInOutAreaAlarmInfo
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetInAreaFlag
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetCloseGPRSFlag
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetCollectGnssFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ChoiceAreaArmDest
</UL>

<P><STRONG><a name="[649]"></a>Polygon_ChoiceAreaArmDest</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = Polygon_ChoiceAreaArmDest &rArr; Polygon_DisposeDriveInArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveInArea
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveOutArea
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
</UL>

<P><STRONG><a name="[64a]"></a>Polygon_ScanArea</STRONG> (Thumb, 630 bytes, Stack size 184 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488 + Unknown Stack Size
<LI>Call Chain = Polygon_ScanArea &rArr; Polygon_ChoiceAreaArmDest &rArr; Polygon_DisposeDriveInArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckOpenDoorAlarm
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ConverseBcdGmtime
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConverseBCDTimeType
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ChoiceAreaArmDest
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckTime
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_IsInArea
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ComparePos
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckIsInMinRectArea
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ReadEndPointData
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ResetParam
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckScanTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> polygon.o(.text)
</UL>
<P><STRONG><a name="[64b]"></a>Polygon_GetAreaUserDatalen</STRONG> (Thumb, 154 bytes, Stack size 184 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Polygon_GetAreaUserDatalen &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_AreaModifyUserData
</UL>

<P><STRONG><a name="[64c]"></a>Polygon_GetAreaDatalenStandard</STRONG> (Thumb, 134 bytes, Stack size 184 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Polygon_GetAreaDatalenStandard &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetAreaCheckProtoclType
</UL>

<P><STRONG><a name="[64d]"></a>Polygon_GetAreaDatalenJiuTong</STRONG> (Thumb, 260 bytes, Stack size 184 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Polygon_GetAreaDatalenJiuTong &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetAreaCheckProtoclType
</UL>

<P><STRONG><a name="[bcb]"></a>Polygon_GetAreaDatalenSuoMei</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, polygon.o(.text), UNUSED)

<P><STRONG><a name="[64e]"></a>Polygon_SetAreaCheckProtoclType</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Polygon_SetAreaCheckProtoclType &rArr; Polygon_GetAreaDatalenJiuTong &rArr; Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetAreaDatalenJiuTong
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetAreaDatalenStandard
</UL>
<BR>[Called By]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetArea
</UL>

<P><STRONG><a name="[64f]"></a>Polygon_SaveOneModifyUserData</STRONG> (Thumb, 230 bytes, Stack size 192 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Polygon_SaveOneModifyUserData &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_AreaModifyUserData
</UL>

<P><STRONG><a name="[650]"></a>Polygon_SaveOneArea</STRONG> (Thumb, 556 bytes, Stack size 464 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = Polygon_SaveOneArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetArea
</UL>

<P><STRONG><a name="[651]"></a>Polygon_SetArea</STRONG> (Thumb, 304 bytes, Stack size 208 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = Polygon_SetArea &rArr; Polygon_SaveOneArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ClearArea
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRoundArea
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearRectArea
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SaveOneArea
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetAreaCheckProtoclType
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckForResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SetPolygonArea
</UL>

<P><STRONG><a name="[652]"></a>Polygon_DeleteArea</STRONG> (Thumb, 282 bytes, Stack size 200 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Polygon_DeleteArea &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ClearArea
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckForResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DelPolygonArea
</UL>

<P><STRONG><a name="[216]"></a>Polygon_AreaModifyUserData</STRONG> (Thumb, 294 bytes, Stack size 208 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = Polygon_AreaModifyUserData &rArr; Polygon_SaveOneModifyUserData &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SaveOneModifyUserData
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetAreaUserDatalen
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeEIExpandProtocol
</UL>

<P><STRONG><a name="[3b3]"></a>Polygon_GetAreaTotalNum</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, polygon.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
</UL>

<P><STRONG><a name="[653]"></a>Polygon_CheckScanTask</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496 + Unknown Stack Size
<LI>Call Chain = Polygon_CheckScanTask &rArr; Polygon_ScanArea &rArr; Polygon_ChoiceAreaArmDest &rArr; Polygon_DisposeDriveInArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmMaskBit
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurSpeed
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetCurGpsCoordinate
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanTask
</UL>

<P><STRONG><a name="[654]"></a>Polygon_ScanTask</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1536 + Unknown Stack Size
<LI>Call Chain = Polygon_ScanTask &rArr; Polygon_CheckScanTask &rArr; Polygon_ScanArea &rArr; Polygon_ChoiceAreaArmDest &rArr; Polygon_DisposeDriveInArea &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopygPosition
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckScanTask
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ResetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> polygon.o(.text)
</UL>
<P><STRONG><a name="[655]"></a>Polygon_StartScanTask</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Polygon_StartScanTask &rArr; LZM_PublicSetCycTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> polygon.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>Polygon_TimeTask</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Polygon_TimeTask &rArr; LZM_PublicTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[656]"></a>Polygon_ReadAndCheckParam</STRONG> (Thumb, 174 bytes, Stack size 176 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Polygon_ReadAndCheckParam &rArr; Polygon_ClearArea &rArr; Area_EraseFlash &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ClearArea
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_AreaParameterInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> polygon.o(.text)
</UL>
<P><STRONG><a name="[657]"></a>Polygon_ParameterInitialize</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, polygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Polygon_ParameterInitialize &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[492]"></a>LZM_QueueClear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataInit
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReadyNewTask
</UL>

<P><STRONG><a name="[2db]"></a>LZM_QueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDelete
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataBatchDelete
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SendData
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_TxIsr
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetMessage
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReadyNewTask
</UL>

<P><STRONG><a name="[658]"></a>LZM_QueueFull</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueInsert
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataBatchInsert
</UL>

<P><STRONG><a name="[2d9]"></a>LZM_QueueInsert</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueFull
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_RxIsr
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert_KEYQueue
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TimerHandler
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReadyNewTask
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert_STARTQueue
</UL>

<P><STRONG><a name="[2e3]"></a>LZM_QueueDataBatchInsert</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LZM_QueueDataBatchInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueFull
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SendData
</UL>

<P><STRONG><a name="[2dc]"></a>LZM_QueueDelete</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LZM_QueueDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_TxIsr
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetMessage
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReadyNewTask
</UL>

<P><STRONG><a name="[2e5]"></a>LZM_QueueDataBatchDelete</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LZM_QueueDataBatchDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueEmpty
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_ReadData
</UL>

<P><STRONG><a name="[bcc]"></a>LZM_QueueBackUpParam</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, public.o(.text), UNUSED)

<P><STRONG><a name="[bcd]"></a>LZM_QueueRecoveryParam</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, public.o(.text), UNUSED)

<P><STRONG><a name="[bce]"></a>LZM_QueueDataCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, public.o(.text), UNUSED)

<P><STRONG><a name="[2e1]"></a>LZM_QueueDataFreeSpace</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SendData
</UL>

<P><STRONG><a name="[2c9]"></a>LZM_QueueDataInit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LZM_QueueDataInit
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueClear
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_QueueInit
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueInit
</UL>

<P><STRONG><a name="[48f]"></a>LZM_QueueInit</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LZM_QueueInit &rArr; LZM_QueueDataInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DevInitHook
</UL>

<P><STRONG><a name="[21d]"></a>LZM_PublicSetCycTimer</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LZM_PublicSetCycTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AreaManage_StartScanTask
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckBlindAreaStart
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_StartCheckAndUploadData
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_StartCheckACCStatus
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StartScanTask
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckForEnterStopMode
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_StartScanTask
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_StartScanTask
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ParamInitialize
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_StartCheckTalkTime
</UL>

<P><STRONG><a name="[1f4]"></a>LZM_PublicSetOnceTimer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_StartBlindReport
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ParameterInitialize
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ReadAndCheckParam
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckScanTask
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_E
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_R
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StageMain_Set
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConfigGNSS
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadParam
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckBlindArea
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndBlindReport
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetEIExpandTimer
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_AccStatusOn
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposePhoneStatus
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdProtocolParse
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SendWorkStatus
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeKeyValue
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverInfoAdd
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommResponeTimeout
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommResendData
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommSendData
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommBusyForResendData
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommStartSendData
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommSendEnd
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ParameterInitialize
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ReportServerEnterStopMode
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRoute
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ReadAndCheckParam
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatusAtOnce
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRoadSegmentTask
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckOutRouteTask
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetTaskTimer
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetTestTimer
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetOperateTimer
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ParameterInitialize
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ReadAndCheckParam
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposeHangUpStatus
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CallBackPhone
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_StartCheckTalkTime
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CheckTalkTime
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_DisposeTerminalShutdown
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SetDialEvTask
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckRDYFlag
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckExtTtsTimeOut
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckExtTtsFlag
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffExternal
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceInit
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceLoad
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStrToSend
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoicePlay
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceEnd
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStr
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckPackVoiceStr
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_AppInitialize
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_PromptStatusChange
</UL>

<P><STRONG><a name="[21b]"></a>LZM_PublicKillTimer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AreaManage_ScanTask
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StageMain_Set
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_AccStatusOff
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdProtocolParse
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeBrushCard
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeBrushCardForDriverInfo
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommResponeTimeout
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ScanTask
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckGpsDataChange
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatus
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanTask
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposeHangUpStatus
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CheckTalkTime
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
</UL>

<P><STRONG><a name="[bcf]"></a>LZM_PublicGetTimerEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, public.o(.text), UNUSED)

<P><STRONG><a name="[224]"></a>LZM_PublicKillTimerAll</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LZM_PublicKillTimerAll
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ParameterInitialize
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost_Init
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConfigGNSS
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ParameterInitialize
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRoute
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ParameterInitialize
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ParameterInitialize
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ParamInitialize
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_Init
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_AppInitialize
</UL>

<P><STRONG><a name="[21e]"></a>LZM_PublicTimerHandler</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LZM_PublicTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AreaManage_TimeTask
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssRealData_TimeTask
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_TimerTask
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_TimeTask
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_TimeTask
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerTask
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_TimeTask
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_TimeTask
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_AppTimeTask
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_TimeTask
</UL>

<P><STRONG><a name="[659]"></a>Public_ConvertStrToASC</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[660]"></a>Public_ConvertAscToVal</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, public.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTwoAscToOneChar
</UL>

<P><STRONG><a name="[3a5]"></a>Public_GetSumVerify</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Public_GetSumVerify
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_BlindReport
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckOneBlindArea
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveAllDriverInfo
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadList
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
<LI><a href="#[a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadOldestTime
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
<LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadNewestTime
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>

<P><STRONG><a name="[164]"></a>Public_GetXorVerify</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Public_GetXorVerify
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_UartDataProtocolParse
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_SentCmd
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdProtocolParse
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcdEx
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PactSendCmdForNaviLcd
</UL>

<P><STRONG><a name="[65b]"></a>Public_ConvertAscToBCD</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Public_ConvertAscToBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCDEx
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBCDEx
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBCD
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBCDEx
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBCD
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCD
</UL>

<P><STRONG><a name="[6ad]"></a>Public_ConvertBcdToAsc</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Public_ConvertBcdToAsc
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSIMCardNumber
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsSta
</UL>

<P><STRONG><a name="[65c]"></a>Public_ConvertBcdToValue</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Public_ConvertBcdToValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToTime
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToLong
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToShort
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToTimeEx
<LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
</UL>

<P><STRONG><a name="[65a]"></a>Public_ConvertTimeToBCD</STRONG> (Thumb, 84 bytes, Stack size 80 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = Public_ConvertTimeToBCD &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertAscToBCD
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCD
</UL>

<P><STRONG><a name="[273]"></a>Public_ConvertTimeToBCDEx</STRONG> (Thumb, 78 bytes, Stack size 80 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = Public_ConvertTimeToBCDEx &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertAscToBCD
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateTiming
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteTimeParam
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCDEx
</UL>

<P><STRONG><a name="[55d]"></a>Public_ConvertNowTimeToBCD</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = Public_ConvertNowTimeToBCD &rArr; Public_ConvertTimeToBCD &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdCaliTime
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdHeartBeat
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQueryStatus
</UL>

<P><STRONG><a name="[475]"></a>Public_ConvertNowTimeToBCDEx</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = Public_ConvertNowTimeToBCDEx &rArr; Public_ConvertTimeToBCDEx &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCDEx
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsSta
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsRst
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Alarm
<LI><a href="#[a9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm
<LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm2
</UL>

<P><STRONG><a name="[65d]"></a>Public_CheckTimeStruct</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToTime
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_PowerOnHandle
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_TimeTask
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
<LI><a href="#[a8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_CheckEnableFlag
<LI><a href="#[a8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_Write
<LI><a href="#[a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_GetCurHourPosition
<LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SaveStartTime
<LI><a href="#[a61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Write
<LI><a href="#[a5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRParameter_Write
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetUnsaveLog
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Write
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightWrite
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_CheckReadParameter
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>

<P><STRONG><a name="[1ac]"></a>Public_ConvertBCDToTime</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Public_ConvertBCDToTime &rArr; Public_ConvertBcdToValue
</UL>
<BR>[Calls]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBcdToValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ConverseBcdGmtime
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadTimeParam
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetTiredDriveRecord
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecord
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show15MinSpeed
</UL>

<P><STRONG><a name="[65e]"></a>Public_ConvertBCDToTimeEx</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBcdToValue
</UL>
<BR>[Called By]<UL><LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDTimeToLong
</UL>

<P><STRONG><a name="[221]"></a>Public_ConvertLongToBuffer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Public_ConvertLongToBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Rx_Isr
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_SavePhotoNumToFram
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StatePhoto
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetInOutAreaAlarmSubjoinInfo
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_EraseFlashArea
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_GBTestSet
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeReadParam
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadOneParam
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteSpecialParam
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadTimeParam
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQuestionDisplay
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_SetTerminalPassWordToLcd
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryStatusAlarm
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentDriverParameter
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_GetPositionAdditionalInfo
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDeviationAlarmInfo
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetInOutAlarmSubjoinInfo
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDriveAlarmInfoSubjoinInfo
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimeTask
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_TimeTask
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_TimeTask
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeOk
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAndCheckSystemDeviceID
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemPassWord
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_ModifyPulseCoef
<LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SavePacketData
<LI><a href="#[a8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_SaveMinuteSpeed
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd83H
<LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC4H
<LI><a href="#[a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE1H
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveAllDriverInfo
<LI><a href="#[a3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_Write
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_SaveCurrentSpeedStatus
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>

<P><STRONG><a name="[22e]"></a>Public_ConvertBufferToLong</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_UpdatePram
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TaskInit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_StartBlindReport
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1SearchSector
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_UpdateLink2OpenFlag
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2SearchSector
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadBaseData
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadCollectFreq
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckOneBlindArea
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_UpdateParameter
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_UpdateParameter
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_UpdateParam
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_UpdatePram
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdateOnePram
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_UpdatePram
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateMaxPhoneTimeMonth
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_UpdateMaxPhoneTimeEach
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeReadParam
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteSpecialParam
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteTimeParam
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_PowerOnHandle
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeSetRoad
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckSystemLogoAndVerSion
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushAdministratorCardResponse
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentReportMode
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemPassWord
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsb
<LI><a href="#[a8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Init
<LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd03H
<LI><a href="#[a67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_Init
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Get15MinuteSpeed
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadCurrentDriverInfo
<LI><a href="#[a39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_GetWriteCount
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadListTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
<LI><a href="#[a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadOldestTime
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
<LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadNewestTime
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>

<P><STRONG><a name="[28c]"></a>Public_ConvertBufferToShort</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_UpdatePram
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TaskInit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_StartBlindReport
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_BlindReport
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckOneBlindArea
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_UpdateParameter
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_UpdateParameter
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePeripheralType
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_UpdateParam
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdateOnePram
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_ReadOneData
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_ReadOneData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeSetRoad
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_DisposeRadioProtocol
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_UpdatePram
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd08H
<LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd09H
<LI><a href="#[a7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd10H
<LI><a href="#[a79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd11H
<LI><a href="#[a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd12H
<LI><a href="#[a77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd13H
<LI><a href="#[a76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd14H
<LI><a href="#[a75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd15H
<LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
</UL>

<P><STRONG><a name="[28e]"></a>Public_ConvertShortToBuffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_WriteParameter
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilLevelPercent
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilVolume
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_GBTestSet
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteSpecialParam
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_GetSubjoinInfoCurDeepVal
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_SaveOneData
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_SaveOneData
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_GetPositionAdditionalInfo
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_GetSubjoinInfoCurTurnSpeedVal
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDriveAlarmInfoSubjoinInfo
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_UpdatePram
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_SaveCurrentSpeedStatus
</UL>

<P><STRONG><a name="[1af]"></a>Public_BCD2HEX</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ConverseBcdGmtime
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProductInfo
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemShowTerminalID
</UL>

<P><STRONG><a name="[2b4]"></a>Public_HEX2BCD</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Public_HEX2BCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Rx_Isr
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
</UL>

<P><STRONG><a name="[65f]"></a>Public_ConvertTwoAscToOneChar</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertAscToVal
</UL>

<P><STRONG><a name="[77c]"></a>Public_CheckStrIsBCD</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Public_CheckStrIsBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show15MinSpeed
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAndCheckPhoneNumber
</UL>

<P><STRONG><a name="[661]"></a>Public_ConvertShortToBCD</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertAscToBCD
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[662]"></a>Public_ConvertShortToBCDEx</STRONG> (Thumb, 44 bytes, Stack size 56 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertAscToBCD
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[663]"></a>Public_ConvertBCDToShort</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBcdToValue
</UL>

<P><STRONG><a name="[664]"></a>Public_ConvertLongToBCD</STRONG> (Thumb, 44 bytes, Stack size 56 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Public_ConvertLongToBCD &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertAscToBCD
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd03H
</UL>

<P><STRONG><a name="[665]"></a>Public_ConvertLongToBCDEx</STRONG> (Thumb, 42 bytes, Stack size 56 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertAscToBCD
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[666]"></a>Public_ConvertBCDToLong</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Public_ConvertBCDToLong &rArr; Public_ConvertBcdToValue
</UL>
<BR>[Calls]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBcdToValue
</UL>
<BR>[Called By]<UL><LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC4H
</UL>

<P><STRONG><a name="[1b8]"></a>Public_CheckArrayValIsEqual</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Public_CheckArrayValIsEqual
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>

<P><STRONG><a name="[1ee]"></a>Public_PlayTTSVoiceStr</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288 + Unknown Stack Size
<LI>Call Chain = Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveOutRectArea
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveOutRoundArea
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRectArea
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRoundArea
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_RadioProtocolQuestionDownload
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckDailPhone
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeDriverSign
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DriverLogin
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeWriteICcardResult
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAddOrModify
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModify
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModifyDriverCodeAndPassword
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAdd
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDriverInfoForLogin
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_PlayRoadExcursionAlarmVoice
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeInOutAlarm
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayE2ParamAlarmVoice
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveInArea
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveOutArea
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvRing
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_TimeTask
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detection_Changed_Status
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowAdjustTtsVolume
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[9fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateMonitor
<LI><a href="#[9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateRead
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleAlarm
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
<LI><a href="#[a49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleRunUnlogin
<LI><a href="#[a47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleNightRunVoice
<LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsAlarm
</UL>

<P><STRONG><a name="[668]"></a>Public_PlayE2ParamAlarmVoice</STRONG> (Thumb, 40 bytes, Stack size 64 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352 + Unknown Stack Size
<LI>Call Chain = Public_PlayE2ParamAlarmVoice &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
</UL>
<BR>[Called By]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_PlayRoadExcursionAlarmVoice
</UL>

<P><STRONG><a name="[669]"></a>Play_TTSVoiceStr</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Play
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[5a0]"></a>Public_WriteDataToFRAM</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Public_WriteDataToFRAM &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalCtrlCarLoadStatus
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SaveMonthParam
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_UpdatePram
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
</UL>

<P><STRONG><a name="[313]"></a>Public_ReadDataFromFRAM</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Public_ReadDataFromFRAM &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ReadMonthParam
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_UpdatePram
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQueryServerParameter
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
</UL>

<P><STRONG><a name="[1e2]"></a>Public_GetCurBasicPositionInfo</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Public_GetCurBasicPositionInfo &rArr; Report_GetPositionBasicInfo &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurGpsCoordinate
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdHeartBeat
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetCurGpsCoordinate
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetCurGpsCoordinate
</UL>

<P><STRONG><a name="[66b]"></a>Public_GetCurTotalMile</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Public_GetCurTotalMile &rArr; MileMeter_GetTotalMile &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeedType
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetTotalMile
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_GetTotalMile
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriveMile
</UL>

<P><STRONG><a name="[1e3]"></a>Public_Mymemcpy</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Public_Mymemcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_AreaModifyUserData
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModifyUserData
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModifyUserData
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRoundArea
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModify
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundArea
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundModifyUserData
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRoundAreaDatalenJiuTong
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRoundAreaDatalenStandard
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRoundAreaUserDatalen
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRectArea
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModify
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectArea
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectModifyUserData
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRectAreaDatalenJiuTong
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRectAreaDatalenStandard
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetRectAreaUserDatalen
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurGpsCoordinate
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetCurGpsCoordinate
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeDelRoad
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DeleteArea
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SaveOneArea
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SaveOneModifyUserData
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetAreaDatalenJiuTong
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetAreaDatalenStandard
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetAreaUserDatalen
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_GetCurGpsCoordinate
</UL>

<P><STRONG><a name="[66c]"></a>Public_GetCurPositionInfoDataBlock</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Public_GetCurPositionInfoDataBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopygPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Alarm
<LI><a href="#[a5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SavePosition
<LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
</UL>

<P><STRONG><a name="[24f]"></a>Public_ShowTextInfo</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_ParseCmd
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_AuthenticationRequest
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogin
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogout
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_FindSDcardFileAndSaveToUdisk
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckForEnterStopMode
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegisterAck
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TakeCallMonitorServerPhone
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportInfoSendToPlatform
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemandconfirm
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_PromptStatusChange
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[9fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateMonitor
<LI><a href="#[9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateRead
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleAlarm
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
<LI><a href="#[a49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleRunUnlogin
<LI><a href="#[a47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleNightRunVoice
<LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsAlarm
</UL>

<P><STRONG><a name="[66d]"></a>Public_ShowSaveDataProBar</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowWindow
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[5a5]"></a>Public_SetCarLoadStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Public_SetCarLoadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteStatusBit
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalCtrlCarLoadStatus
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
</UL>

<P><STRONG><a name="[5a7]"></a>Public_QuickOpenAccount</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Public_QuickOpenAccount &rArr; Lock2_TrigOpenAccount &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TrigOpenAccount
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalCtrlQuickOpenAccount
</UL>

<P><STRONG><a name="[66f]"></a>Public_ConvertTimeToLong</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, public.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInTimeRange
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckCurTimeIsInTimeRange
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDTimeToLong
</UL>

<P><STRONG><a name="[66e]"></a>Public_ConvertBCDTimeToLong</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToLong
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToTimeEx
</UL>

<P><STRONG><a name="[671]"></a>Public_CheckTimeRangeIsValid</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, public.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInTimeRange
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckCurTimeIsInTimeRange
</UL>

<P><STRONG><a name="[672]"></a>Public_ConvertWeekDay</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, public.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInTimeRange
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckCurTimeIsInTimeRange
</UL>

<P><STRONG><a name="[1ea]"></a>Public_CheckTimeIsInRange</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, public.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckRoundTime
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CheckRectTime
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckTime
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInTimeRange
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckCurTimeIsInTimeRange
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CheckTime
</UL>

<P><STRONG><a name="[670]"></a>Public_CheckCurTimeIsInTimeRange</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInRange
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertWeekDay
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeRangeIsValid
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToLong
</UL>

<P><STRONG><a name="[673]"></a>Public_CheckTimeIsInTimeRange</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInRange
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertWeekDay
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeRangeIsValid
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToLong
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckCurTimeIsInEarlyAlarmTimeRange
</UL>

<P><STRONG><a name="[674]"></a>Public_CheckCurTimeIsInEarlyAlarmTimeRange</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInTimeRange
</UL>

<P><STRONG><a name="[675]"></a>Public_ShowValue</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = Public_ShowValue &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAndShowTTsVolume
</UL>

<P><STRONG><a name="[45f]"></a>Public_LcdShowTime</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowTurnSpeedValue
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordIndex
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
</UL>

<P><STRONG><a name="[628]"></a>Public_CheckIsPhoneServerRunStatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Public_CheckIsPhoneServerRunStatus &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetSecondSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
</UL>

<P><STRONG><a name="[62a]"></a>Public_CheckPhoneIsSpecialNumber</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
</UL>

<P><STRONG><a name="[676]"></a>Public_SetOperateTimer</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Public_SetOperateTimer &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
</UL>

<P><STRONG><a name="[591]"></a>Public_CheckPhoneInformation</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Public_CheckPhoneInformation &rArr; Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_GetPhoneBookTotalNum
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPhoneInformation
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetOperateTimer
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneIsSpecialNumber
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckIsPhoneServerRunStatus
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetOverMonthTalkTimeFlag
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetEachMaxTalkTime
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SetPhoneSpecialFlag
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewCallPhone
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckDailPhone
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeNewCallPhone
</UL>

<P><STRONG><a name="[678]"></a>Public_DisposePhoneStatus</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Public_DisposePhoneStatus &rArr; NaviLcd_DisposePhoneStatus &rArr; NaviLcdSendCmdNewCallPhone &rArr; Public_CheckPhoneInformation &rArr; Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetCurOnlineStatus
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposePhoneStatus
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposePhoneStatus
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposePhoneStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallPhoneStatus
</UL>

<P><STRONG><a name="[679]"></a>Public_SaveCurSIMICcidNumberToE2Param</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Public_SaveCurSIMICcidNumberToE2Param &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOD_GetIccidBcdValue
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_Init
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_Call_CCID
</UL>

<P><STRONG><a name="[67b]"></a>Public_CheckSystemLogoAndVerSion</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Public_CheckSystemLogoAndVerSion &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTerminalAndPeripheralVerify
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
</UL>

<P><STRONG><a name="[67c]"></a>Public_CheckPeripheralUpdataType</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Public_CheckPeripheralUpdataType &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTerminalAndPeripheralVerify
</UL>

<P><STRONG><a name="[67d]"></a>Public_CheckTerminalAndPeripheralVerify</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Public_CheckTerminalAndPeripheralVerify &rArr; Public_CheckSystemLogoAndVerSion &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPeripheralUpdataType
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckSystemLogoAndVerSion
</UL>
<BR>[Called By]<UL><LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCheck
</UL>

<P><STRONG><a name="[67e]"></a>Public_ParameterInitialize</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Public_ParameterInitialize &rArr; Phone_ParamInitialize &rArr; Phone_UpdateParam &rArr; Phone_UpdateMaxPhoneTimeMonth &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ParamInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[35f]"></a>Public_SetEIExpandTimer</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Public_SetEIExpandTimer &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolSendData
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolResendData
</UL>

<P><STRONG><a name="[67f]"></a>Public_SetTestTimer</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>

<P><STRONG><a name="[680]"></a>Public_SetTaskTimer</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, public.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>

<P><STRONG><a name="[53]"></a>LZM_PublicTimerTask</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, public.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LZM_PublicTimerTask &rArr; Phone_TimeTask &rArr; LZM_PublicTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_TimeTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[68f]"></a>QueueIsEmpty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueFrontAndOut2
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocolParse_TimeTask
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueOutBuffer
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueFrontAndOut
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueOut
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueFront
</UL>

<P><STRONG><a name="[68c]"></a>QueueIsFull</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, queue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIn
</UL>

<P><STRONG><a name="[683]"></a>QueueMakeEmpty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate5
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate4
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate3
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate2
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate1
</UL>

<P><STRONG><a name="[681]"></a>QueueCreate1</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = QueueCreate1 &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueMakeEmpty
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[684]"></a>QueueCreate2</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = QueueCreate2 &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueMakeEmpty
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[685]"></a>QueueCreate3</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = QueueCreate3 &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueMakeEmpty
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[686]"></a>QueueCreate4</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = QueueCreate4 &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueMakeEmpty
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[687]"></a>QueueCreate5</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = QueueCreate5 &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueMakeEmpty
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[688]"></a>QueueCreate</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueMakeEmpty
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[689]"></a>QueueDispose</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[68d]"></a>QueueSucc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueInBuffer
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueFrontAndOut2
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueOutBuffer
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueFrontAndOut
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueOut
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIn
</UL>

<P><STRONG><a name="[68b]"></a>QueueIn</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueSucc
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIsFull
</UL>

<P><STRONG><a name="[2b6]"></a>QueueInBuffer</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = QueueInBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueSucc
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Rx_Isr
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_AddRecvDataForParse
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartTx
</UL>

<P><STRONG><a name="[68e]"></a>QueueFront</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIsEmpty
</UL>

<P><STRONG><a name="[690]"></a>QueueOut</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueSucc
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIsEmpty
</UL>

<P><STRONG><a name="[691]"></a>QueueFrontAndOut</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueSucc
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIsEmpty
</UL>

<P><STRONG><a name="[2a4]"></a>QueueFrontAndOut2</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = QueueFrontAndOut2
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueSucc
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIsEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocolParse_TimeTask
</UL>

<P><STRONG><a name="[692]"></a>QueueOutBuffer</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = QueueOutBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueSucc
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIsEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_TimeTask
</UL>

<P><STRONG><a name="[2a3]"></a>QueueLength</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
</UL>

<P><STRONG><a name="[a]"></a>RadioProtocol_ServerGeneralAck</STRONG> (Thumb, 568 bytes, Stack size 80 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2056 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_ServerGeneralAck &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_ReportAck
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_StartReport
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadRecordConrtolBit
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteRecordConrtolBit
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationCode
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_OpenAccountAck
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_CmdAck
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTerminalAuthorizationFlag
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[2b5]"></a>TransMean</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TransMean
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_SendCmd
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Rx_Isr
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IC_Card_Radio_Heartbeat
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_Packet_ICCard_AuthInfo
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>

<P><STRONG><a name="[696]"></a>RadioProtocol_HeadtoBytes</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RadioProtocol_HeadtoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IC_Card_Radio_Heartbeat
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_Packet_ICCard_AuthInfo
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>

<P><STRONG><a name="[5f4]"></a>RadioProtocol_SendCmd</STRONG> (Thumb, 1200 bytes, Stack size 80 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1736 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransMean
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_SndMsg2Svr
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_HeadtoBytes
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformationReport
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DriverInformationReport
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CAN_UpTrans
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaDataReport
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformation_BulkUpTrans
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalHeartbeat
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_QuestionAck
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegister
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalQualify
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalLogout
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaEvenReport
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_InforamtionOrder
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_EvenReport
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ElectricReceiptReport
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DataCompressUpTrans
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_RecorderDataReport
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRSA
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MemoryIndexAck
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_QueryMuckDumpArea
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PositionSearch
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PramSearch
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ParamQueryAll
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalAttribute
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ResendPacketRequest
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_FirmwareUpdataResultNote
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TerminalGeneralAck
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_UpdataResultNote
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PhotoAck
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[478]"></a>RadioProtocol_TerminalLogout</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TerminalLogout &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SendTerminalLogout
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegisterAck
</UL>

<P><STRONG><a name="[c]"></a>RadioProtocol_TerminalRegisterAck</STRONG> (Thumb, 554 bytes, Stack size 48 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TerminalRegisterAck &rArr; RadioProtocol_TerminalLogout &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalLogout
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLink2LoginAuthorizationState
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLink1LoginAuthorizationState
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[5f3]"></a>RadioProtocol_TerminalGeneralAck</STRONG> (Thumb, 88 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataDownTrans
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_JiutongPhoto
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SingleMemoryIndex
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_StartSoundRecord
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MemoryUpload
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DeleteMuckDumpArea
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SetMuckDumpArea
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DelRoad
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SetRoad
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DelPolygonArea
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SetPolygonArea
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DelRectangleArea
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SetRectangleArea
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DelRoundArea
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SetRoundArea
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TelephoneBookSet
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TelephoneCallback
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_InformationService
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_InformationOrderSet
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_QuestionDownload
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_EvenSet
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TempPositionControl
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PramSet
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_AlarmConfirmManual
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_UploadFromBreak_Request
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[699]"></a>RadioProtocol_WritePram</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1656 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_WritePram &rArr; E2ParamApp_DisposeWriteParam &rArr; DriverInfo_DisposeRadioProtocol &rArr; DriverInfoAdd &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PramSet
<LI><a href="#[a6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdD0H
</UL>

<P><STRONG><a name="[d]"></a>RadioProtocol_PramSet</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_PramSet &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_WritePram
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[69a]"></a>RadioProtocol_ParamQueryAll</STRONG> (Thumb, 532 bytes, Stack size 128 bytes, radioprotocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[69b]"></a>RadioProtocol_ReadPram</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = RadioProtocol_ReadPram &rArr; E2ParamApp_DisposeReadParam &rArr; E2ParamApp_ReadOneParam &rArr; E2ParamApp_ReadSpecialParam &rArr; E2ParamApp_ReadTimeParam &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeReadParam
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PramSearch
<LI><a href="#[a6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdD0H
</UL>

<P><STRONG><a name="[e]"></a>RadioProtocol_PramSearch</STRONG> (Thumb, 266 bytes, Stack size 80 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_PramSearch &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeReadAllParam
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ReadPram
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>RadioProtocol_TerminalControl</STRONG> (Thumb, 1838 bytes, Stack size 328 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2128 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TerminalControl &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Second_connect_To_Specific_Server
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Num2NumStr
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpStart
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_connect_To_Specific_Server
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[bd0]"></a>Get_Conncet_State</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[bd1]"></a>Clear_Conncet_State</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>RadioProtocol_PositionSearch</STRONG> (Thumb, 92 bytes, Stack size 224 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_PositionSearch &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionInfo
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>RadioProtocol_TempPositionControl</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TempPositionControl &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdateOnePram
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>RadioProtocol_TextMessageDownload</STRONG> (Thumb, 408 bytes, Stack size 56 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TextMessageDownload &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEvTask
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_WriteToFlash
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdShowPlatformText
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Play
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>RadioProtocol_EvenSet</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_EvenSet &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReport_DisposeRadioProtocol
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>RadioProtocol_QuestionDownload</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_QuestionDownload &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Question_DisposeRadioProtocol
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>RadioProtocol_InformationOrderSet</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_InformationOrderSet &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemand_DisposeRadioProtocol
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>RadioProtocol_InformationService</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_InformationService &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_DisposeRadioProtocol
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>RadioProtocol_TelephoneCallback</STRONG> (Thumb, 114 bytes, Stack size 72 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TelephoneCallback &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEvTask
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>RadioProtocol_TelephoneBookSet</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TelephoneBookSet &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeRadioProtocol
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>RadioProtocol_CarControl</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = RadioProtocol_CarControl &rArr; OilControl_OffOil &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_OffOil
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_OpenOil
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>RadioProtocol_SetRoundArea</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_SetRoundArea &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRoundArea
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>RadioProtocol_DelRoundArea</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_DelRoundArea &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRoundArea
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>RadioProtocol_SetRectangleArea</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_SetRectangleArea &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SetRectArea
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>RadioProtocol_DelRectangleArea</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_DelRectangleArea &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRectArea
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>RadioProtocol_SetPolygonArea</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_SetPolygonArea &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetArea
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>RadioProtocol_DelPolygonArea</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_DelPolygonArea &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DeleteArea
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>RadioProtocol_SetRoad</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_SetRoad &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeSetRoad
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>RadioProtocol_DelRoad</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_DelRoad &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeDelRoad
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[6a4]"></a>RadioProtocol_SetMuckDumpArea</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, radioprotocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>

<P><STRONG><a name="[6a5]"></a>RadioProtocol_DeleteMuckDumpArea</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, radioprotocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>

<P><STRONG><a name="[6a6]"></a>RadioProtocol_QueryMuckDumpArea</STRONG> (Thumb, 62 bytes, Stack size 72 bytes, radioprotocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>

<P><STRONG><a name="[25]"></a>RadioProtocol_RecorderDataCollection</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RadioProtocol_RecorderDataCollection &rArr; VDRGprs_RecData &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_RecData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>RadioProtocol_RecorderPramSet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RadioProtocol_RecorderPramSet &rArr; VDRGprs_RecData &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_RecData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[2ba]"></a>RadioProtocol_DriverInformationReport</STRONG> (Thumb, 56 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogin
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogout
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DriverInformationUploadRequest
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
</UL>

<P><STRONG><a name="[27]"></a>RadioProtocol_DriverInformationUploadRequest</STRONG> (Thumb, 174 bytes, Stack size 176 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1976 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_DriverInformationUploadRequest &rArr; RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DriverInformationReport
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>RadioProtocol_MultiMediaUploadAck</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RadioProtocol_MultiMediaUploadAck &rArr; Camera_MediaUploadAck
</UL>
<BR>[Calls]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_MediaUploadAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[278]"></a>RadioProtocol_MultiMediaDataReport</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_MultiMediaDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSend
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CameraPhoto
</UL>

<P><STRONG><a name="[29]"></a>RadioProtocol_CameraPhoto</STRONG> (Thumb, 492 bytes, Stack size 104 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_CameraPhoto &rArr; RadioProtocol_MultiMediaDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaDataReport
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[6a9]"></a>RadioProtocol_MemoryIndexAck</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_MemoryIndexAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MemoryIndex
</UL>

<P><STRONG><a name="[2a]"></a>RadioProtocol_MemoryIndex</STRONG> (Thumb, 600 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3932 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_MemoryIndex &rArr; MediaSearch_GetMediaIndexInformation &rArr; MediaSearch_Find &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MemoryIndexAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>RadioProtocol_MemoryUpload</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_MemoryUpload &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>RadioProtocol_StartSoundRecord</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_StartSoundRecord &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>RadioProtocol_SingleMemoryIndex</STRONG> (Thumb, 116 bytes, Stack size 72 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_SingleMemoryIndex &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>RadioProtocol_JiutongPhoto</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_JiutongPhoto &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>RadioProtocol_OriginalDataDownTrans</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1864 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_OriginalDataDownTrans &rArr; EIExpand_RadioProtocolParse &rArr; EIExpand_DisposeProtocol &rArr; Area_DisposeEIExpandProtocol &rArr; Area_RoundAreaModifyUserData &rArr; Area_SaveOneRoundModifyUserData &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_AuthenticationAck
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_COM_Buf_Write
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_RadioProtocolParse
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[6aa]"></a>RadioProtocol_TerminalRSA</STRONG> (Thumb, 94 bytes, Stack size 208 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1944 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TerminalRSA &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerRSA
</UL>

<P><STRONG><a name="[30]"></a>RadioProtocol_ServerRSA</STRONG> (Thumb, 82 bytes, Stack size 160 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2104 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_ServerRSA &rArr; RadioProtocol_TerminalRSA &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRSA
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[470]"></a>RadioProtocol_TerminalRegister</STRONG> (Thumb, 1102 bytes, Stack size 320 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2056 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TerminalRegister &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAkey_EvTask
</UL>

<P><STRONG><a name="[607]"></a>RadioProtocol_FirmwareUpdataResultNote</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_FirmwareUpdataResultNote &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_SendUpdateResultNote
</UL>

<P><STRONG><a name="[48a]"></a>RadioProtocol_OpenAccount</STRONG> (Thumb, 632 bytes, Stack size 224 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_OpenAccount &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encrypt
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurentProductModel
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBcdToAsc
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TimeTask
</UL>

<P><STRONG><a name="[3de]"></a>RadioProtocol_TerminalHeartbeat</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1776 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TerminalHeartbeat &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBeat_TimeTask
</UL>

<P><STRONG><a name="[604]"></a>RadioProtocol_ResendPacketRequest</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_ResendPacketRequest &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_SendPacketRequest
</UL>

<P><STRONG><a name="[471]"></a>RadioProtocol_TerminalQualify</STRONG> (Thumb, 68 bytes, Stack size 72 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TerminalQualify &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
</UL>

<P><STRONG><a name="[168]"></a>RadioProtocol_PostionInformationReport</STRONG> (Thumb, 70 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Clear_Report
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Occur_Report
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Alarm_Proce
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
</UL>

<P><STRONG><a name="[472]"></a>RadioProtocol_EvenReport</STRONG> (Thumb, 54 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_EvenReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendFixText
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportInfoSendToPlatform
</UL>

<P><STRONG><a name="[584]"></a>RadioProtocol_QuestionAck</STRONG> (Thumb, 72 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_QuestionAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQustionResponse
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
</UL>

<P><STRONG><a name="[473]"></a>RadioProtocol_InforamtionOrder</STRONG> (Thumb, 60 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_InforamtionOrder &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendFixText
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemandconfirm
</UL>

<P><STRONG><a name="[6af]"></a>RadioProtocol_RecorderDataReport</STRONG> (Thumb, 116 bytes, Stack size 72 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_RecorderDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask2
<LI><a href="#[a37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask1
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
<LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask1
</UL>

<P><STRONG><a name="[474]"></a>RadioProtocol_ElectricReceiptReport</STRONG> (Thumb, 56 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_ElectricReceiptReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
</UL>

<P><STRONG><a name="[476]"></a>RadioProtocol_MultiMediaEvenReport</STRONG> (Thumb, 106 bytes, Stack size 104 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_MultiMediaEvenReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[5f8]"></a>RadioProtocol_PhotoAck</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_PhotoAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[162]"></a>RadioProtocol_OriginalDataUpTrans</STRONG> (Thumb, 90 bytes, Stack size 72 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolSendData
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_RadioProtocolOriginalDataUpTrans
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_AuthenticationRequest
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_OriginalDataUpTrans
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_BlindReport
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolResendData
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendFixText
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendTickleInfo
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeOriginalDataTrans
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendShortMessage
</UL>

<P><STRONG><a name="[6b0]"></a>RadioProtocol_DataCompressUpTrans</STRONG> (Thumb, 144 bytes, Stack size 1096 bytes, radioprotocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[6b1]"></a>RadioProtocol_UpdateTerminalPhoneNum</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = RadioProtocol_UpdateTerminalPhoneNum &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOnUpdata
</UL>

<P><STRONG><a name="[bd2]"></a>RadioProtocol_GetRadioProtocolRxBufferBusyFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[bd3]"></a>RadioProtocol_SetRadioProtocolRxBufferBusyFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[bd4]"></a>RadioProtocol_AddRadioParseList</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[bd5]"></a>RadioProtocol_UpdateRadioParseList</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[6b2]"></a>RadioProtocol_AddRecvDataForParse</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RadioProtocol_AddRecvDataForParse &rArr; QueueInBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueInBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Call
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsHB
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Call
</UL>

<P><STRONG><a name="[6b6]"></a>RadioProtocol_SwitchChannel</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, radioprotocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocolParse_TimeTask
</UL>

<P><STRONG><a name="[6b5]"></a>RadioProtocol_UpdateDownloadCmdList</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RadioProtocol_UpdateDownloadCmdList
</UL>
<BR>[Called By]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ProtocolParse
</UL>

<P><STRONG><a name="[2a5]"></a>unTransMean</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = unTransMean
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_ParseCmd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ProtocolParse
</UL>

<P><STRONG><a name="[6b3]"></a>RadioProtocol_ProtocolParse</STRONG> (Thumb, 456 bytes, Stack size 48 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RadioProtocol_ProtocolParse &rArr; unTransMean
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unTransMean
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Heartbeat_ClrHeartbeatCount
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_UpdateDownloadCmdList
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocolParse_TimeTask
</UL>

<P><STRONG><a name="[32]"></a>RadioProtocolParse_TimeTask</STRONG> (Thumb, 490 bytes, Stack size 24 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = RadioProtocolParse_TimeTask &rArr; RadioProtocol_ProtocolParse &rArr; unTransMean
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueFrontAndOut2
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ProtocolParse
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SwitchChannel
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueIsEmpty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[583]"></a>RadioProtocol_GetDownloadCmdChannel</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RadioProtocol_GetDownloadCmdChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQustionResponse
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TerminalGeneralAck
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
</UL>

<P><STRONG><a name="[6cf]"></a>RadioProtocol_GetUploadCmdChannel</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RadioProtocol_GetUploadCmdChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
</UL>

<P><STRONG><a name="[bd6]"></a>RadioProtocol_UpdateUploadCmdList</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[bd7]"></a>RadioProtocol_IsBigEndian</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[bd8]"></a>RadioProtocol_ntohs</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[bd9]"></a>RadioProtocol_ntoh</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[bda]"></a>RadioProtocol_htons</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[bdb]"></a>RadioProtocol_hton</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, radioprotocol.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>NullOperate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radioprotocol.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[6b7]"></a>RadioProtocol_Packet_ICCard_AuthInfo</STRONG> (Thumb, 250 bytes, Stack size 192 bytes, radioprotocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransMean
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_HeadtoBytes
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[5f1]"></a>RadioProtocol_UpdataResultNote</STRONG> (Thumb, 68 bytes, Stack size 72 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_UpdataResultNote &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_SendResultNoteTimeTask
</UL>

<P><STRONG><a name="[228]"></a>RadioProtocol_PostionInformation_BulkUpTrans</STRONG> (Thumb, 72 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_PostionInformation_BulkUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Report
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Report
</UL>

<P><STRONG><a name="[2a8]"></a>RadioProtocol_CAN_UpTrans</STRONG> (Thumb, 72 bytes, Stack size 64 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1800 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_CAN_UpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
</UL>

<P><STRONG><a name="[6ba]"></a>IC_Card_Radio_Heartbeat</STRONG> (Thumb, 194 bytes, Stack size 80 bytes, radioprotocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransMean
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_HeadtoBytes
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[283]"></a>Report_GetPositionBasicInfo</STRONG> (Thumb, 740 bytes, Stack size 88 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Report_GetPositionBasicInfo &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_HEX2BCD
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopygPosition
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarm
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatus
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopyPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionInfo
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StatePhoto
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurBasicPositionInfo
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CameraPhoto
</UL>

<P><STRONG><a name="[167]"></a>Report_GetPositionInfo</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = Report_GetPositionInfo &rArr; Report_GetPositionBasicInfo &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionAdditionalInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Clear_Report
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Acce_Occur_Report
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Alarm_Proce
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PositionSearch
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[340]"></a>Report_UpdateOnePram</STRONG> (Thumb, 646 bytes, Stack size 48 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Report_UpdateOnePram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdatePram
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TempPositionControl
</UL>

<P><STRONG><a name="[6ce]"></a>Report_UpdatePram</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Report_UpdatePram &rArr; Report_UpdateOnePram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRunMode
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdateOnePram
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
</UL>

<P><STRONG><a name="[36]"></a>Report_TimeTask</STRONG> (Thumb, 930 bytes, Stack size 80 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = Report_TimeTask &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformationReport
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Save
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopyPosition
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UpdatePram
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_Link2ReportOpenFlag
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetLink1NextReportPoint
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetCurDistance
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_GetUploadCmdChannel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[693]"></a>Report_CmdAck</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, report.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
</UL>

<P><STRONG><a name="[bdc]"></a>Report_GetOnePram</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, report.o(.text), UNUSED)

<P><STRONG><a name="[2e7]"></a>Report_UploadPositionInfo</STRONG> (Thumb, 236 bytes, Stack size 176 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1976 + Unknown Stack Size
<LI>Call Chain = Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformationReport
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Corner_TimeTask
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TimeTask
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ReportServerEnterStopMode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_TimeTask
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
<LI><a href="#[a57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_OnceRunReport
<LI><a href="#[a43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_OnceOverReport
</UL>

<P><STRONG><a name="[bdd]"></a>Report_ClearReportTimeCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, report.o(.text), UNUSED)

<P><STRONG><a name="[bde]"></a>Report_GetReportEventSwitch</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, report.o(.text), UNUSED)

<P><STRONG><a name="[bdf]"></a>Report_GetOverSpeedReportTimeSpace</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, report.o(.text), UNUSED)

<P><STRONG><a name="[be0]"></a>Report_GetOverTimeReportTimeSpace</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, report.o(.text), UNUSED)

<P><STRONG><a name="[6d0]"></a>Route_GetDistance</STRONG> (Thumb, 298 bytes, Stack size 136 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetPointDistance
</UL>

<P><STRONG><a name="[1a4]"></a>Route_GetPointDistance</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundComparePos
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalDotDotMile
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNodeData
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNearestDistance
</UL>

<P><STRONG><a name="[6d3]"></a>Route_GetNearestDistance</STRONG> (Thumb, 372 bytes, Stack size 128 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = Route_GetNearestDistance &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetPointDistance
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckIsInRoute
</UL>

<P><STRONG><a name="[6d4]"></a>Route_SetSpeedParam</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Route_SetSpeedParam &rArr; VDROverspeed_SetRoadParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_SetRoadParameter
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_ResetRoadParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckInRoadSegmentTask
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckChangeRoadSegmentTask
</UL>

<P><STRONG><a name="[6d7]"></a>Route_ClearSpeedParam</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Route_ClearSpeedParam
</UL>
<BR>[Calls]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_ResetRoadParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeInOutAlarm
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ClearAlarm
</UL>

<P><STRONG><a name="[6d8]"></a>Route_ClearAlarm</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Route_ClearAlarm &rArr; Route_ClearSpeedParam
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ClearSpeedParam
</UL>
<BR>[Called By]<UL><LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckGpsDataChange
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckTimeEx
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ResetParam
</UL>

<P><STRONG><a name="[6d9]"></a>Route_ResetParam</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Route_ResetParam &rArr; Route_ClearAlarm &rArr; Route_ClearSpeedParam
</UL>
<BR>[Calls]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ClearAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ScanTask
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckForResetParam
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ParameterInitialize
</UL>

<P><STRONG><a name="[352]"></a>Route_UpdatePram</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Route_UpdatePram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ParameterInitialize
</UL>

<P><STRONG><a name="[6da]"></a>Route_ParameterInitialize</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Route_ParameterInitialize &rArr; Route_UpdatePram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_UpdatePram
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrRoute
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ReadAndCheckParam
</UL>

<P><STRONG><a name="[327]"></a>ClrRoute</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ClrRoute &rArr; Route_ParameterInitialize &rArr; Route_UpdatePram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_EraseFlash
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ParameterInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ReadAndCheckParam
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeSetRoad
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeDelRoad
</UL>

<P><STRONG><a name="[6db]"></a>Route_GoNextStatus</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Route_GoNextStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRoadSegmentTask
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckInRoadSegmentTask
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckChangeRoadSegmentTask
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckOutRouteTask
</UL>

<P><STRONG><a name="[6dc]"></a>Route_DisposeInOutAlarm</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = Route_DisposeInOutAlarm &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ClearSpeedParam
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckInRoadSegmentTask
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckOutRouteTask
</UL>

<P><STRONG><a name="[6dd]"></a>Route_CheckIsInRoute</STRONG> (Thumb, 88 bytes, Stack size 64 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = Route_CheckIsInRoute &rArr; Route_GetNearestDistance &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNearestDistance
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckIsInRouteEx
</UL>

<P><STRONG><a name="[6de]"></a>Route_CheckIsInRouteEx</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = Route_CheckIsInRouteEx &rArr; Route_CheckIsInRoute &rArr; Route_GetNearestDistance &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckIsInRoute
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckInRoadSegmentTask
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_HoldRoadSegmentTask
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckChangeRoadSegmentTask
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNodeDataAndCheckInRoute
</UL>

<P><STRONG><a name="[6df]"></a>Route_GetNodeData</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Route_GetNodeData &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetPointDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNodeDataAndCheckInRoute
</UL>

<P><STRONG><a name="[6e0]"></a>Route_GetNodeDataAndCheckInRoute</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = Route_GetNodeDataAndCheckInRoute &rArr; Route_CheckIsInRouteEx &rArr; Route_CheckIsInRoute &rArr; Route_GetNearestDistance &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNodeData
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckIsInRouteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRoadSegmentTask
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_HoldRoadSegmentTask
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckNextRoadSegment
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckOutRouteTask
</UL>

<P><STRONG><a name="[6e1]"></a>Route_CheckOutRouteTask</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = Route_CheckOutRouteTask &rArr; Route_DisposeInOutAlarm &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatusAtOnce
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNodeDataAndCheckInRoute
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeInOutAlarm
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckScanTask
</UL>

<P><STRONG><a name="[6e3]"></a>Route_SetDriverTimeAlarm</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Route_SetDriverTimeAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckDriverTime
</UL>

<P><STRONG><a name="[6e4]"></a>Route_CheckDriverTime</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Route_CheckDriverTime &rArr; Route_SetDriverTimeAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_SetDriverTimeAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckChangeRoadSegmentTask
</UL>

<P><STRONG><a name="[6e5]"></a>Route_CheckChangeRoadSegmentTask</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = Route_CheckChangeRoadSegmentTask &rArr; Route_CheckIsInRouteEx &rArr; Route_CheckIsInRoute &rArr; Route_GetNearestDistance &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckDriverTime
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckIsInRouteEx
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatus
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_SetSpeedParam
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckScanTask
</UL>

<P><STRONG><a name="[6e6]"></a>Route_GoToChangeRoadSegment</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Route_GoToChangeRoadSegment &rArr; Route_GoNextStatusAtOnce &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatusAtOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_HoldRoadSegmentTask
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckNextRoadSegment
</UL>

<P><STRONG><a name="[6e7]"></a>Route_CheckNextRoadSegment</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = Route_CheckNextRoadSegment &rArr; Route_GetNodeDataAndCheckInRoute &rArr; Route_CheckIsInRouteEx &rArr; Route_CheckIsInRoute &rArr; Route_GetNearestDistance &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatusAtOnce
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoToChangeRoadSegment
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNodeDataAndCheckInRoute
</UL>
<BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_HoldRoadSegmentTask
</UL>

<P><STRONG><a name="[6e8]"></a>Route_CheckTime</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Route_CheckTime &rArr; Area_GetConvertCurTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInRange
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConvertCurTime
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRouteAreaTask
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckTimeEx
</UL>

<P><STRONG><a name="[6e9]"></a>Route_CheckTimeEx</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Route_CheckTimeEx &rArr; Route_CheckTime &rArr; Area_GetConvertCurTime
</UL>
<BR>[Calls]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckTime
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ClearAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRoadSegmentTask
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_HoldRoadSegmentTask
</UL>

<P><STRONG><a name="[6ea]"></a>Route_HoldRoadSegmentTask</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = Route_HoldRoadSegmentTask &rArr; Route_CheckNextRoadSegment &rArr; Route_GetNodeDataAndCheckInRoute &rArr; Route_CheckIsInRouteEx &rArr; Route_CheckIsInRoute &rArr; Route_GetNearestDistance &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckTimeEx
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckNextRoadSegment
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoToChangeRoadSegment
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNodeDataAndCheckInRoute
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckIsInRouteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckScanTask
</UL>

<P><STRONG><a name="[6eb]"></a>Route_CheckInRoadSegmentTask</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = Route_CheckInRoadSegmentTask &rArr; Route_DisposeInOutAlarm &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckIsInRouteEx
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeInOutAlarm
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatus
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_SetSpeedParam
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckScanTask
</UL>

<P><STRONG><a name="[6ec]"></a>Route_FindRoadSegmentTask</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = Route_FindRoadSegmentTask &rArr; Route_GetNodeDataAndCheckInRoute &rArr; Route_CheckIsInRouteEx &rArr; Route_CheckIsInRoute &rArr; Route_GetNearestDistance &rArr; Route_GetPointDistance &rArr; Route_GetDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatusAtOnce
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckTimeEx
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNodeDataAndCheckInRoute
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckScanTask
</UL>

<P><STRONG><a name="[6ed]"></a>Route_FindRouteAreaTask</STRONG> (Thumb, 248 bytes, Stack size 64 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Route_FindRouteAreaTask &rArr; Area_ConverseBcdGmtime &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ConverseBcdGmtime
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConverseBCDTimeType
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparePos
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoNextStatusAtOnce
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckTime
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckScanTask
</UL>

<P><STRONG><a name="[eb]"></a>Route_CheckScanTask</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312 + Unknown Stack Size
<LI>Call Chain = Route_CheckScanTask &rArr; Route_CheckInRoadSegmentTask &rArr; Route_DisposeInOutAlarm &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRouteAreaTask
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRoadSegmentTask
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckInRoadSegmentTask
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_HoldRoadSegmentTask
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckChangeRoadSegmentTask
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckOutRouteTask
</UL>
<BR>[Called By]<UL><LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckGpsDataChange
</UL>
<BR>[Address Reference Count : 1]<UL><LI> route.o(.text)
</UL>
<P><STRONG><a name="[6e2]"></a>Route_GoNextStatusAtOnce</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Route_GoNextStatusAtOnce &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRouteAreaTask
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRoadSegmentTask
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckNextRoadSegment
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GoToChangeRoadSegment
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckOutRouteTask
</UL>

<P><STRONG><a name="[6ee]"></a>Route_GetCurGpsCoordinate</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Route_GetCurGpsCoordinate &rArr; Public_GetCurBasicPositionInfo &rArr; Report_GetPositionBasicInfo &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurBasicPositionInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckGpsDataChange
</UL>

<P><STRONG><a name="[6c1]"></a>Route_GetInOutAlarmSubjoinInfo</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Route_GetInOutAlarmSubjoinInfo &rArr; Public_ConvertLongToBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetManualAlarmSubjoinInfo
</UL>

<P><STRONG><a name="[6c2]"></a>Route_GetDriveAlarmInfoSubjoinInfo</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Route_GetDriveAlarmInfoSubjoinInfo &rArr; Public_ConvertLongToBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetManualAlarmSubjoinInfo
</UL>

<P><STRONG><a name="[6ef]"></a>Route_GetDeviationAlarmInfo</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, route.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[6f0]"></a>Route_CheckForResetParam</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Route_CheckForResetParam &rArr; Route_ResetParam &rArr; Route_ClearAlarm &rArr; Route_ClearSpeedParam
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeSetRoad
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeDelRoad
</UL>

<P><STRONG><a name="[6a2]"></a>Route_DisposeSetRoad</STRONG> (Thumb, 994 bytes, Stack size 160 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Route_DisposeSetRoad &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrRoute
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckForResetParam
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SetRoad
</UL>

<P><STRONG><a name="[6a3]"></a>Route_DisposeDelRoad</STRONG> (Thumb, 232 bytes, Stack size 80 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Route_DisposeDelRoad &rArr; Area_MdyDataInFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrRoute
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckForResetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DelRoad
</UL>

<P><STRONG><a name="[6f1]"></a>Route_PlayRoadExcursionAlarmVoice</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360 + Unknown Stack Size
<LI>Call Chain = Route_PlayRoadExcursionAlarmVoice &rArr; Public_PlayE2ParamAlarmVoice &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayE2ParamAlarmVoice
</UL>
<BR>[Called By]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckAlarmVoiceTask
</UL>

<P><STRONG><a name="[be1]"></a>SpeedMonitor_CheckPlayFlag</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, route.o(.text), UNUSED)

<P><STRONG><a name="[6f3]"></a>Route_CheckPlayFlag</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Route_CheckPlayFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckAlarmVoiceTask
</UL>

<P><STRONG><a name="[6f2]"></a>Route_CheckAlarmVoiceTask</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = Route_CheckAlarmVoiceTask &rArr; Route_PlayRoadExcursionAlarmVoice &rArr; Public_PlayE2ParamAlarmVoice &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckPlayFlag
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_PlayRoadExcursionAlarmVoice
</UL>
<BR>[Called By]<UL><LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckGpsDataChange
</UL>

<P><STRONG><a name="[6f4]"></a>Route_CheckGpsDataChange</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408 + Unknown Stack Size
<LI>Call Chain = Route_CheckGpsDataChange &rArr; Route_CheckAlarmVoiceTask &rArr; Route_PlayRoadExcursionAlarmVoice &rArr; Public_PlayE2ParamAlarmVoice &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmMaskBit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopygPosition
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurSpeed
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckAlarmVoiceTask
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetCurGpsCoordinate
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckScanTask
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ClearAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ScanTask
</UL>

<P><STRONG><a name="[6f5]"></a>Route_ScanTask</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416 + Unknown Stack Size
<LI>Call Chain = Route_ScanTask &rArr; Route_CheckGpsDataChange &rArr; Route_CheckAlarmVoiceTask &rArr; Route_PlayRoadExcursionAlarmVoice &rArr; Public_PlayE2ParamAlarmVoice &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckGpsDataChange
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ResetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> route.o(.text)
</UL>
<P><STRONG><a name="[6f6]"></a>Route_StartScanTask</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Route_StartScanTask &rArr; LZM_PublicSetCycTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> route.o(.text)
</UL>
<P><STRONG><a name="[6f7]"></a>Route_ReadAndCheckParam</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Route_ReadAndCheckParam &rArr; ClrRoute &rArr; Route_ParameterInitialize &rArr; Route_UpdatePram &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrRoute
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ParameterInitialize
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> route.o(.text)
</UL>
<P><STRONG><a name="[6f8]"></a>InitRoute</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InitRoute &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[47]"></a>Route_TimeTask</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Route_TimeTask &rArr; LZM_PublicTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[30c]"></a>LeapYear</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YearDay
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_Gmtime
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConverseGmtime
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthTotalSec
</UL>

<P><STRONG><a name="[30d]"></a>YearDay</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ConverseGmtime
</UL>

<P><STRONG><a name="[1ad]"></a>ConverseGmtime</STRONG> (Thumb, 130 bytes, Stack size 44 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YearDay
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ConverseBcdGmtime
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtc
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_AdjustRtc
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_FindSDcardFileAndSaveToUdisk
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetTiredDriveRecord
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_InitialLonLat
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MemoryIndex
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthStartTime
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Get2daysLog
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecordInit
<LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd09H
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd83H
<LI><a href="#[a63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Init
<LI><a href="#[a61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Write
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetUnsaveLog
<LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
<LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_CheckReadParameter
</UL>

<P><STRONG><a name="[3cb]"></a>SetRtc</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SetRtc &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_AdjustRtc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
<LI><a href="#[a71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC2H
</UL>

<P><STRONG><a name="[6fa]"></a>RTC_Configuration</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_Configuration &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
</UL>

<P><STRONG><a name="[705]"></a>InitRtc</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = InitRtc &rArr; SetRtc &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtc
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearFlag
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_WriteBackupRegister
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_TamperPinCmd
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_ReadBackupRegister
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_RTCOutputConfig
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[22f]"></a>Gmtime</STRONG> (Thumb, 260 bytes, Stack size 44 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Gmtime
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1SearchSector
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2SearchSector
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_AdjustRtc
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckOneBlindArea
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_CheckFlashArea
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetTiredDriveRecord
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRtc
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_PowerOnHandle
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MemoryIndex
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeIsInTimeRange
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordIndex
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Get2daysLog
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecordInit
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadAndWriteOnefileToUsb
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[a8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_CheckEnableFlag
<LI><a href="#[a8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_Write
<LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd03H
<LI><a href="#[a67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_Init
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Get15MinuteSpeed
<LI><a href="#[a63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Init
<LI><a href="#[a5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRParameter_Write
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetUnsaveLog
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadCurrentDriverInfo
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Write
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightWrite
<LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>

<P><STRONG><a name="[4ae]"></a>RTC_PowerOnHandle</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RTC_PowerOnHandle &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b0]"></a>ReadRtc</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ReadRtc &rArr; Gmtime
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1ae]"></a>RTC_GetCurTime</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Rx_Isr
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetFileName
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateTiming
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConvertCurTime
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ConverseBcdGmtime
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCD
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetTiredDriveRecord
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FetchWAVFileName
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FetchJPEGFileName
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_MinuteSpeed
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCDEx
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CameraPhoto
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckCurTimeIsInTimeRange
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthStartTime
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_GetCurMonthTotalSec
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Printf
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_RTC
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimeTask
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_TimeTask
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_TimeTask
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Get2daysLog
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecordInit
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[a8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_CheckEnableFlag
<LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd09H
<LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SaveStartTime
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadCurrentDriverInfo
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsArrived
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleNightRunVoice
<LI><a href="#[a3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_NightIsArrived
<LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
<LI><a href="#[a29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WriteStop
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
<LI><a href="#[a26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePositionNoChange
</UL>

<P><STRONG><a name="[69d]"></a>Num2NumStr</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Num2NumStr
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
</UL>

<P><STRONG><a name="[230]"></a>CheckTimeStruct</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1SearchSector
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2SearchSector
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_AdjustRtc
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckOneBlindArea
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
</UL>

<P><STRONG><a name="[42]"></a>Sleep_TimeTask</STRONG> (Thumb, 376 bytes, Stack size 8 bytes, sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = Sleep_TimeTask &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Open
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Close
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteIoStatusBit
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[70b]"></a>Sleep_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Sleep_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[727]"></a>SleepDeep_ResetSCRSleepDeepBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sleepdeep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
</UL>

<P><STRONG><a name="[736]"></a>SleepDeep_SetAccExtiType</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sleepdeep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ACC_EXTI_IRQ
</UL>

<P><STRONG><a name="[733]"></a>SleepDeep_SetRtcExtiType</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sleepdeep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTC_WKUP_IRQ
</UL>

<P><STRONG><a name="[be2]"></a>SleepDeep_SetExtiTypeBreak</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sleepdeep.o(.text), UNUSED)

<P><STRONG><a name="[70c]"></a>SleepDeep_PortCtrlAccExtiEnable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SleepDeep_PortCtrlAccExtiEnable &rArr; GPIO_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiInit
</UL>

<P><STRONG><a name="[70d]"></a>SleepDeep_PortCtrlAccExtiInit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SleepDeep_PortCtrlAccExtiInit &rArr; SleepDeep_PortCtrlAccExtiEnable &rArr; GPIO_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
</UL>

<P><STRONG><a name="[70f]"></a>SleepDeep_PortCtrlAccExtiDisable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SleepDeep_PortCtrlAccExtiDisable &rArr; GPIO_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ParameterInitialize
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
</UL>

<P><STRONG><a name="[710]"></a>SleepDeep_RTCWakeUpDisable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SleepDeep_RTCWakeUpDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ParameterInitialize
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
</UL>

<P><STRONG><a name="[711]"></a>SleepDeep_ConfigRTCWakeUp</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SleepDeep_ConfigRTCWakeUp &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearFlag
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
</UL>

<P><STRONG><a name="[726]"></a>SleepDeep_ResetWatchdog</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sleepdeep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
</UL>

<P><STRONG><a name="[713]"></a>SleepDeep_ResetIoInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SleepDeep_ResetIoInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
</UL>

<P><STRONG><a name="[714]"></a>SleepDeep_GetAccPortInValue</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SleepDeep_GetAccPortInValue
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
</UL>

<P><STRONG><a name="[715]"></a>SleepDeep_CloseAllUserPower</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SleepDeep_CloseAllUserPower &rArr; NaviLcd_AccStatusOff &rArr; NaviLcdPowerOff
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_AccStatusOff
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_PWR_OFF
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
</UL>

<P><STRONG><a name="[716]"></a>SleepDeep_OpenAllUserPower</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, sleepdeep.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_AccStatusOn
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_PWR_ON
</UL>

<P><STRONG><a name="[718]"></a>SleepDeep_GetCurPowerValue</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SleepDeep_GetCurPowerValue
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckCurrentVoltType
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckForEnterStopMode
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_TerminalShutdown
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
</UL>

<P><STRONG><a name="[722]"></a>SleepDeep_DelayMs</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sleepdeep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
</UL>

<P><STRONG><a name="[719]"></a>SYSCLKConfig_STOP</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SYSCLKConfig_STOP &rArr; RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL2Cmd
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
</UL>

<P><STRONG><a name="[720]"></a>SleepDeep_StopMode</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SleepDeep_StopMode &rArr; SYSCLKConfig_STOP &rArr; RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_EnterSTOPMode
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_DelayMs
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_GetCurPowerValue
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_GetAccPortInValue
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTCWakeUpDisable
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
</UL>

<P><STRONG><a name="[723]"></a>SleepDeep_UsartIntoSleep</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SleepDeep_UsartIntoSleep
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
</UL>

<P><STRONG><a name="[725]"></a>SleepDeep_EnterStopMode</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SleepDeep_EnterStopMode &rArr; SleepDeep_StopMode &rArr; SYSCLKConfig_STOP &rArr; RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_UsartIntoSleep
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CloseAllUserPower
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ResetIoInit
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ResetWatchdog
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTCWakeUpDisable
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiDisable
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiInit
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ResetSCRSleepDeepBit
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_TerminalShutdown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleepdeep.o(.text)
</UL>
<P><STRONG><a name="[729]"></a>SleepDeep_TerminalShutdown</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SleepDeep_TerminalShutdown &rArr; LcdClearScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_GetCurPowerValue
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleepdeep.o(.text)
</UL>
<P><STRONG><a name="[5f7]"></a>SleepDeep_DisposeTerminalShutdown</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SleepDeep_DisposeTerminalShutdown &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[72a]"></a>SleepDeep_ReportServerEnterStopMode</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = SleepDeep_ReportServerEnterStopMode &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckForEnterStopMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleepdeep.o(.text)
</UL>
<P><STRONG><a name="[72b]"></a>SleepDeep_CheckForEnterStopMode</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = SleepDeep_CheckForEnterStopMode &rArr; SleepDeep_ReportServerEnterStopMode &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteIoStatusBit
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ReportServerEnterStopMode
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_GetCurPowerValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleepdeep.o(.text)
</UL>
<P><STRONG><a name="[72c]"></a>SleepDeep_CheckCurrentVoltType</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SleepDeep_CheckCurrentVoltType &rArr; SleepDeep_GetCurPowerValue
</UL>
<BR>[Calls]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_GetCurPowerValue
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StartScanTask
</UL>

<P><STRONG><a name="[351]"></a>SleepDeep_UpdateParam</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SleepDeep_UpdateParam &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StartScanTask
</UL>

<P><STRONG><a name="[72d]"></a>SleepDeep_StartScanTask</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SleepDeep_StartScanTask &rArr; SleepDeep_UpdateParam &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_UpdateParam
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckCurrentVoltType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleepdeep.o(.text)
</UL>
<P><STRONG><a name="[72e]"></a>SleepDeep_ParameterInitialize</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, sleepdeep.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTCWakeUpDisable
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiDisable
</UL>

<P><STRONG><a name="[72f]"></a>SleepDeep_RTC_WKUP_IRQ</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SleepDeep_RTC_WKUP_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetITStatus
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearITPendingBit
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_GetFlagStatus
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_SetRtcExtiType
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
</UL>

<P><STRONG><a name="[734]"></a>SleepDeep_ACC_EXTI_IRQ</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SleepDeep_ACC_EXTI_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_SetAccExtiType
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>SleepDeep_TimeTask</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sleepdeep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SleepDeep_TimeTask &rArr; LZM_PublicTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[52a]"></a>SPIx_ReadWriteByte</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Idle_Sta
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendBlock
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_RecvData
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_ReadWriteByte
</UL>

<P><STRONG><a name="[52f]"></a>SPIx_Init</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPIx_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_Init
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[52c]"></a>SPIx_SetSpeed</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIx_SetSpeed &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_SpeedHigh
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_SpeedLow
</UL>

<P><STRONG><a name="[1b7]"></a>spi_Delay_uS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, spi_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteStatusRegister
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_ReadStatusRegister
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteDisable
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteEnable
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_Init
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadStatusRegister
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_InitIO
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Select
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_Init
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_StartReadSequence
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_AllUnprotect
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[be3]"></a>IncFlashDelayCount</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, spi_flash.o(.text), UNUSED)

<P><STRONG><a name="[33a]"></a>sFLASH_SendByte</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteStatusRegister
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_ReadStatusRegister
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteDisable
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteEnable
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadByte
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadStatusRegister
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_StartReadSequence
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_AllUnprotect
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
</UL>

<P><STRONG><a name="[73c]"></a>sFLASH_WaitForWriteEnd</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sFLASH_WaitForWriteEnd &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_AllUnprotect
</UL>

<P><STRONG><a name="[73d]"></a>sFLASH_WriteEnable</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_AllUnprotect
</UL>

<P><STRONG><a name="[73e]"></a>sFLASH_AllUnprotect</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sFLASH_AllUnprotect &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[73f]"></a>sFLASH_LowLevel_DeInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sFLASH_LowLevel_DeInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DeInit
</UL>

<P><STRONG><a name="[741]"></a>sFLASH_DeInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sFLASH_DeInit &rArr; sFLASH_LowLevel_DeInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[339]"></a>sFLASH_LowLevel_Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_EraseChip
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_WriteStatusRegister
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_ReadStatusRegister
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadStatusRegister
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_EraseAllDvrArea
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
</UL>

<P><STRONG><a name="[742]"></a>sFLASH_Init</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sFLASH_Init &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[1b5]"></a>sFLASH_EraseSector</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Erase
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Erase
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_EraseFlash
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_EraseBlindArea
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_EraseFlashArea
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_EraseAllFlashArea
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CallRecordDeleteAll
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_WriteToFlash
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseDownloadGB2313FlashArea
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_CheckFlashArea
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageFlashFormat
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpStart
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SaveCallRecord
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseUpdataFlashArea
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCall
<LI><a href="#[a72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd84H
<LI><a href="#[a63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Init
<LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SaveStartTime
<LI><a href="#[a61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Write
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveAllDriverInfo
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
<LI><a href="#[a07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_EraseFlashArea
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>

<P><STRONG><a name="[743]"></a>sFLASH_EraseBulk</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
</UL>

<P><STRONG><a name="[744]"></a>sFLASH_WritePage</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
</UL>

<P><STRONG><a name="[1b6]"></a>sFLASH_WriteBuffer</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1ReportAck
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2ReportAck
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_BlindReport
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CallRecordDeleteAll
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_WriteToFlash
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSaveDataToFlash
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SaveCallRecord
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCall
<LI><a href="#[a72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd84H
<LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SaveStartTime
<LI><a href="#[a5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SavePosition
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveAllDriverInfo
<LI><a href="#[a3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_Write
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>

<P><STRONG><a name="[1b3]"></a>sFLASH_ReadBuffer</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_StartBlindReport
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1SearchSector
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Report
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2SearchSector
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Report
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_AreaModifyUserData
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ReadAndCheckParam
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModifyUserData
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModifyUserData
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRoundArea
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaModify
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundAreaAdd
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundModifyUserData
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DelRectArea
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaModify
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RectAreaAdd
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectModifyUserData
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_BlindReport
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckOneBlindArea
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ReadOneEnglishCharacterFromFlash
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ReadOneChineseCharacterFromFlash
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_ReadFromFlash
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_WriteToFlash
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_CheckFlashArea
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadAndCheckCallRecord
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageReadDataFromFlash
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ReadAndCheckParam
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_FindRouteAreaTask
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNodeData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeSetRoad
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeDelRoad
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ReadAndCheckParam
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DeleteArea
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SetArea
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SaveOneModifyUserData
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ComparePosBlock
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ReadEndPointData
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_GetCallRecordTotalNum
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadOneCallRecordData
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadCallRecord
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCheck
<LI><a href="#[a7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd06H
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Get15MinuteSpeed
<LI><a href="#[a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_GetCurHourPosition
<LI><a href="#[a63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Init
<LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SaveStartTime
<LI><a href="#[a61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Write
<LI><a href="#[a5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SavePosition
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadListTime
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadList
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
<LI><a href="#[a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadOldestTime
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
<LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadNewestTime
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>

<P><STRONG><a name="[745]"></a>sFLASH_ReadID</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sFLASH_ReadID &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFlashChip
</UL>

<P><STRONG><a name="[746]"></a>sFLASH_StartReadSequence</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
</UL>

<P><STRONG><a name="[33b]"></a>sFLASH_ReadByte</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sFLASH_ReadByte &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_ReadStatusRegister
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadStatusRegister
</UL>

<P><STRONG><a name="[747]"></a>sFLASH_SendHalfWord</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>

<P><STRONG><a name="[748]"></a>CheckFlashChip</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CheckFlashChip &rArr; sFLASH_ReadID &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryChipSelfCheck
</UL>

<P><STRONG><a name="[749]"></a>SpinInit</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, spin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SpinInit &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
</UL>

<P><STRONG><a name="[be4]"></a>SpinInitData</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, spin.o(.text), UNUSED)

<P><STRONG><a name="[74a]"></a>SpinSetFocus</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, spin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SpinSetFocus &rArr; LcdReverseBar &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
</UL>

<P><STRONG><a name="[74b]"></a>SpinLoseFocus</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, spin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SpinLoseFocus &rArr; LcdReverseBar &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
</UL>

<P><STRONG><a name="[74c]"></a>SpinShow</STRONG> (Thumb, 442 bytes, Stack size 96 bytes, spin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = SpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
</UL>

<P><STRONG><a name="[770]"></a>SpinGetHandle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
</UL>

<P><STRONG><a name="[74d]"></a>SpinResponse</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, spin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = SpinResponse &rArr; SpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInfoShowCarLoadStatus
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamDoorLevelSelect
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamHornLevelSelect
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetCDMASleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetGNSSWordMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOpenAccountEncrypt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuLock2
</UL>

<P><STRONG><a name="[56]"></a>StatusAlarm_TimeTask</STRONG> (Thumb, 950 bytes, Stack size 96 bytes, statusalarm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2072 + Unknown Stack Size
<LI>Call Chain = StatusAlarm_TimeTask &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_GetTotalNum
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTerminalAuthorizationFlag
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_GetLink2OpenFlag
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteRecordConrtolBit
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarm
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatus
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEvTask
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaEvenReport
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[4ac]"></a>PowerOnUpdata</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, systeminit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = PowerOnUpdata &rArr; EepromPram_DefaultSet &rArr; GpsMile_SetPram &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Corner_UpdataPram
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ParameterInitialize
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_PowerOnUpdataPosition
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataAccOffGpsControlFlag
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedFlagUpdatePram
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_UpdataPram
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBeat_UpdatePram
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_ParameterInitialize
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_UpdateTerminalPhoneNum
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate5
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate4
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate3
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate2
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate1
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ParameterInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4ab]"></a>MemoryChipSelfCheck</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, systeminit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = MemoryChipSelfCheck &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFramChip
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEepromChip
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFlashChip
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74f]"></a>USB_SW_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, systeminit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_SW_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[750]"></a>NVIC_Configuration</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, systeminit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[752]"></a>RCC_Configuration</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, systeminit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_Configuration &rArr; SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[4a9]"></a>PeripheralInit</STRONG> (Thumb, 820 bytes, Stack size 40 bytes, systeminit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2572<LI>Call Chain = PeripheralInit &rArr; Media_FolderCheck &rArr; Media_SignDelFlag &rArr; Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Init
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Init
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRunMode
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Init
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_Init
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConfigGNSS
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_Init
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePeripheralType
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_InitIO
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSDFile
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FolderCheck
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_CheckSdOnOff
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Initial
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DeInit
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_AllUnprotect
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Init
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRoute
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ParameterInitialize
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_init
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Init
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_AppInitialize
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SW_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be5]"></a>IDWG_Configuration</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, systeminit.o(.text), UNUSED)

<P><STRONG><a name="[759]"></a>PWR_PVDInit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, systeminit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_PVDLevelConfig
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_PVDCmd
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_StructInit
</UL>

<P><STRONG><a name="[6ac]"></a>GetCurentProductModel</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GetCurentProductModel &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartLogo
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProductInfo
</UL>

<P><STRONG><a name="[75d]"></a>ReadSystemBacklightFlag</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ReadSystemBacklightFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicSysParamterInit
</UL>

<P><STRONG><a name="[75e]"></a>SaveSystemBacklightFlag</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SaveSystemBacklightFlag &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskLcdBacklight
</UL>

<P><STRONG><a name="[be6]"></a>SysLcdBackLightCntReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, taskmenu.o(.text), UNUSED)

<P><STRONG><a name="[3a1]"></a>SysAutoRunCountReset</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysAutoRunCountReset
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowOnePage
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowLogo
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KeyHandler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
</UL>

<P><STRONG><a name="[75f]"></a>CheckCurrentLcdBackLight</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckCurrentLcdBackLight
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunToMainInfoTask
</UL>

<P><STRONG><a name="[760]"></a>ShowSelectMainInterface</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = ShowSelectMainInterface &rArr; LCD_DeepInterface &rArr; LCD_ShowDeepValue &rArr; Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LoadInterface
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TurnSpeepInterface
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeepInterface
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SpeedInterface
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TemperatureInterface
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
</UL>

<P><STRONG><a name="[761]"></a>TaskMenuPrintend</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TaskMenuPrintend &rArr; Lcd_Initial &rArr; Lcd_DisplayClr &rArr; LcdClearScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Initial
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
</UL>

<P><STRONG><a name="[763]"></a>TaskMenuPrintstart</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = TaskMenuPrintstart &rArr; printer_task &rArr; VDROvertime_Get2daysLog &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
</UL>

<P><STRONG><a name="[e2]"></a>TaskMenuPrint</STRONG> (Thumb, 442 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = TaskMenuPrint &rArr; TaskMenuPrintstart &rArr; printer_task &rArr; VDROvertime_Get2daysLog &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValue_Read
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_print_finished
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintstart
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> navilcd.o(.text)
<LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[10b]"></a>TaskMainInterfaceSelection</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMainInterfaceSelection &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[766]"></a>TaskSystemNavationScr</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = TaskSystemNavationScr &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[767]"></a>TaskSystemCANInformCollector</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TaskSystemCANInformCollector &rArr; LZM_DefTaskProc &rArr; LcdPasteScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[768]"></a>TaskSystemOilCollector</STRONG> (Thumb, 150 bytes, Stack size 72 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = TaskSystemOilCollector &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_OilVolumeCur_Get
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[769]"></a>TaskSystemTemperatureCollector</STRONG> (Thumb, 444 bytes, Stack size 120 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = TaskSystemTemperatureCollector &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_PosEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[76a]"></a>TaskSystemWeightCollector</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = TaskSystemWeightCollector &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadSelfDefine2Bit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[76c]"></a>TaskSystemCameraInfo</STRONG> (Thumb, 494 bytes, Stack size 72 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = TaskSystemCameraInfo &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_GetOnlineFlag
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[76e]"></a>Adjust_Array_Size</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Adjust_Array_Size &rArr; UpdatePeripheralType &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_GetOnlineFlag
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePeripheralType
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral1TypeBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
</UL>

<P><STRONG><a name="[ec]"></a>TaskQueryPeripheralInform</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = TaskQueryPeripheralInform &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adjust_Array_Size
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[10a]"></a>TaskMenuLock2</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TaskMenuLock2 &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[109]"></a>TaskMenuLock1</STRONG> (Thumb, 530 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TaskMenuLock1 &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[108]"></a>TaskSystemOpenAccountEncrypt</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TaskSystemOpenAccountEncrypt &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>TaskSystemParamSetGNSSWordMode</STRONG> (Thumb, 798 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = TaskSystemParamSetGNSSWordMode &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinLoseFocus
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[771]"></a>LoadDefaultParamter</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LoadDefaultParamter &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[773]"></a>PublicConfirmAll</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PublicConfirmAll &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTask
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirmAutoExit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemServer
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirm
</UL>

<P><STRONG><a name="[774]"></a>PublicConfirm</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PublicConfirm &rArr; PublicConfirmAll &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirmAll
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebug
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemandSendToPlatform
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationFeatureCoef
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemParameter
</UL>

<P><STRONG><a name="[775]"></a>TaskSystemShowTerminalID</STRONG> (Thumb, 374 bytes, Stack size 56 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = TaskSystemShowTerminalID &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_BCD2HEX
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[776]"></a>TaskSystemParamSetCDMASleep</STRONG> (Thumb, 412 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TaskSystemParamSetCDMASleep &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[777]"></a>TaskSystemParamHornLevelSelect</STRONG> (Thumb, 400 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TaskSystemParamHornLevelSelect &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[778]"></a>TaskSystemParamDoorLevelSelect</STRONG> (Thumb, 502 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TaskSystemParamDoorLevelSelect &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[77a]"></a>TaskSystemParamSetSpeedParam</STRONG> (Thumb, 514 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = TaskSystemParamSetSpeedParam &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinLoseFocus
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinLoseFocus
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[77f]"></a>TaskSystemParamSetPhoneNumber</STRONG> (Thumb, 410 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = TaskSystemParamSetPhoneNumber &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAndCheckTerminalPhoneNumber
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAndCheckPhoneNumber
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>TaskMenuSystemParameter</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuSystemParameter &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[117]"></a>TaskMenuSystemDebugTest</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2208 + Unknown Stack Size
<LI>Call Chain = TaskMenuSystemDebugTest &rArr; Lcd_DisplaySystemTest &rArr; RadioProtocol_TerminalRegister &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[780]"></a>TaskSystemDebugSetPassWord</STRONG> (Thumb, 566 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemDebugSetPassWord &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[781]"></a>CurrentSystemLogout</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816 + Unknown Stack Size
<LI>Call Chain = CurrentSystemLogout &rArr; Lcd_SendTerminalLogout &rArr; RadioProtocol_TerminalLogout &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SendTerminalLogout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[782]"></a>SystemDebugSetPositionEx</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SystemDebugSetPositionEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Calibration
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[783]"></a>SystemDebugSetPosition</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SystemDebugSetPosition &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetOperateTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[784]"></a>SystemDebugFixTimeCancel</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemDebugFixTimeCancel &rArr; LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[785]"></a>SystemDebugFixTimeOk</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = SystemDebugFixTimeOk &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[786]"></a>TaskSystemDebugFixTime</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = TaskSystemDebugFixTime &rArr; Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_LcdShowTime
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirmAll
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[787]"></a>OpenFeatureCoefFlag</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = OpenFeatureCoefFlag &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_EnableCalibration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[789]"></a>GetFeatureCoefFlag</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetFeatureCoefFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_GetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationFeatureCoef
</UL>

<P><STRONG><a name="[78b]"></a>CalibrationFeatureCoef</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = CalibrationFeatureCoef &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFeatureCoefFlag
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirm
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemDebug
</UL>

<P><STRONG><a name="[78c]"></a>ShowCurrentReportMode</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = ShowCurrentReportMode &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugCurrentReportMode
</UL>

<P><STRONG><a name="[78d]"></a>TaskSystemDebugCurrentReportMode</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = TaskSystemDebugCurrentReportMode &rArr; ShowCurrentReportMode &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentReportMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[78e]"></a>GetCurrentIOstatus</STRONG> (Thumb, 520 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCurrentIOstatus &rArr; GpioInGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadExtCarStatusBit
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllCurrentIOINstatus
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
</UL>

<P><STRONG><a name="[78f]"></a>ChangCurrentIOOutstatus</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChangCurrentIOOutstatus
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
</UL>
<BR>[Called By]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugIOOut
</UL>

<P><STRONG><a name="[790]"></a>TaskSystemDebugIOOut</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TaskSystemDebugIOOut &rArr; SpinResponse &rArr; SpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangCurrentIOOutstatus
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentIOstatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[791]"></a>GetAllCurrentIOINstatus</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetAllCurrentIOINstatus &rArr; GetCurrentIOstatus &rArr; GpioInGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentIOstatus
</UL>
<BR>[Called By]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentIOstatus
</UL>

<P><STRONG><a name="[792]"></a>ShowCurrentIOstatus</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ShowCurrentIOstatus &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowVerLine
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllCurrentIOINstatus
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugShowIOstatus
</UL>

<P><STRONG><a name="[793]"></a>TaskSystemDebugShowIOstatus</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = TaskSystemDebugShowIOstatus &rArr; ShowCurrentIOstatus &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentIOstatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>TaskMenuSystemDebug</STRONG> (Thumb, 488 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuSystemDebug &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrationFeatureCoef
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirm
</UL>
<BR>[Address Reference Count : 3]<UL><LI> deepplow.o(.text)
<LI> taskmenu.o(.text)
<LI> turnspeed.o(.text)
</UL>
<P><STRONG><a name="[fc]"></a>IP1CancelModify</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IP1CancelModify &rArr; LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>IP1SaveEyePlat</STRONG> (Thumb, 288 bytes, Stack size 88 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = IP1SaveEyePlat &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>IP1SaveFreight</STRONG> (Thumb, 288 bytes, Stack size 88 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = IP1SaveFreight &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[794]"></a>IsBrushAdministratorCard</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, taskmenu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
</UL>

<P><STRONG><a name="[fb]"></a>TaskSystemServerSetUDPPort2</STRONG> (Thumb, 576 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetUDPPort2 &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBrushAdministratorCard
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[fa]"></a>TaskSystemServerSetTCPPort2</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetTCPPort2 &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBrushAdministratorCard
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>TaskSystemServerSetBackUpIP2</STRONG> (Thumb, 748 bytes, Stack size 72 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetBackUpIP2 &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinLoseFocus
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBrushAdministratorCard
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertStrToIP
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[f8]"></a>TaskSystemServerSetIP2</STRONG> (Thumb, 670 bytes, Stack size 72 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetIP2 &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinLoseFocus
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBrushAdministratorCard
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertStrToIP
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[796]"></a>TaskSystemServerSetBackUpDomainName</STRONG> (Thumb, 362 bytes, Stack size 56 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetBackUpDomainName &rArr; SpinResponse &rArr; SpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[797]"></a>TaskSystemServerSetMainDomainName</STRONG> (Thumb, 304 bytes, Stack size 56 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetMainDomainName &rArr; SpinResponse &rArr; SpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[798]"></a>TaskSystemServerSetUDPPort</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetUDPPort &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBrushAdministratorCard
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[799]"></a>TaskSystemServerSetTCPPort</STRONG> (Thumb, 468 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetTCPPort &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBrushAdministratorCard
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[79a]"></a>TaskSystemServerSetAPN</STRONG> (Thumb, 502 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetAPN &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBrushAdministratorCard
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[79b]"></a>TaskSystemServerSetBackUpIP</STRONG> (Thumb, 724 bytes, Stack size 72 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetBackUpIP &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinLoseFocus
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBrushAdministratorCard
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertStrToIP
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[79c]"></a>TaskSystemServerSetIP</STRONG> (Thumb, 658 bytes, Stack size 72 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = TaskSystemServerSetIP &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinLoseFocus
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBrushAdministratorCard
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertStrToIP
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[f6]"></a>TaskMenuSystemServer</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuSystemServer &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirmAll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7a1]"></a>PublicGetPasswordTo</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PublicGetPasswordTo &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_RefuseNowTask
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystem
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemManageServer
</UL>

<P><STRONG><a name="[7a2]"></a>ShowQueryServerParameter</STRONG> (Thumb, 764 bytes, Stack size 48 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = ShowQueryServerParameter &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemQueryServerParameter
</UL>

<P><STRONG><a name="[7a3]"></a>TaskSystemQueryServerParameter</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = TaskSystemQueryServerParameter &rArr; ShowQueryServerParameter &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQueryServerParameter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>TaskMenuSystemManageServer</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuSystemManageServer &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordTo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[107]"></a>TaskSystemSetCarOwnerPhone</STRONG> (Thumb, 426 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = TaskSystemSetCarOwnerPhone &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[106]"></a>TaskSystemSetCarCityID</STRONG> (Thumb, 478 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemSetCarCityID &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[105]"></a>TaskSystemSetCarProvinceID</STRONG> (Thumb, 394 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemSetCarProvinceID &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[104]"></a>TaskSystemSetCarFeatureCoef</STRONG> (Thumb, 470 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemSetCarFeatureCoef &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[103]"></a>TaskSystemSetCarTotalMile</STRONG> (Thumb, 466 bytes, Stack size 48 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = TaskSystemSetCarTotalMile &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertReadPramToValue
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[102]"></a>TaskSystemSetCarPlateType</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = TaskSystemSetCarPlateType &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[101]"></a>TaskSystemSetCarPlateColor</STRONG> (Thumb, 558 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TaskSystemSetCarPlateColor &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7a4]"></a>ShowReverseBarForOne</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ShowReverseBarForOne &rArr; LcdReverseBar &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
</UL>

<P><STRONG><a name="[7a5]"></a>TaskSystemSetCarVinNumber</STRONG> (Thumb, 1404 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TaskSystemSetCarVinNumber &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetTimer
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowReverseBarForOne
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7a6]"></a>ShowReverseBarForOneEx</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ShowReverseBarForOneEx &rArr; LcdReverseBar &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
</UL>

<P><STRONG><a name="[7a7]"></a>TaskSystemSetCarPlateNumber</STRONG> (Thumb, 1942 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TaskSystemSetCarPlateNumber &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetTimer
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowReverseBarForOneEx
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowReverseBarForOne
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[100]"></a>TaskMenuSystemCarInfo</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuSystemCarInfo &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[ed]"></a>TaskMenuSystemAdvanced</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuSystemAdvanced &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7a8]"></a>TaskLcdBacklight</STRONG> (Thumb, 478 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TaskLcdBacklight &rArr; SpinResponse &rArr; SpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSystemBacklightFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>TaskMenuSystem</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2208 + Unknown Stack Size
<LI>Call Chain = TaskMenuSystem &rArr; Lcd_DisplaySystemTest &rArr; RadioProtocol_TerminalRegister &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordTo
</UL>
<BR>[Address Reference Count : 2]<UL><LI> deepplow.o(.text)
<LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7a9]"></a>LcdShowTtsVolume</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LcdShowTtsVolume &rArr; LcdShowRect &rArr; LcdPaintScreen &rArr; LcdMoveCursorEx &rArr; LcdMoveCursor &rArr; LcdWriteCmd &rArr; Lcd_WriteCom
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAndShowTTsVolume
</UL>

<P><STRONG><a name="[7aa]"></a>AdjustAndShowTTsVolume</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = AdjustAndShowTTsVolume &rArr; Public_ShowValue &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModTtsVolume
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowValue
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeIncr
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeDecr
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowTtsVolume
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowAdjustTtsVolume
</UL>

<P><STRONG><a name="[116]"></a>TaskShowAdjustTtsVolume</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = TaskShowAdjustTtsVolume &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAndShowTTsVolume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7ad]"></a>ShowSIMCardNumber</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ShowSIMCardNumber &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOD_GetIccidBcdValue
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBcdToAsc
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowSIMCardNumber
</UL>

<P><STRONG><a name="[115]"></a>TaskShowSIMCardNumber</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = TaskShowSIMCardNumber &rArr; ShowSIMCardNumber &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSIMCardNumber
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7ae]"></a>ShowProductInfo</STRONG> (Thumb, 416 bytes, Stack size 80 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = ShowProductInfo &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_BCD2HEX
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurentProductModel
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowProductInfo
</UL>

<P><STRONG><a name="[114]"></a>TaskShowProductInfo</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = TaskShowProductInfo &rArr; ShowProductInfo &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProductInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7af]"></a>ShowDriveMile</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = ShowDriveMile &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurTotalMile
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriveMile
</UL>

<P><STRONG><a name="[113]"></a>TaskShowDriveMile</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = TaskShowDriveMile &rArr; ShowDriveMile &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriveMile
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[111]"></a>TaskInfoShowCarLoadStatus</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TaskInfoShowCarLoadStatus &rArr; SpinResponse &rArr; SpinShow &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SetCarLoadStatus
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinResponse
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinGetHandle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinSetFocus
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7b0]"></a>ShowInformationDemandIndex</STRONG> (Thumb, 360 bytes, Stack size 112 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ShowInformationDemandIndex &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowArrow
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneInfoDemandDetails
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInformationDemand
</UL>

<P><STRONG><a name="[7b1]"></a>InformationDemandconfirm</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = InformationDemandconfirm &rArr; RadioProtocol_InforamtionOrder &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandChangeStatus
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_InforamtionOrder
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7b2]"></a>InformationDemandSendToPlatform</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InformationDemandSendToPlatform &rArr; PublicConfirm &rArr; PublicConfirmAll &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirm
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInformationDemand
</UL>

<P><STRONG><a name="[110]"></a>TaskShowInformationDemand</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = TaskShowInformationDemand &rArr; ShowInformationDemandIndex &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInfoDemandTotalNum
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemandSendToPlatform
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInformationDemandIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7b3]"></a>ShowEventReportInfoIndex</STRONG> (Thumb, 198 bytes, Stack size 112 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ShowEventReportInfoIndex &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowArrow
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneEventReportDetails
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowEventReport
</UL>

<P><STRONG><a name="[7b4]"></a>EventReportInfoSendToPlatform</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = EventReportInfoSendToPlatform &rArr; RadioProtocol_EvenReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_EvenReport
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowEventReport
</UL>

<P><STRONG><a name="[10f]"></a>TaskShowEventReport</STRONG> (Thumb, 408 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = TaskShowEventReport &rArr; EventReportInfoSendToPlatform &rArr; RadioProtocol_EvenReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEventReportTotalNum
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportInfoSendToPlatform
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEventReportInfoIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7b5]"></a>ShowQuestionListIndex</STRONG> (Thumb, 284 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ShowQuestionListIndex &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_ReadOneData
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionList
</UL>

<P><STRONG><a name="[7b6]"></a>ShowMainInterface</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ShowMainInterface &rArr; LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
</UL>

<P><STRONG><a name="[448]"></a>ShowTextForMsgBusyFlag</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, taskmenu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowText_EvTask
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
</UL>

<P><STRONG><a name="[7b8]"></a>GetCurrentPageMsgDataStartAddr</STRONG> (Thumb, 144 bytes, Stack size 28 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetCurrentPageMsgDataStartAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionResponse
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDisplayText
</UL>

<P><STRONG><a name="[7b7]"></a>TaskShowDisplayText</STRONG> (Thumb, 488 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = TaskShowDisplayText &rArr; LcdShowOnePage &rArr; LcdShowStrEx &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunCountReset
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowOnePage
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStrEx
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReturnOldTaskEx
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextForMsgBusyFlag
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentPageMsgDataStartAddr
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[10e]"></a>TaskShowQuestionResponse</STRONG> (Thumb, 888 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = TaskShowQuestionResponse &rArr; RadioProtocol_QuestionAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunCountReset
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowOnePage
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStrEx
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReverseBar
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_QuestionAck
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_GetDownloadCmdChannel
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReturnOldTaskEx
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextForMsgBusyFlag
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentPageMsgDataStartAddr
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7bb]"></a>GetCurrentMsgPageNum</STRONG> (Thumb, 192 bytes, Stack size 20 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetCurrentMsgPageNum
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowText
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
</UL>

<P><STRONG><a name="[7ba]"></a>GetCurrentNotEnoughRowNum</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetCurrentNotEnoughRowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
</UL>

<P><STRONG><a name="[7b9]"></a>SystemAutoShowQuestionResponse</STRONG> (Thumb, 408 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328 + Unknown Stack Size
<LI>Call Chain = SystemAutoShowQuestionResponse &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentNotEnoughRowNum
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentMsgPageNum
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestion
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQuestionListDetails
</UL>

<P><STRONG><a name="[7bc]"></a>ShowQuestionListDetails</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344 + Unknown Stack Size
<LI>Call Chain = ShowQuestionListDetails &rArr; SystemAutoShowQuestionResponse &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_ReadOneData
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowQuestionList
</UL>

<P><STRONG><a name="[7bd]"></a>TaskShowQuestionList</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360 + Unknown Stack Size
<LI>Call Chain = TaskShowQuestionList &rArr; ShowQuestionListDetails &rArr; SystemAutoShowQuestionResponse &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_GetTotalNum
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQuestionListDetails
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQuestionListIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7be]"></a>ShowInfoServiceIndex</STRONG> (Thumb, 376 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = ShowInfoServiceIndex &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_ReadOneData
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInfoService
</UL>

<P><STRONG><a name="[449]"></a>SystemAutoShowText</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SystemAutoShowText &rArr; LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentMsgPageNum
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowText_EvTask
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoDetails
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoServiceDetails
</UL>

<P><STRONG><a name="[7bf]"></a>ShowInfoServiceDetails</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ShowInfoServiceDetails &rArr; InfoService_ReadOneData &rArr; InfoServiceReadDataFromFlash &rArr; MessageReadDataFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_ReadOneData
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowText
</UL>
<BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowInfoService
</UL>

<P><STRONG><a name="[7c0]"></a>TaskShowInfoService</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = TaskShowInfoService &rArr; ShowInfoServiceIndex &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_GetTotalNum
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoServiceDetails
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoServiceIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7c1]"></a>ReadIndexTextDetails</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ReadIndexTextDetails &rArr; DownloadGB2313_ReadFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_ReadFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoDetails
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoIndex
</UL>

<P><STRONG><a name="[7c2]"></a>GetCurrentTextIndexTotalNum</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetCurrentTextIndexTotalNum
</UL>
<BR>[Calls]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_GetTotalStep
</UL>
<BR>[Called By]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTextInfo
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoIndex
</UL>

<P><STRONG><a name="[7c4]"></a>ShowTextInfoIndex</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = ShowTextInfoIndex &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTextIndexTotalNum
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIndexTextDetails
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTextInfo
</UL>

<P><STRONG><a name="[7c5]"></a>ShowTextInfoDetails</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ShowTextInfoDetails &rArr; ReadIndexTextDetails &rArr; DownloadGB2313_ReadFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowText
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadIndexTextDetails
</UL>
<BR>[Called By]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTextInfo
</UL>

<P><STRONG><a name="[7c6]"></a>TaskShowTextInfo</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = TaskShowTextInfo &rArr; ShowTextInfoIndex &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoDetails
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoIndex
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTextIndexTotalNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[10d]"></a>TaskMenuInfoServer</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuInfoServer &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7c7]"></a>Show15MinSpeed</STRONG> (Thumb, 226 bytes, Stack size 96 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = Show15MinSpeed &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToTime
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckStrIsBCD
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShow15MinSpeed
</UL>

<P><STRONG><a name="[7c8]"></a>Show15MinSpeedInit</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Show15MinSpeedInit &rArr; VDRSpeed_Get15MinuteSpeed &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShow15MinSpeed
</UL>

<P><STRONG><a name="[7ca]"></a>TaskShow15MinSpeed</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = TaskShow15MinSpeed &rArr; Show15MinSpeed &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show15MinSpeedInit
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show15MinSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7cb]"></a>ShowTiredDriveRecord</STRONG> (Thumb, 266 bytes, Stack size 112 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowTiredDriveRecord &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToTime
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTiredDriveRecord
</UL>

<P><STRONG><a name="[7cc]"></a>ShowTiredDriveRecordInit</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = ShowTiredDriveRecordInit &rArr; VDROvertime_Get2daysLog &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Get2daysLog
</UL>
<BR>[Called By]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowTiredDriveRecord
</UL>

<P><STRONG><a name="[7ce]"></a>TaskShowTiredDriveRecord</STRONG> (Thumb, 440 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = TaskShowTiredDriveRecord &rArr; ShowTiredDriveRecord &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecordInit
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecord
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7cf]"></a>ShowDriverInfo</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ShowDriverInfo &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetLoginFlag
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetLicense
</UL>
<BR>[Called By]<UL><LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDriverInfo
</UL>

<P><STRONG><a name="[7d1]"></a>TaskShowDriverInfo</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TaskShowDriverInfo &rArr; ShowDriverInfo &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriverInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7d2]"></a>ShowCarInfo</STRONG> (Thumb, 500 bytes, Stack size 80 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowCarInfo &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadExtCarStatusBit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_GetAlarmSpeed
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCarInfo
</UL>

<P><STRONG><a name="[7d4]"></a>TaskShowCarInfo</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = TaskShowCarInfo &rArr; ShowCarInfo &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCarInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[112]"></a>TaskMenuDriveRecord</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuDriveRecord &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>TaskMenuMain</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TaskMenuMain &rArr; MenuResponse &rArr; MenuReShow &rArr; MenuShowItem &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetDisplayCtrlFlag
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 2]<UL><LI> phonebook.o(.text)
<LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[e0]"></a>TaskShowMainInterface</STRONG> (Thumb, 328 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = TaskShowMainInterface &rArr; ShowSelectMainInterface &rArr; LCD_DeepInterface &rArr; LCD_ShowDeepValue &rArr; Public_LcdShowTime &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearDisplayCtrlFlag
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetTimer
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Initial
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_GetDisplayCtrlFlag
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetMainRedrawFlag
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSelectMainInterface
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lzmsys.o(.text)
<LI> phonebook.o(.text)
<LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[4a7]"></a>SysAutoRunToMainInfoTask</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysAutoRunToMainInfoTask &rArr; LZM_StartNewTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCurrentLcdBackLight
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuMessage_TimeTask
</UL>

<P><STRONG><a name="[399]"></a>FlashLcdBackLight</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FlashLcdBackLight &rArr; LZM_SetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsg
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenLcdBackLight
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
</UL>

<P><STRONG><a name="[495]"></a>FlashLcdBackLightFinish</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashLcdBackLightFinish
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
</UL>

<P><STRONG><a name="[447]"></a>OpenLcdBackLight</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OpenLcdBackLight &rArr; FlashLcdBackLight &rArr; LZM_SetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLcdBackLight
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowText_EvTask
</UL>

<P><STRONG><a name="[7d9]"></a>PublicConfirmAutoExit</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirmAll
</UL>

<P><STRONG><a name="[7da]"></a>SendShortMessage</STRONG> (Thumb, 72 bytes, Stack size 72 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowShortMessage
</UL>

<P><STRONG><a name="[7db]"></a>TaskShowShortMessage</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuGetHandle
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuResponse
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuShow
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendShortMessage
</UL>

<P><STRONG><a name="[7dc]"></a>TaskSystemParamSetDeviceID</STRONG> (Thumb, 484 bytes, Stack size 48 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPasteScreen
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAndCheckSystemDeviceID
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemDeviceID
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[7dd]"></a>Detection_Changed_Status</STRONG> (Thumb, 530 bytes, Stack size 16 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatus
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
</UL>
<BR>[Called By]<UL><LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuSystemInstallModel
</UL>

<P><STRONG><a name="[7de]"></a>TaskMenuSystemInstallModel</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowRect
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detection_Changed_Status
</UL>

<P><STRONG><a name="[be7]"></a>TaskMenuBeforeLockOne</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, taskmenu.o(.text), UNUSED)

<P><STRONG><a name="[be8]"></a>TaskMenuBeforeLockTwo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, taskmenu.o(.text), UNUSED)

<P><STRONG><a name="[7df]"></a>SaveCurSIMICcidNumberToE2Param</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = SaveCurSIMICcidNumberToE2Param &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOD_GetIccidBcdValue
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[df]"></a>TaskShowLogo</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = TaskShowLogo &rArr; ShowStartLogo &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunCountReset
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStartLogo
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetOperateTimer
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lzmsys.o(.text)
<LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[4aa]"></a>ShowStartLogo</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ShowStartLogo &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurentProductModel
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowLogo
</UL>

<P><STRONG><a name="[7e0]"></a>ReadInterfaceSwitchflg</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ReadInterfaceSwitchflg &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicSysParamterInit
</UL>

<P><STRONG><a name="[498]"></a>PublicSysParamterInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = PublicSysParamterInit &rArr; Message_ParameterInitialize &rArr; MessageFlashReadAndCheck &rArr; MessageReadAndCheckEventReport &rArr; EventReportDefaultValue &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_ParameterInitialize
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadInterfaceSwitchflg
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemBacklightFlag
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemPassWord
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TaskInitHook
</UL>

<P><STRONG><a name="[7e1]"></a>ReflashToReturnMainInterface</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCopyScreen
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLcdCopyFlag
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
</UL>

<P><STRONG><a name="[39c]"></a>GetShowMainInterfaceFlag</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetShowMainInterfaceFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowBigNumFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayString
</UL>

<P><STRONG><a name="[7e3]"></a>BrushAdministratorCardResponse</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordCorrect
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertStrToIP
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>

<P><STRONG><a name="[7e4]"></a>SystemAutoShowQuestion</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336 + Unknown Stack Size
<LI>Call Chain = SystemAutoShowQuestion &rArr; SystemAutoShowQuestionResponse &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[6a0]"></a>Question_DisposeRadioProtocol</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1204<LI>Call Chain = Question_DisposeRadioProtocol &rArr; NaviLcdSendCmdQuestionDisplay &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetCurOnlineStatus
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQuestionDisplay
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_SaveOneData
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetOperateTimer
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_QuestionDownload
</UL>

<P><STRONG><a name="[6a1]"></a>InfoService_DisposeRadioProtocol</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1196<LI>Call Chain = InfoService_DisposeRadioProtocol &rArr; NaviLcdSendCmdInfoService &rArr; PactSendCmdForNaviLcd &rArr; NaviLcdCommSendData &rArr; NaviLcdCommStartSendData &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEvTask
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetCurOnlineStatus
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdInfoService
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_SaveOneData
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_InformationService
</UL>

<P><STRONG><a name="[2e9]"></a>Task_GetCurSystemIsDeepFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, taskmenu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_IsInRunning
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_TimeTask
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_GetSubjoinInfoCurDeepVal
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_UpdatePram
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CheckSelectShow
</UL>

<P><STRONG><a name="[807]"></a>Task_GetCurSystemIsTurnSpeedFlag</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, taskmenu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_GetSubjoinInfoCurTurnSpeedVal
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_UpdatePram
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CheckSelectShow
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_TimeTask
</UL>

<P><STRONG><a name="[be9]"></a>InitTimerTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, taskschedule.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>SetTimerTask</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, taskschedule.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ParameterInitialize
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_OilProtocolCheck
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost_Init
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConfigGNSS
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_Turn_DisposeRadioProtocol
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_DisposeRadioProtocol
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlOil_TimeTask
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_OffOil
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_OpenOil
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeTerminalControl
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TaskMenuStart
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TimeTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_TimeTask
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SendTerminalLogout
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ParameterInitialize
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckForEnterStopMode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_TimeTask
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRoute
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_RecData
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketResendRequest
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SingleMemoryIndex
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MemoryUpload
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CameraPhoto
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CarControl
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegisterAck
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ParameterInitialize
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ParameterInitialize
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOnPower
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_EnableCalibration
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_AppInitialize
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Login
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Login
<LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_EnablePrint
<LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE4H
</UL>

<P><STRONG><a name="[487]"></a>ClrTimerTask</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, taskschedule.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TimeTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_TimeTask
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CheckForEnterStopMode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_TimeTask
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpStart
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Login
<LI><a href="#[a16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE0H
</UL>

<P><STRONG><a name="[4b1]"></a>TimerTaskScheduler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, taskschedule.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TimerTaskScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bea]"></a>InitEvTask</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, taskschedule.o(.text), UNUSED)

<P><STRONG><a name="[3da]"></a>SetEvTask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, taskschedule.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_RxIsr
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_DisposeRadioProtocol
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TelephoneCallback
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusAlarm_TimeTask
</UL>

<P><STRONG><a name="[4b2]"></a>EvTaskScheduler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, taskschedule.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EvTaskScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>TimerNopHandleTask</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, taskschedule.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[71]"></a>EvNopHandleTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, taskschedule.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[beb]"></a>SendCanData_EvTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, taskschedule.o(.text), UNUSED)

<P><STRONG><a name="[461]"></a>Temperature_PosEx</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Temperature_PosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
</UL>

<P><STRONG><a name="[7e5]"></a>Temperature_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Temperature_Init &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerOn
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_TimeTask
</UL>

<P><STRONG><a name="[7e6]"></a>Temperature_8900Send</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = Temperature_8900Send &rArr; EIExpand_PotocolSendData &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_ComRec
</UL>

<P><STRONG><a name="[5bd]"></a>Temperature_ComRec</STRONG> (Thumb, 268 bytes, Stack size 184 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2024 + Unknown Stack Size
<LI>Call Chain = Temperature_ComRec &rArr; Temperature_8900Send &rArr; EIExpand_PotocolSendData &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSelfDefine2Bit
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_8900Send
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeCommProtocolParse
</UL>

<P><STRONG><a name="[7e7]"></a>Temperature_ComSend</STRONG> (Thumb, 244 bytes, Stack size 72 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Temperature_ComSend &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSelfDefine2Bit
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_WriteBuff
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_DisposeRadioProtocol
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_TimeTask
</UL>

<P><STRONG><a name="[358]"></a>Temperature_DisposeRadioProtocol</STRONG> (Thumb, 52 bytes, Stack size 176 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = Temperature_DisposeRadioProtocol &rArr; Temperature_ComSend &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_ComSend
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_DisposeFunctionProtocol
</UL>

<P><STRONG><a name="[6b]"></a>Temperature_TimeTask</STRONG> (Thumb, 84 bytes, Stack size 160 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Temperature_TimeTask &rArr; Temperature_Init &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_ComSend
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[40c]"></a>Timer_Val</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetCycTimer
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_TimeTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl_task
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerTaskScheduler
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryChipSelfCheck
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KeyHandler
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Insert_KEYQueue
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TimerHandler
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetTimer
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowText_EvTask
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ClearAlarm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[ac2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_detect_tick
</UL>

<P><STRONG><a name="[814]"></a>Timer_ISR</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[7e9]"></a>IntoNextVoiceStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ttsdevapp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffExternal
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceInit
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceLoad
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStrToSend
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoicePlay
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceEnd
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
</UL>

<P><STRONG><a name="[7e8]"></a>TTSApp_TurnOffPower</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TTSApp_TurnOffPower &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSpeakerConrtolBit
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSDerv_CtrlTTSPower
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntoNextVoiceStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckRDYFlag
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckExtTtsTimeOut
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TimeStatusTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ttsdevapp.o(.text)
</UL>
<P><STRONG><a name="[7eb]"></a>TTSApp_TurnOnPower</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TTSApp_TurnOnPower &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSpeakerConrtolBit
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSDev_ResetTTS
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSDerv_CtrlTTSPower
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_Init
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffExternal
</UL>

<P><STRONG><a name="[7f0]"></a>TTSApp_StatusVoiceEnd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TTSApp_StatusVoiceEnd &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntoNextVoiceStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TimeStatusTask
</UL>

<P><STRONG><a name="[7f1]"></a>TTSApp_StatusVoicePlay</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TTSApp_StatusVoicePlay &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSta
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSpt
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntoNextVoiceStatus
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayExtTtsFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TimeStatusTask
</UL>

<P><STRONG><a name="[7f5]"></a>TTSApp_PackVoiceStrToSend</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = TTSApp_PackVoiceStrToSend &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Play
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSpt
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntoNextVoiceStatus
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStr
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayExtTtsFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceLoad
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ttsdevapp.o(.text)
</UL>
<P><STRONG><a name="[7f6]"></a>TTSApp_StatusVoiceLoad</STRONG> (Thumb, 304 bytes, Stack size 16 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248 + Unknown Stack Size
<LI>Call Chain = TTSApp_StatusVoiceLoad &rArr; TTSApp_PackVoiceStrToSend &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStrToSend
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntoNextVoiceStatus
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TimeStatusTask
</UL>

<P><STRONG><a name="[7f7]"></a>TTSApp_StatusVoiceInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TTSApp_StatusVoiceInit &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSpeakerConrtolBit
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntoNextVoiceStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TimeStatusTask
</UL>

<P><STRONG><a name="[118]"></a>TTSApp_TimeStatusTask</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = TTSApp_TimeStatusTask &rArr; TTSApp_StatusVoiceLoad &rArr; TTSApp_PackVoiceStrToSend &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_OnSta
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceInit
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceLoad
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoicePlay
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceEnd
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ttsdevapp.o(.text)
</UL>
<P><STRONG><a name="[7f8]"></a>PlayMulTTSVoiceBuffExternal</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PlayMulTTSVoiceBuffExternal &rArr; TTSApp_TurnOnPower &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_OnSta
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOnPower
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntoNextVoiceStatus
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuff
</UL>

<P><STRONG><a name="[7f9]"></a>PlayMulTTSVoiceBuffInternal</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSpeakerConrtolBit
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Type
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Play
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_OnSta
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntoNextVoiceStatus
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuff
</UL>

<P><STRONG><a name="[7fa]"></a>PlayMulTTSVoiceBuff</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSpt
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffExternal
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayExtTtsFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayMulTTSVoiceStrbase
</UL>

<P><STRONG><a name="[667]"></a>PlayMulTTSVoiceStr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayMulTTSVoiceStrbase
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
</UL>

<P><STRONG><a name="[7fc]"></a>PlayMulTTSVoiceAlarmStr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ttsdevapp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayMulTTSVoiceStrbase
</UL>

<P><STRONG><a name="[7fd]"></a>SetTtsVolumeIncr</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ttsdevapp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSpt
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayExtTtsFlag
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeIncr
</UL>

<P><STRONG><a name="[7fe]"></a>SetTtsVolumeDecr</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ttsdevapp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSpt
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayExtTtsFlag
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeDecr
</UL>

<P><STRONG><a name="[7ff]"></a>GetTtsVolume</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ttsdevapp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModTtsVolume
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSpt
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayExtTtsFlag
</UL>

<P><STRONG><a name="[800]"></a>TtsVolumeInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ttsdevapp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_Init
</UL>

<P><STRONG><a name="[801]"></a>TTS_GetPlayBusyFlag</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ttsdevapp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSta
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSpt
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayExtTtsFlag
</UL>

<P><STRONG><a name="[802]"></a>TTSApp_CheckExtTtsFlag</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = TTSApp_CheckExtTtsFlag &rArr; TTSApp_CheckPackVoiceStr &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckExtTtsTimeOut
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckPackVoiceStr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ttsdevapp.o(.text)
</UL>
<P><STRONG><a name="[803]"></a>TTSApp_CheckExtTtsTimeOut</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TTSApp_CheckExtTtsTimeOut &rArr; TTSApp_TurnOffPower &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckRDYFlag
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckExtTtsFlag
</UL>

<P><STRONG><a name="[119]"></a>TTSApp_CheckRDYFlag</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TTSApp_CheckRDYFlag &rArr; TTSApp_CheckExtTtsTimeOut &rArr; TTSApp_TurnOffPower &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckExtTtsTimeOut
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ttsdevapp.o(.text)
</UL>
<P><STRONG><a name="[804]"></a>TTS_Init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ttsdevapp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSpeakerConrtolBit
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSDev_UartInit
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TtsVolumeInit
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOnPower
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
</UL>

<P><STRONG><a name="[4d]"></a>TTS_TimeTask</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TTS_TimeTask &rArr; LZM_PublicTimerHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[805]"></a>TTSDev_UartInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ttsdevdrv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_Init
</UL>

<P><STRONG><a name="[7ee]"></a>TTSDerv_SendUartData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ttsdevdrv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStr
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckPackVoiceStr
</UL>

<P><STRONG><a name="[7ea]"></a>TTSDerv_CtrlTTSPower</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ttsdevdrv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOnPower
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOffPower
</UL>

<P><STRONG><a name="[7ec]"></a>TTSDev_ResetTTS</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ttsdevdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TTSDev_ResetTTS
</UL>
<BR>[Called By]<UL><LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TurnOnPower
</UL>

<P><STRONG><a name="[806]"></a>TurnSpeed_CheckSelectShow</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, turnspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = TurnSpeed_CheckSelectShow &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsTurnSpeedFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
</UL>

<P><STRONG><a name="[808]"></a>TurnSpeed_UpdatePram</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, turnspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TurnSpeed_UpdatePram &rArr; Public_WriteDataToFRAM &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsTurnSpeedFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_ParameterInitialize
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
</UL>

<P><STRONG><a name="[f5]"></a>TaskSystemTurnSpeedPulseNum</STRONG> (Thumb, 436 bytes, Stack size 32 bytes, turnspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskSystemTurnSpeedPulseNum &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_WriteDataToFRAM
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ReadDataFromFRAM
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_UpdatePram
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CheckSelectShow
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[809]"></a>TurnSpeed_ParameterInitialize</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, turnspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TurnSpeed_ParameterInitialize &rArr; TurnSpeed_UpdatePram &rArr; Public_WriteDataToFRAM &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_UpdatePram
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_TimeTask
</UL>

<P><STRONG><a name="[6bf]"></a>TurnSpeed_GetSubjoinInfoCurTurnSpeedVal</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, turnspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TurnSpeed_GetSubjoinInfoCurTurnSpeedVal
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsTurnSpeedFlag
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
</UL>

<P><STRONG><a name="[a89]"></a>TurnSpeed_InsertCurPulseVal</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, turnspeed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimIsr
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_CalInstantSpeed
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
</UL>

<P><STRONG><a name="[80a]"></a>TurnSpeed_CalcCurTurnSpeed</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, turnspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TurnSpeed_CalcCurTurnSpeed &rArr; __aeabi_f2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_TimeTask
</UL>

<P><STRONG><a name="[46a]"></a>TurnSpeed_GetCurTurnSpeed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, turnspeed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowTurnSpeedValue
</UL>

<P><STRONG><a name="[6d]"></a>TurnSpeed_TimeTask</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, turnspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TurnSpeed_TimeTask &rArr; TurnSpeed_ParameterInitialize &rArr; TurnSpeed_UpdatePram &rArr; Public_WriteDataToFRAM &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CalcCurTurnSpeed
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_ParameterInitialize
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_GetCurSystemIsTurnSpeedFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[2cf]"></a>COM_Init</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, usart_drive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig2
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRateInitialize
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_Init
</UL>

<P><STRONG><a name="[2d0]"></a>COM_NVIC_Config</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usart_drive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = COM_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRateInitialize
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_Init
</UL>

<P><STRONG><a name="[bec]"></a>GetUsartIrq</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usart_drive.o(.text), UNUSED)

<P><STRONG><a name="[2df]"></a>GetUsartStatus</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usart_drive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetUsartStatus &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_IRQHandler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[80d]"></a>ClearUsartStatus</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usart_drive.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>

<P><STRONG><a name="[2d8]"></a>GetUsartReceiveData</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usart_drive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetUsartReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_RxIsr
</UL>

<P><STRONG><a name="[2d1]"></a>SetUsartITConfig</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, usart_drive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SendData
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_TxIsr
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRateInitialize
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TxIsr
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_Init
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_SendData
</UL>

<P><STRONG><a name="[2dd]"></a>UsartSendData</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usart_drive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UsartSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_TxIsr
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TxIsr
</UL>

<P><STRONG><a name="[2cb]"></a>GetUsartPtr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usart_drive.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_putc
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRateInitialize
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRate
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRateEx
</UL>

<P><STRONG><a name="[5d0]"></a>COM2_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = COM2_Init &rArr; COMM_Initialize &rArr; COMM_SetBaudRateInitialize &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommParamInit
</UL>

<P><STRONG><a name="[80f]"></a>COM2_RxIsr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_RxIsr
</UL>

<P><STRONG><a name="[810]"></a>COM2_TxIsr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_TxIsr
</UL>

<P><STRONG><a name="[15f]"></a>COM2_WriteBuff</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, usart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_SentCmd
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_Protocol_Paramter
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_SendCmd
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_COM_Buf_Write
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommStartSendData
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_ComSend
</UL>

<P><STRONG><a name="[2c4]"></a>COM2_ReadBuff</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, usart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = COM2_ReadBuff &rArr; COMM_ReadData &rArr; LZM_QueueDataBatchDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdAutoToDisposeRecvData
</UL>

<P><STRONG><a name="[560]"></a>COM2_GetSendBusy</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = COM2_GetSendBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_GetSendBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNaviLcdCommBusy
</UL>

<P><STRONG><a name="[6e]"></a>Vss_TimeTask</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, vss.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Vss_TimeTask &rArr; SpeedFlagUpdatePram &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedFlagUpdatePram
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetInstantSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[95]"></a>NMI_Handler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = NMI_Handler &rArr; Lcd_DisplayString &rArr; LcdShowStrEx &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayString
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>HardFault_Handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HardFault_Handler &rArr; Lcd_DisplayString &rArr; LcdShowStrEx &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayString
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>MemManage_Handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = MemManage_Handler &rArr; Lcd_DisplayString &rArr; LcdShowStrEx &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayString
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>BusFault_Handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = BusFault_Handler &rArr; Lcd_DisplayString &rArr; LcdShowStrEx &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayString
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>UsageFault_Handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = UsageFault_Handler &rArr; Lcd_DisplayString &rArr; LcdShowStrEx &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayString
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>SysTick_Handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SysTick_Handler &rArr; ReadRtc &rArr; Gmtime
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRtc
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>WWDG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>PVD_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>RTC_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetITStatus
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTCAlarm_IRQHandler &rArr; SleepDeep_RTC_WKUP_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTC_WKUP_IRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>FLASH_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>RCC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[ae]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[bed]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[bee]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI9_5_IRQHandler &rArr; SleepDeep_ACC_EXTI_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ACC_EXTI_IRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b7]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b9]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>TIM2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM2_IRQHandler &rArr; USB_OTG_BSP_TimerIRQ &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimerIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[bb]"></a>TIM3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM3_IRQHandler &rArr; VDRPulse_TimIsr &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimIsr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[bc]"></a>TIM4_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = TIM4_IRQHandler &rArr; VDRDocimasy_Tim4Isr &rArr; VDRDocimasy_AckE1H &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_Tim4Isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[bf]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>SPI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>SPI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>USART1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART1_IRQHandler &rArr; VDRUsart_Isr &rArr; VDRUsart_TxIsr &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c4]"></a>USART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART2_IRQHandler &rArr; COMM_IRQHandler &rArr; COMM_TxIsr &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>USART3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USART3_IRQHandler &rArr; Usart3_Isr &rArr; Usart3_TxIsr &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = EXTI15_10_IRQHandler &rArr; VDRPulse_ExtiIsr &rArr; VDRPulse_CalInstantSpeed &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_ExtiIsr
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_ExtiIsr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[bef]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[bf0]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[bf1]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[bf2]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[bf3]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[bf4]"></a>ADC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[bf5]"></a>FSMC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[bf6]"></a>SDIO_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>TIM5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>SPI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>UART4_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UART4_IRQHandler &rArr; Gps_TxIsr &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUsartStatus
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_TxIsr
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_RxIsr
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OTG_FS_IRQHandler &rArr; USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[bf7]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CAN1_RX0_IRQHandler &rArr; Can_1_Rx_Isr &rArr; TransMean
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Rx_Isr
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_MessagePending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN1_RX1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_MessagePending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d7]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d8]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN2_RX1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_MessagePending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d9]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[753]"></a>SystemInit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[94]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[cf]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d1]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d2]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d4]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c8]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[ce]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b0c]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_cl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[835]"></a>USB_OTG_WritePacket</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_StartXfer
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
</UL>

<P><STRONG><a name="[849]"></a>USB_OTG_ReadPacket</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
</UL>

<P><STRONG><a name="[838]"></a>USB_OTG_SelectCore</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_SelectCore
</UL>
<BR>[Called By]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[822]"></a>USB_OTG_CoreInit</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USB_OTG_CoreInit &rArr; USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
</UL>
<BR>[Called By]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[83a]"></a>USB_OTG_EnableGlobalInt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_EnableGlobalInt
</UL>
<BR>[Called By]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[839]"></a>USB_OTG_DisableGlobalInt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_DisableGlobalInt
</UL>
<BR>[Called By]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[824]"></a>USB_OTG_FlushTxFifo</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_StopHost
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[825]"></a>USB_OTG_FlushRxFifo</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_OTG_FlushRxFifo &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_StopHost
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[826]"></a>USB_OTG_SetCurrentMode</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_OTG_SetCurrentMode &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[828]"></a>USB_OTG_GetMode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsDeviceMode
</UL>

<P><STRONG><a name="[827]"></a>USB_OTG_IsDeviceMode</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, usb_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetMode
</UL>

<P><STRONG><a name="[829]"></a>USB_OTG_IsHostMode</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_OTG_IsHostMode
</UL>
<BR>[Calls]<UL><LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[84a]"></a>USB_OTG_ReadCoreItr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[bf8]"></a>USB_OTG_ReadOtgItr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_core.o(.text), UNUSED)

<P><STRONG><a name="[82a]"></a>USB_OTG_EnableHostInt</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_EnableHostInt &rArr; USB_OTG_EnableCommonInt
</UL>
<BR>[Calls]<UL><LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableCommonInt
</UL>
<BR>[Called By]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[82e]"></a>USB_OTG_ReadHPRT0</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_ReadHPRT0
</UL>
<BR>[Called By]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
</UL>

<P><STRONG><a name="[82c]"></a>USB_OTG_DriveVbus</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_OTG_DriveVbus &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_DriveVBUS
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHPRT0
</UL>
<BR>[Called By]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[82f]"></a>USB_OTG_ResetPort</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHPRT0
</UL>
<BR>[Called By]<UL><LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_ResetPort
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
</UL>

<P><STRONG><a name="[832]"></a>USB_OTG_InitFSLSPClkSel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_InitFSLSPClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
</UL>

<P><STRONG><a name="[830]"></a>USB_OTG_CoreInitHost</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USB_OTG_CoreInitHost &rArr; USB_OTG_FlushRxFifo &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_ConfigVBUS
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitFSLSPClkSel
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableHostInt
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[834]"></a>USB_OTG_IsEvenFrame</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_StartXfer
</UL>

<P><STRONG><a name="[845]"></a>USB_OTG_ReadHostAllChannels_intr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[83d]"></a>USB_OTG_HC_Init</STRONG> (Thumb, 568 bytes, Stack size 28 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_OTG_HC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_HC_Init
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Open_Channel
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Modify_Channel
</UL>

<P><STRONG><a name="[833]"></a>USB_OTG_HC_StartXfer</STRONG> (Thumb, 502 bytes, Stack size 60 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsEvenFrame
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[841]"></a>USB_OTG_HC_Halt</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceDeInit
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
</UL>

<P><STRONG><a name="[842]"></a>USB_OTG_HC_DoPing</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_HC_DoPing
</UL>
<BR>[Called By]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
</UL>

<P><STRONG><a name="[836]"></a>USB_OTG_StopHost</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, usb_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
</UL>

<P><STRONG><a name="[837]"></a>HCD_Init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, usb_hcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HCD_Init &rArr; USB_OTG_CoreInitHost &rArr; USB_OTG_FlushRxFifo &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DisableGlobalInt
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableGlobalInt
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SelectCore
</UL>
<BR>[Called By]<UL><LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[863]"></a>HCD_GetCurrentSpeed</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usb_hcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HCD_GetCurrentSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[83b]"></a>HCD_ResetPort</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_hcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HCD_ResetPort &rArr; USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
</UL>
<BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[861]"></a>HCD_IsDeviceConnected</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Write10
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Read10
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity10
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ModeSense6
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_DecodeCSW
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[856]"></a>HCD_GetCurrentFrame</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[855]"></a>HCD_GetURB_State</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[87c]"></a>HCD_GetXferCnt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_DecodeCSW
</UL>

<P><STRONG><a name="[bf9]"></a>HCD_GetHCState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_hcd.o(.text), UNUSED)

<P><STRONG><a name="[83c]"></a>HCD_HC_Init</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, usb_hcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Init
</UL>

<P><STRONG><a name="[83e]"></a>HCD_SubmitRequest</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usb_hcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_IsocSendData
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_IsocReceiveData
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_InterruptSendData
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_InterruptReceiveData
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkReceiveData
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkSendData
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendSetup
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendData
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReceiveData
</UL>

<P><STRONG><a name="[81c]"></a>USBH_OTG_ISR_Handler</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadCoreItr
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_sof_ISR
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_Disconnect_ISR
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>USBH_Connected</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbh_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[7d]"></a>USBH_Disconnected</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbh_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[7b]"></a>USBH_SOF</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[84e]"></a>USBH_DeInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free_Channel
</UL>
<BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[850]"></a>USBH_Init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = USBH_Init &rArr; HCD_Init &rArr; USB_OTG_CoreInitHost &rArr; USB_OTG_FlushRxFifo &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_ConfigVBUS
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_AppInitialize
</UL>

<P><STRONG><a name="[853]"></a>USBH_HandleControl</STRONG> (Thumb, 544 bytes, Stack size 24 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = USBH_HandleControl &rArr; USBH_CtlSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetURB_State
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetCurrentFrame
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendSetup
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendData
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[865]"></a>USBH_ErrorHandle</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_ErrorHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[860]"></a>USBH_Process</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = USBH_Process &rArr; USBH_HandleEnum &rArr; USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_ResetPort
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetCurrentSpeed
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Open_Channel
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeAllocate_AllChannel
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Alloc_Channel
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ErrorHandle
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_AppTimeTask
</UL>

<P><STRONG><a name="[864]"></a>USBH_Open_Channel</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, usbh_hcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBH_Open_Channel &rArr; USB_OTG_HC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceInit
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[85b]"></a>USBH_Modify_Channel</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, usbh_hcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBH_Modify_Channel &rArr; USB_OTG_HC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[862]"></a>USBH_Alloc_Channel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbh_hcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_Alloc_Channel
</UL>
<BR>[Calls]<UL><LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetFreeChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceInit
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[84f]"></a>USBH_Free_Channel</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usbh_hcs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceDeInit
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
</UL>

<P><STRONG><a name="[866]"></a>USBH_DeAllocate_AllChannel</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usbh_hcs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[868]"></a>USBH_CtlReq</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SubmitSetupRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOTReset
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GETMaxLUN
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClrFeature
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetInterface
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetCfg
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetAddress
</UL>

<P><STRONG><a name="[854]"></a>USBH_CtlSendSetup</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USBH_CtlSendSetup &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[858]"></a>USBH_CtlSendData</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBH_CtlSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[857]"></a>USBH_CtlReceiveData</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBH_CtlReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[86a]"></a>USBH_BulkSendData</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[86b]"></a>USBH_BulkReceiveData</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[86c]"></a>USBH_InterruptReceiveData</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, usbh_ioreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[86d]"></a>USBH_InterruptSendData</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, usbh_ioreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[86e]"></a>USBH_IsocReceiveData</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, usbh_ioreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[86f]"></a>USBH_IsocSendData</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, usbh_ioreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[870]"></a>USBH_GetDescriptor</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_StringDesc
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_DevDesc
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_CfgDesc
</UL>

<P><STRONG><a name="[85a]"></a>USBH_Get_DevDesc</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBH_Get_DevDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseDevDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[873]"></a>USBH_GetNextDesc</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_GetNextDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>

<P><STRONG><a name="[85d]"></a>USBH_Get_CfgDesc</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBH_Get_CfgDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[85e]"></a>USBH_Get_StringDesc</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseStringDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[85c]"></a>USBH_SetAddress</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_SetAddress &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[85f]"></a>USBH_SetCfg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_SetCfg &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[877]"></a>USBH_SetInterface</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, usbh_stdreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>

<P><STRONG><a name="[878]"></a>USBH_ClrFeature</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBH_ClrFeature &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOT_Abort
</UL>

<P><STRONG><a name="[879]"></a>USBH_MSC_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usbh_msc_bot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_MSC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[87a]"></a>USBH_MSC_BOT_Abort</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usbh_msc_bot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBH_MSC_BOT_Abort &rArr; USBH_ClrFeature &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClrFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[87b]"></a>USBH_MSC_DecodeCSW</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, usbh_msc_bot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBH_MSC_DecodeCSW
</UL>
<BR>[Calls]<UL><LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetXferCnt
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[87d]"></a>USBH_MSC_HandleBOTXfer</STRONG> (Thumb, 866 bytes, Stack size 32 bytes, usbh_msc_bot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetURB_State
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_DecodeCSW
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOT_Abort
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkReceiveData
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[881]"></a>USBH_MSC_ErrorHandle</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, usbh_msc_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[885]"></a>disk_initialize</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = disk_initialize &rArr; SD_Initialize &rArr; SD_SendCmd &rArr; SD_Select &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[8cf]"></a>disk_status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[886]"></a>disk_read</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = disk_read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Read10
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[888]"></a>disk_write</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Write10
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[88a]"></a>disk_ioctl</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = disk_ioctl &rArr; SD_GetSectorCount &rArr; SD_GetCSD &rArr; SD_SendCmd &rArr; SD_Select &rArr; SD_WaitReady &rArr; SD_SPI_ReadWriteByte &rArr; SPIx_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_Delay_uS
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetSectorCount
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
</UL>
<BR>[Called By]<UL><LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[880]"></a>USBH_MSC_TestUnitReady</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_TestUnitReady
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[882]"></a>USBH_MSC_ReadCapacity10</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_ReadCapacity10
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[883]"></a>USBH_MSC_ModeSense6</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_ModeSense6
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[884]"></a>USBH_MSC_RequestSense</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_RequestSense
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[889]"></a>USBH_MSC_Write10</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_MSC_Write10
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[887]"></a>USBH_MSC_Read10</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBH_MSC_Read10
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[88b]"></a>USB_ReadUsbUpdataFlag</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = USB_ReadUsbUpdataFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_AppInitialize
</UL>

<P><STRONG><a name="[88c]"></a>USB_SetUsbUpdataFlag</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usb_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = USB_SetUsbUpdataFlag &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_PromptStatusChange
</UL>

<P><STRONG><a name="[88d]"></a>USB_ClearUsbUpdataFlag</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = USB_ClearUsbUpdataFlag &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_PromptStatusChange
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_app.o(.text)
</UL>
<P><STRONG><a name="[bfa]"></a>USB_GetReadUsbUpdataFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_app.o(.text), UNUSED)

<P><STRONG><a name="[757]"></a>USB_AppInitialize</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usb_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = USB_AppInitialize &rArr; USB_ReadUsbUpdataFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadUsbUpdataFlag
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[88e]"></a>Usb_PromptStatusChange</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, usb_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Usb_PromptStatusChange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClearUsbUpdataFlag
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetUsbUpdataFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_SetCurrentUsbStatus
</UL>

<P><STRONG><a name="[88f]"></a>Usb_SetCurrentUsbStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usb_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Usb_SetCurrentUsbStatus &rArr; Usb_PromptStatusChange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_PromptStatusChange
</UL>
<BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_FindSDcardFileAndSaveToUdisk
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsbDiskApp
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_MSC_Application
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_EnumerationDone
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_DeviceDisconnected
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsb
</UL>

<P><STRONG><a name="[597]"></a>Usb_FindSDcardFileAndSaveToUdisk</STRONG> (Thumb, 132 bytes, Stack size 304 bytes, usb_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2956 + Unknown Stack Size
<LI>Call Chain = Usb_FindSDcardFileAndSaveToUdisk &rArr; USB_USR_WriterDataToUsb &rArr; USB_USR_ReadAndWriteOnefileToUsb &rArr; USB_USR_WriterDataToUsbDiskApp &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsb
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_CheckInsertUsbDisk
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_SetCurrentUsbStatus
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeExportDataToUsbDisk
</UL>

<P><STRONG><a name="[40]"></a>Usb_AppTimeTask</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usb_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Usb_AppTimeTask &rArr; USBH_Process &rArr; USBH_HandleEnum &rArr; USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicTimerHandler
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[851]"></a>USB_OTG_BSP_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_BSP_Init &rArr; USB_OTG_BSP_TimeInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[852]"></a>USB_OTG_BSP_EnableInterrupt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_BSP_EnableInterrupt &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[82d]"></a>USB_OTG_BSP_DriveVBUS</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
</UL>

<P><STRONG><a name="[831]"></a>USB_OTG_BSP_ConfigVBUS</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[821]"></a>USB_OTG_BSP_uDelay</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_OTG_BSP_uDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
</UL>

<P><STRONG><a name="[823]"></a>USB_OTG_BSP_mDelay</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_OTG_BSP_mDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_MSC_Application
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[815]"></a>USB_OTG_BSP_TimerIRQ</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_BSP_TimerIRQ &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[82]"></a>USBH_USR_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[84]"></a>USBH_USR_DeviceAttached</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[93]"></a>USBH_USR_UnrecoveredError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[86]"></a>USBH_USR_DeviceDisconnected</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = USBH_USR_DeviceDisconnected &rArr; Usb_SetCurrentUsbStatus &rArr; Usb_PromptStatusChange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_SetCurrentUsbStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[85]"></a>USBH_USR_ResetDevice</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[88]"></a>USBH_USR_DeviceSpeedDetected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[89]"></a>USBH_USR_Device_DescAvailable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[8a]"></a>USBH_USR_DeviceAddressAssigned</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[8b]"></a>USBH_USR_Configuration_DescAvailable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[8c]"></a>USBH_USR_Manufacturer_String</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[8d]"></a>USBH_USR_Product_String</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[8e]"></a>USBH_USR_SerialNum_String</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[8f]"></a>USBH_USR_EnumerationDone</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = USBH_USR_EnumerationDone &rArr; Usb_SetCurrentUsbStatus &rArr; Usb_PromptStatusChange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_SetCurrentUsbStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[92]"></a>USBH_USR_DeviceNotSupported</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[90]"></a>USBH_USR_UserInput</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[87]"></a>USBH_USR_OverCurrentDetected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[27c]"></a>ff_NameConver</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ff_NameConver
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateStore
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAVWithID
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEGWithID
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAV
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEG
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileRecord
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSDFile
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRestKByte
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSignNum
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadAndWriteOnefileToUsb
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataGpsMode
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainIp
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainApn
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackupIp
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackApn
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataTCPPort
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataUDPPort
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask2
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
</UL>

<P><STRONG><a name="[89d]"></a>USB_ReadAndUpdataGpsMode</STRONG> (Thumb, 288 bytes, Stack size 776 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1652<LI>Call Chain = USB_ReadAndUpdataGpsMode &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[8a8]"></a>USB_UpdateZhiKu</STRONG> (Thumb, 206 bytes, Stack size 1104 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1980<LI>Call Chain = USB_UpdateZhiKu &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[91]"></a>USBH_USR_MSC_Application</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2004 + Unknown Stack Size
<LI>Call Chain = USBH_USR_MSC_Application &rArr; USB_USR_CurrentApplication &rArr; USB_USR_ReadDataForUpdataApp &rArr; USB_UpdateZhiKu &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_CurrentApplication
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_SetCurrentUsbStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[4c0]"></a>ff_NameForward</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
</UL>

<P><STRONG><a name="[83]"></a>USBH_USR_DeInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[890]"></a>USB_USR_CheckInsertUsbDisk</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_FindSDcardFileAndSaveToUdisk
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsb
</UL>

<P><STRONG><a name="[8af]"></a>USB_USR_DelayUs</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsbDiskApp
</UL>

<P><STRONG><a name="[8ae]"></a>USB_USR_WriterDataToUsbDiskApp</STRONG> (Thumb, 222 bytes, Stack size 1624 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2500<LI>Call Chain = USB_USR_WriterDataToUsbDiskApp &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_DelayUs
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_SetCurrentUsbStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadAndWriteOnefileToUsb
</UL>

<P><STRONG><a name="[8b0]"></a>USB_USR_ReadAndWriteOnefileToUsb</STRONG> (Thumb, 288 bytes, Stack size 112 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2612 + Unknown Stack Size
<LI>Call Chain = USB_USR_ReadAndWriteOnefileToUsb &rArr; USB_USR_WriterDataToUsbDiskApp &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsbDiskApp
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsb
</UL>

<P><STRONG><a name="[891]"></a>USB_USR_WriterDataToUsb</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2652 + Unknown Stack Size
<LI>Call Chain = USB_USR_WriterDataToUsb &rArr; USB_USR_ReadAndWriteOnefileToUsb &rArr; USB_USR_WriterDataToUsbDiskApp &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadAndWriteOnefileToUsb
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_CheckInsertUsbDisk
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_SetCurrentUsbStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_FindSDcardFileAndSaveToUdisk
</UL>

<P><STRONG><a name="[8b1]"></a>get_fattime</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, fattime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_fattime
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[8ba]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>

<P><STRONG><a name="[8b5]"></a>get_fat</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = get_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[8b6]"></a>put_fat</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[8be]"></a>gen_numname</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gen_numname &rArr; mem_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[758]"></a>f_mount</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_MSC_Application
</UL>

<P><STRONG><a name="[27d]"></a>f_open</STRONG> (Thumb, 370 bytes, Stack size 496 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 876<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateStore
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAVWithID
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEGWithID
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileRecord
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSignNum
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsbDiskApp
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataGpsMode
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainIp
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainApn
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackupIp
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackApn
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataTCPPort
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataUDPPort
<LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveVerifyCode
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask2
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
</UL>

<P><STRONG><a name="[4b8]"></a>f_read</STRONG> (Thumb, 476 bytes, Stack size 64 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAVWithID
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEGWithID
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFileSD
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileRecord
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsbDiskApp
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataGpsMode
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainIp
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainApn
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackupIp
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackApn
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataTCPPort
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataUDPPort
<LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveVerifyCode
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask2
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
</UL>

<P><STRONG><a name="[27e]"></a>f_write</STRONG> (Thumb, 544 bytes, Stack size 64 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateStore
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsbDiskApp
<LI><a href="#[a99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveBlockNum
<LI><a href="#[a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveNoPacketData
<LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SavePacketData
<LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveVerifyCode
</UL>

<P><STRONG><a name="[8d2]"></a>f_sync</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[27f]"></a>f_close</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = f_close &rArr; f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateStore
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAVWithID
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEGWithID
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileRecord
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSignNum
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsbDiskApp
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainIp
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainApn
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackupIp
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackApn
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataTCPPort
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataUDPPort
<LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveVerifyCode
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask2
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
</UL>

<P><STRONG><a name="[bfb]"></a>f_chdrive</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)

<P><STRONG><a name="[8d3]"></a>f_chdir</STRONG> (Thumb, 104 bytes, Stack size 464 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[4b7]"></a>f_lseek</STRONG> (Thumb, 734 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchFileSD
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileRecord
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveVerifyCode
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask2
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
</UL>

<P><STRONG><a name="[4b5]"></a>f_opendir</STRONG> (Thumb, 114 bytes, Stack size 440 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAV
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEG
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
</UL>

<P><STRONG><a name="[4bf]"></a>f_readdir</STRONG> (Thumb, 100 bytes, Stack size 432 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
</UL>

<P><STRONG><a name="[8d4]"></a>f_stat</STRONG> (Thumb, 62 bytes, Stack size 472 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>

<P><STRONG><a name="[53e]"></a>f_getfree</STRONG> (Thumb, 276 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = f_getfree &rArr; chk_mounted &rArr; check_fs &rArr; disk_read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRestKByte
</UL>

<P><STRONG><a name="[8d5]"></a>f_truncate</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[4c2]"></a>f_unlink</STRONG> (Thumb, 202 bytes, Stack size 512 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 868<LI>Call Chain = f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
</UL>

<P><STRONG><a name="[4b6]"></a>f_mkdir</STRONG> (Thumb, 402 bytes, Stack size 488 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 868<LI>Call Chain = f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSDFile
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
</UL>

<P><STRONG><a name="[8d6]"></a>f_chmod</STRONG> (Thumb, 100 bytes, Stack size 488 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[8d7]"></a>f_utime</STRONG> (Thumb, 102 bytes, Stack size 480 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[8d8]"></a>f_rename</STRONG> (Thumb, 310 bytes, Stack size 544 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>

<P><STRONG><a name="[8d9]"></a>f_mkfs</STRONG> (Thumb, 1572 bytes, Stack size 96 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[8da]"></a>f_gets</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[8db]"></a>f_putc</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Called By]<UL><LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
</UL>

<P><STRONG><a name="[8dc]"></a>f_puts</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
</UL>

<P><STRONG><a name="[8dd]"></a>f_printf</STRONG> (Thumb, 696 bytes, Stack size 104 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
</UL>

<P><STRONG><a name="[8ca]"></a>ff_convert</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ccsbcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[8bd]"></a>ff_wtoupper</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ccsbcs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[70e]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiInit
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimeInit
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
</UL>

<P><STRONG><a name="[25d]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_NVIC_Config
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_InitExit
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiInit
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Init
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimeInit
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Init
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
<LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitTim3
<LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitExti10
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti10
<LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti14
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>

<P><STRONG><a name="[751]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[bfc]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[bfd]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[198]"></a>ADC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
</UL>

<P><STRONG><a name="[185]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[bfe]"></a>ADC_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue_two
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[187]"></a>ADC_DMACmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[199]"></a>ADC_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
</UL>

<P><STRONG><a name="[189]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[18a]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[18b]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[18c]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[18d]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue_two
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[bff]"></a>ADC_GetSoftwareStartConvStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c00]"></a>ADC_DiscModeChannelCountConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c01]"></a>ADC_DiscModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue_two
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[c02]"></a>ADC_ExternalTrigConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[19e]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue_two
</UL>

<P><STRONG><a name="[c03]"></a>ADC_GetDualModeConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c04]"></a>ADC_AutoInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c05]"></a>ADC_InjectedDiscModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c06]"></a>ADC_ExternalTrigInjectedConvConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c07]"></a>ADC_ExternalTrigInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c08]"></a>ADC_SoftwareStartInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c09]"></a>ADC_GetSoftwareStartInjectedConvCmdStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c0a]"></a>ADC_InjectedChannelConfig</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c0b]"></a>ADC_InjectedSequencerLengthConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c0c]"></a>ADC_SetInjectedOffset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c0d]"></a>ADC_GetInjectedConversionValue</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c0e]"></a>ADC_AnalogWatchdogCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c0f]"></a>ADC_AnalogWatchdogThresholdsConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c10]"></a>ADC_AnalogWatchdogSingleChannelConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c11]"></a>ADC_TempSensorVrefintCmd</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[19d]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue_two
</UL>

<P><STRONG><a name="[19c]"></a>ADC_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue_two
</UL>

<P><STRONG><a name="[c12]"></a>ADC_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[c13]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[6fc]"></a>BKP_DeInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f10x_bkp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_BackupResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[c14]"></a>BKP_TamperPinLevelConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[708]"></a>BKP_TamperPinCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
</UL>

<P><STRONG><a name="[c15]"></a>BKP_ITConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[709]"></a>BKP_RTCOutputConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
</UL>

<P><STRONG><a name="[c16]"></a>BKP_SetRTCCalibrationValue</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[707]"></a>BKP_WriteBackupRegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_bkp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
</UL>

<P><STRONG><a name="[706]"></a>BKP_ReadBackupRegister</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f10x_bkp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
</UL>

<P><STRONG><a name="[c17]"></a>BKP_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[c18]"></a>BKP_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[c19]"></a>BKP_GetITStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[c1a]"></a>BKP_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[2ac]"></a>CAN_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Baud_Init
</UL>

<P><STRONG><a name="[2ae]"></a>CAN_Init</STRONG> (Thumb, 276 bytes, Stack size 12 bytes, stm32f10x_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAN_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Baud_Init
</UL>

<P><STRONG><a name="[2aa]"></a>CAN_FilterInit</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, stm32f10x_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_FilterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_1_ID_Filter
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Mask_Init
</UL>

<P><STRONG><a name="[2ad]"></a>CAN_StructInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Baud_Init
</UL>

<P><STRONG><a name="[c1b]"></a>CAN_SlaveStartBank</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[2b0]"></a>CAN_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Init
</UL>

<P><STRONG><a name="[c1c]"></a>CAN_Transmit</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[c1d]"></a>CAN_TransmitStatus</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[c1e]"></a>CAN_CancelTransmit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[8e0]"></a>CAN_FIFORelease</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Receive
</UL>

<P><STRONG><a name="[81d]"></a>CAN_MessagePending</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX1_IRQHandler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX1_IRQHandler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[2b2]"></a>CAN_Receive</STRONG> (Thumb, 234 bytes, Stack size 12 bytes, stm32f10x_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAN_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_FIFORelease
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Rx_Isr
</UL>

<P><STRONG><a name="[c1f]"></a>CAN_DBGFreeze</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[c20]"></a>CAN_Sleep</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[c21]"></a>CAN_WakeUp</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[c22]"></a>CAN_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[c23]"></a>CAN_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[8e1]"></a>CAN_GetITStatus</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, stm32f10x_can.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckITStatus
</UL>

<P><STRONG><a name="[c24]"></a>CAN_ClearITPendingBit</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)

<P><STRONG><a name="[192]"></a>DMA_DeInit</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Dma_Config
</UL>

<P><STRONG><a name="[193]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Dma_Config
</UL>

<P><STRONG><a name="[c25]"></a>DMA_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>DMA_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Dma_Config
</UL>

<P><STRONG><a name="[c26]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c27]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c28]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c29]"></a>DMA_ClearFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2a]"></a>DMA_GetITStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2b]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[c2c]"></a>EXTI_DeInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_InitExit
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiDisable
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiEnable
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_PVDInit
<LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitExti10
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti10
<LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti14
</UL>

<P><STRONG><a name="[75c]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_PVDInit
</UL>

<P><STRONG><a name="[c2d]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[c2e]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[c2f]"></a>EXTI_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[735]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ACC_EXTI_IRQ
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[25e]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_InitExit
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ACC_EXTI_IRQ
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTC_WKUP_IRQ
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiDisable
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiEnable
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_ExtiIsr
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_ExtiIsr
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[8e3]"></a>GPIO_DeInit</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[8e4]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[190]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Gpio_Config
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_Init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_InitExit
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_Init
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_CLK_OUT
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_IN
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_OUT
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInInit
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutInit
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_InitIO
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_IoInit
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerIoInit
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_DeInit
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ResetIoInit
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiInit
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Init
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Init
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SW_Init
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Init
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_Init
<LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_io_init
<LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitExti10
<LI><a href="#[a1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitGpioPB14
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti10
<LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti14
</UL>

<P><STRONG><a name="[ac9]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_io_init
</UL>

<P><STRONG><a name="[3c9]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InByte
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proce_Mod
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_ReadByte
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckAck
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_CheckSdOnOff
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_GetAccPortInValue
<LI><a href="#[9fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_IsInsert
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_ReadRing
<LI><a href="#[ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_printer
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tp_paper_detect
</UL>

<P><STRONG><a name="[c30]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[5e8]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_GetOilWayStatus
<LI><a href="#[ad1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_heat_tick
<LI><a href="#[aca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl_tick
</UL>

<P><STRONG><a name="[c31]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[29f]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_Init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_SendData
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstCard
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mod
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop_Comm
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Comm
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutByte
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InByte
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_Init
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proce_Mod
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_On
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Start
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendNAck
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendByte
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendAck
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_ReadByte
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckAck
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadStatusRegister
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_InitIO
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_CtrlOilWay
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerOn
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DisSelect
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_Init
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_AllUnprotect
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_ExtiIsr
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_Tim4Isr
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SW_Init
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetDTR
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetActive
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetPower
<LI><a href="#[abe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_on
<LI><a href="#[aa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_print
<LI><a href="#[ad1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_heat_tick
<LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_step_tick
<LI><a href="#[aca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl_tick
<LI><a href="#[acc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_port_send_byte
<LI><a href="#[ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_ptr
</UL>

<P><STRONG><a name="[298]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_TxIsr
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Stop
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstCard
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mod
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop_Comm
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Comm
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutByte
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InByte
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_Init
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Proce_Mod
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_On
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_Start
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendNAck
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendByte
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_SendAck
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_ReadByte
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_I2C_CheckAck
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadStatusRegister
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_CtrlOilWay
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Select
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_StartReadSequence
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_AllUnprotect
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_ExtiIsr
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_Tim4Isr
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetDTR
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetActive
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetPower
<LI><a href="#[abf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_off
<LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_io_init
<LI><a href="#[aaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_ptr_timer
<LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
<LI><a href="#[aa9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_print
<LI><a href="#[ad1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_heat_tick
<LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_step_tick
<LI><a href="#[aca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl_tick
<LI><a href="#[acc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_port_send_byte
<LI><a href="#[ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_ptr
</UL>

<P><STRONG><a name="[272]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleCheck
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateCheck
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StatePhoto
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateTiming
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_PowerOnDetectMainPower
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteMicConrtolBit
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_OpenAllUserPower
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CloseAllUserPower
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_TimeTask
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
</UL>

<P><STRONG><a name="[c32]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c33]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c34]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c35]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Init
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[80c]"></a>GPIO_PinRemapConfig2</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinRemapConfig2
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
</UL>

<P><STRONG><a name="[25b]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_InitExit
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiDisable
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiEnable
<LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitExti10
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti10
<LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti14
</UL>

<P><STRONG><a name="[c36]"></a>GPIO_ETH_MediaInterfaceConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c37]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)

<P><STRONG><a name="[c38]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)

<P><STRONG><a name="[c39]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)

<P><STRONG><a name="[1b4]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetXorVerify
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Erase
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Erase
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_Mymemcpy
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_EraseFlash
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_MdyDataInFlash
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_EraseBlindArea
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_EraseFlashArea
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Initialize
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Idle_Sta
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCmd
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetResponse
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSignNum
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryChipSelfCheck
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_WriterDataToUsbDiskApp
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseUpdataFlashArea
<LI><a href="#[a07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_EraseFlashArea
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>

<P><STRONG><a name="[c3a]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)

<P><STRONG><a name="[c3b]"></a>IWDG_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)

<P><STRONG><a name="[8e5]"></a>PWR_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[6fb]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[75b]"></a>PWR_PVDCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_PVDInit
</UL>

<P><STRONG><a name="[75a]"></a>PWR_PVDLevelConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_PVDInit
</UL>

<P><STRONG><a name="[c3c]"></a>PWR_WakeUpPinCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[721]"></a>PWR_EnterSTOPMode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f10x_pwr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWR_EnterSTOPMode
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
</UL>

<P><STRONG><a name="[c3d]"></a>PWR_EnterSTANDBYMode</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[731]"></a>PWR_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTC_WKUP_IRQ
</UL>

<P><STRONG><a name="[c3e]"></a>PWR_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[c3f]"></a>RCC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[71a]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[6fe]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[71b]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[c40]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c41]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c42]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[71d]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[c43]"></a>RCC_PREDIV1Config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c44]"></a>RCC_PREDIV2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c45]"></a>RCC_PLL2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[71c]"></a>RCC_PLL2Cmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[c46]"></a>RCC_PLL3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c47]"></a>RCC_PLL3Cmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[71e]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[71f]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[c48]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c49]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c4a]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c4b]"></a>RCC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c4c]"></a>RCC_OTGFSCLKConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
</UL>

<P><STRONG><a name="[c4d]"></a>RCC_I2S2CLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c4e]"></a>RCC_I2S3CLKConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6fd]"></a>RCC_LSEConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[c4f]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6ff]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[700]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[754]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 422 bytes, Stack size 24 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
</UL>

<P><STRONG><a name="[196]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Init
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCrcInit
</UL>

<P><STRONG><a name="[18f]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriveAdc_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Gpio_Config
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_Init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_InitExit
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_Init
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_CLK_OUT
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_IN
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_SDA_OUT
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInInit
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutInit
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_Init
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_InitIO
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OilControl_IoInit
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdPowerIoInit
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_DeInit
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_UsartIntoSleep
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ResetIoInit
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_PortCtrlAccExtiInit
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Init
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Init
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SW_Init
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Init
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_Init
<LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_io_init
<LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitExti10
<LI><a href="#[a1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitGpioPB14
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti10
<LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti14
</UL>

<P><STRONG><a name="[292]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Init
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimeInit
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Init
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
<LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitTim3
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>

<P><STRONG><a name="[c50]"></a>RCC_AHBPeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[724]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_UsartIntoSleep
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[8df]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_DeInit
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_DeInit
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[8de]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
</UL>

<P><STRONG><a name="[c51]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c52]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[70a]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
</UL>

<P><STRONG><a name="[c53]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c54]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[703]"></a>RTC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTC_WKUP_IRQ
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTCWakeUpDisable
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[8e6]"></a>RTC_EnterConfigMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
</UL>

<P><STRONG><a name="[8e7]"></a>RTC_ExitConfigMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
</UL>

<P><STRONG><a name="[1b1]"></a>RTC_GetCounter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetFileName
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_WriteParameter
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_SchedulePhoto
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StatePhoto
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetConvertCurTime
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_EvTask
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EN_GnssAreaEx
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndUploadData
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadGB2313_WriteToFlash
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRtc
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_PowerOnHandle
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckInRoadSegmentTask
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckChangeRoadSegmentTask
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckDriverTime
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MemoryIndex
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckCurTimeIsInEarlyAlarmTimeRange
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowDialing
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CheckMonthStartTime
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimeTask
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_TimeTask
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_TimeTask
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_TimeTask
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeOk
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Chk_Run
<LI><a href="#[a67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_Init
<LI><a href="#[a63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Init
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleAlarm
<LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
<LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOtherDrivers
<LI><a href="#[a49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleRunUnlogin
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
<LI><a href="#[a2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_CalSecondSpeed
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_SaveCurrentSpeedStatus
<LI><a href="#[a29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WriteStop
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
<LI><a href="#[a26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePositionNoChange
</UL>

<P><STRONG><a name="[6f9]"></a>RTC_SetCounter</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtc
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_PowerOnHandle
</UL>

<P><STRONG><a name="[704]"></a>RTC_SetPrescaler</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetPrescaler
</UL>
<BR>[Calls]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[712]"></a>RTC_SetAlarm</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_StopMode
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
</UL>

<P><STRONG><a name="[c55]"></a>RTC_GetDivider</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[702]"></a>RTC_WaitForLastTask</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTC_WKUP_IRQ
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[701]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_ConfigRTCWakeUp
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Configuration
</UL>

<P><STRONG><a name="[c56]"></a>RTC_GetFlagStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[c57]"></a>RTC_ClearFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[730]"></a>RTC_GetITStatus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTC_WKUP_IRQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[732]"></a>RTC_ClearITPendingBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_RTC_WKUP_IRQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[740]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_DeInit
</UL>

<P><STRONG><a name="[73a]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_SetSpeed
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
</UL>

<P><STRONG><a name="[8e8]"></a>I2S_Init</STRONG> (Thumb, 292 bytes, Stack size 56 bytes, stm32f10x_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[c58]"></a>SPI_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c59]"></a>I2S_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[73b]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_SetSpeed
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_LowLevel_DeInit
</UL>

<P><STRONG><a name="[c5a]"></a>I2S_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c5b]"></a>SPI_I2S_ITConfig</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c5c]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[738]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendHalfWord
</UL>

<P><STRONG><a name="[739]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendHalfWord
</UL>

<P><STRONG><a name="[c5d]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c5e]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c5f]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c60]"></a>SPI_TransmitCRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c61]"></a>SPI_CalculateCRC</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c62]"></a>SPI_GetCRC</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c63]"></a>SPI_GetCRCPolynomial</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c64]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[737]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendByte
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_SendHalfWord
</UL>

<P><STRONG><a name="[c65]"></a>SPI_I2S_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c66]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c67]"></a>SPI_I2S_ClearITPendingBit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[8e9]"></a>TIM_DeInit</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
</UL>

<P><STRONG><a name="[896]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetTime
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
<LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitTim3
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>

<P><STRONG><a name="[c68]"></a>TIM_OC1Init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c69]"></a>TIM_OC2Init</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c6a]"></a>TIM_OC3Init</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c6b]"></a>TIM_OC4Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[8f2]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[8f0]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[8ee]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[8ec]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[8ea]"></a>TIM_ICInit</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[8f3]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[c6c]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[ad4]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
</UL>

<P><STRONG><a name="[c6d]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c6e]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c6f]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[894]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimIsr
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimerIRQ
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Delay
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetTime
<LI><a href="#[aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ptr_timer
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
<LI><a href="#[aaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_ptr_timer
<LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitTim3
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
<LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE4H
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>

<P><STRONG><a name="[c70]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[895]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetTime
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
<LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitTim3
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>

<P><STRONG><a name="[c71]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c72]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c73]"></a>TIM_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c74]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[8f5]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[8f4]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[8f6]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[8f8]"></a>TIM_ETRConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[8f7]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[8f9]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[89a]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetTime
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
<LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitTim3
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>

<P><STRONG><a name="[c75]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c76]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c77]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c78]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c79]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c7a]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[898]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetTime
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
</UL>

<P><STRONG><a name="[c7b]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c7c]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c7d]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c7e]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c7f]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c80]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c81]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c82]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c83]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c84]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c85]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c86]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c87]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c88]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c89]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c8a]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c8b]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c8c]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c8d]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c8e]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c8f]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c90]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c91]"></a>TIM_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c92]"></a>TIM_CCxNCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c93]"></a>TIM_SelectOCxM</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c94]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c95]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c96]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c97]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c98]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c99]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c9a]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[899]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimIsr
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_Tim4Isr
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetTime
<LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitTim3
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>

<P><STRONG><a name="[ad5]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
</UL>

<P><STRONG><a name="[c9b]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c9c]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c9d]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c9e]"></a>TIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c9f]"></a>TIM_SetClockDivision</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[ca0]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[ca1]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[ca2]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[ca3]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[a88]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
</UL>

<P><STRONG><a name="[ca4]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[ca5]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[ad7]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[89c]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimIsr
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_Tim4Isr
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimerIRQ
</UL>

<P><STRONG><a name="[897]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimIsr
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_Tim4Isr
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_TimerIRQ
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetTime
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[2ce]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRateInitialize
</UL>

<P><STRONG><a name="[294]"></a>USART_Init</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRate
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_SetBaudRateEx
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Init
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Init
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Init
</UL>

<P><STRONG><a name="[ca6]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[ca7]"></a>USART_ClockInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[ca8]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[296]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Init
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Init
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Init
</UL>

<P><STRONG><a name="[295]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsartITConfig
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_TxIsr
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_SendData
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Isr
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Init
<LI><a href="#[a92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_TxIsr
<LI><a href="#[a22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_SendData
</UL>

<P><STRONG><a name="[ca9]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[caa]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cab]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cac]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cad]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cae]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[29a]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSendData
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_TxIsr
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[a92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_TxIsr
</UL>

<P><STRONG><a name="[29c]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUsartReceiveData
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_RxIsr
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_RxIsr
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[a93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_RxIsr
</UL>

<P><STRONG><a name="[caf]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cb0]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cb1]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cb2]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cb3]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cb4]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cb5]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[cb6]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[81b]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[cb7]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[29e]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUsartStatus
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_Isr
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_RxIsr
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Isr
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[80e]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUsartStatus
</UL>

<P><STRONG><a name="[911]"></a>Modem_Api_PortLock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Ftp
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Close
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
</UL>

<P><STRONG><a name="[913]"></a>Modem_Api_PortFree</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Ftp
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Close
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
</UL>

<P><STRONG><a name="[90f]"></a>Modem_Api_PortIs</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Ftp
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Close
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
</UL>

<P><STRONG><a name="[8fa]"></a>Modem_Api_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = Modem_Api_Init &rArr; Net_Second_Init &rArr; Net_Second_Value &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Init
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
</UL>

<P><STRONG><a name="[8fd]"></a>Modem_Api_Start</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Init
</UL>

<P><STRONG><a name="[8ff]"></a>Modem_Api_Rst</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Rst
</UL>
<BR>[Calls]<UL><LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_SocRun
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Run
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
</UL>

<P><STRONG><a name="[900]"></a>Modem_Api_Off</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem_api.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Delay
</UL>

<P><STRONG><a name="[902]"></a>Modem_Api_On</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, modem_api.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
</UL>

<P><STRONG><a name="[903]"></a>Modem_Api_CallSms</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1728 + Unknown Stack Size
<LI>Call Chain = Modem_Api_CallSms &rArr; Net_Other_SmsCall &rArr; Net_Other_SmsDB &rArr; Net_Other_SmsSta &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsCall
</UL>
<BR>[Called By]<UL><LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Sms
</UL>

<P><STRONG><a name="[905]"></a>Modem_Api_CallFtp</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200 + Unknown Stack Size
<LI>Call Chain = Modem_Api_CallFtp &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCall
</UL>
<BR>[Called By]<UL><LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_ZTE
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_Q
</UL>

<P><STRONG><a name="[cb8]"></a>Modem_Api_CallRing</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, modem_api.o(.text), UNUSED)

<P><STRONG><a name="[907]"></a>Modem_Api_CallPhoneStatus</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Modem_Api_CallPhoneStatus &rArr; Public_DisposePhoneStatus &rArr; NaviLcd_DisposePhoneStatus &rArr; NaviLcdSendCmdNewCallPhone &rArr; Public_CheckPhoneInformation &rArr; Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_DisposePhoneStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ring
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ata
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
</UL>

<P><STRONG><a name="[617]"></a>Modem_Api_OnSta</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CallBackPhone
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_SetDialEvTask
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffExternal
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_TimeStatusTask
</UL>

<P><STRONG><a name="[6b9]"></a>Modem_Api_Type</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Type
</UL>
<BR>[Calls]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Type
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalAttribute
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
</UL>

<P><STRONG><a name="[931]"></a>Modem_Api_CCID</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOD_GetIccidBcdValue
</UL>

<P><STRONG><a name="[909]"></a>Modem_Api_SocSta</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_SocSta
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SocSta
</UL>
<BR>[Called By]<UL><LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Listen
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Listen
</UL>

<P><STRONG><a name="[90a]"></a>Modem_Api_Socket_Send</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Modem_Api_Socket_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SocSta
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodIns
</UL>
<BR>[Called By]<UL><LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Send
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Send
</UL>

<P><STRONG><a name="[90c]"></a>Modem_Api_SocDnsSet</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_Api_SocDnsSet &rArr; ModLib_ChkIp &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ChkIp
</UL>
<BR>[Called By]<UL><LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
</UL>

<P><STRONG><a name="[90e]"></a>Modem_Api_Socket_Open</STRONG> (Thumb, 436 bytes, Stack size 64 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = Modem_Api_Socket_Open &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SocDnsSet
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_PortIs
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_PortFree
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_PortLock
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_SocRun
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Run
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
</UL>

<P><STRONG><a name="[914]"></a>Modem_Api_Socket_Close</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Socket_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_PortIs
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_PortFree
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_PortLock
</UL>
<BR>[Called By]<UL><LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_SocRun
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Run
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
</UL>

<P><STRONG><a name="[915]"></a>Modem_Api_Ftp</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = Modem_Api_Ftp &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_PortIs
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_PortFree
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_PortLock
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Run
</UL>

<P><STRONG><a name="[958]"></a>Modem_Api_FtpResult</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpEnd
</UL>

<P><STRONG><a name="[955]"></a>Modem_Api_FtpSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpEnd
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCheck
</UL>

<P><STRONG><a name="[916]"></a>Modem_Api_SmsSend</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Dt
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_SndMsg2Svr
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsSta
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsRst
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Alarm
</UL>

<P><STRONG><a name="[918]"></a>Modem_Api_Phone_Atd</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Modem_Api_Phone_Atd &rArr; Modem_Bsp_SpkOn &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Push
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOn
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOff
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
</UL>

<P><STRONG><a name="[91e]"></a>Modem_Api_Phone_Ath</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Phone_Ath
</UL>
<BR>[Calls]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
</UL>

<P><STRONG><a name="[91f]"></a>Modem_Api_Phone_Ata</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Phone_Ata
</UL>
<BR>[Calls]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communication_CallPhone
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
</UL>

<P><STRONG><a name="[920]"></a>Modem_Api_Phone_Clvl</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Phone_Clvl
</UL>
<BR>[Calls]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeIncr
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTelVolumeDecr
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
</UL>

<P><STRONG><a name="[932]"></a>Modem_Api_Phone_ClvlGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTelVolume
</UL>

<P><STRONG><a name="[921]"></a>Modem_Api_Phone_Audch</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, modem_api.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
</UL>

<P><STRONG><a name="[594]"></a>Modem_Api_Phone_Vts</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Phone_Vts
</UL>
<BR>[Calls]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeKeyValue
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
</UL>

<P><STRONG><a name="[7f3]"></a>Modem_Api_Tts_IsSpt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Tts_IsSpt
</UL>
<BR>[Calls]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Is
</UL>
<BR>[Called By]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_GetPlayBusyFlag
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTtsVolume
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTtsVolumeDecr
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTtsVolumeIncr
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuff
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStrToSend
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoicePlay
</UL>

<P><STRONG><a name="[7f4]"></a>Modem_Api_Tts_IsSta</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Api_Tts_IsSta
</UL>
<BR>[Calls]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Is
</UL>
<BR>[Called By]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_GetPlayBusyFlag
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoicePlay
</UL>

<P><STRONG><a name="[934]"></a>Modem_Api_Tts_IsClvl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModTtsVolume
</UL>

<P><STRONG><a name="[933]"></a>Modem_Api_Tts_Clvl</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeIncr
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModTtsVolumeDecr
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
</UL>

<P><STRONG><a name="[9c6]"></a>Modem_Api_Tts_Stop</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, modem_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
</UL>

<P><STRONG><a name="[66a]"></a>Modem_Api_Tts_Play</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, modem_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224 + Unknown Stack Size
<LI>Call Chain = Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Dt
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_TTSVoiceStr
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStrToSend
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Tts_Run
</UL>

<P><STRONG><a name="[717]"></a>GSM_PWR_ON</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, modem_app_com.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_OpenAllUserPower
</UL>

<P><STRONG><a name="[5f6]"></a>GSM_PWR_OFF</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, modem_app_com.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_CloseAllUserPower
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[31]"></a>Communication_TimeTask</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2432 + Unknown Stack Size
<LI>Call Chain = Communication_TimeTask &rArr; Modem_Run &rArr; Modem_Debug_Run &rArr; Modem_Debug_UartPro &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Run
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Run
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[959]"></a>Communication_TaskSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, modem_app_com.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpEnd
</UL>

<P><STRONG><a name="[2c5]"></a>Communication_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Communication_Init &rArr; Modem_Api_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TimeTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_TimeTask
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Chk_Run
</UL>

<P><STRONG><a name="[566]"></a>communication_CallPhone</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = communication_CallPhone &rArr; Modem_Api_Phone_Atd &rArr; Modem_Bsp_SpkOn &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Ata
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Ath
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewCallPhone
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeKeyValue
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_HangUpPhone
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckDailPhone
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeGNSSCheckUp
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TakeCallMonitorServerPhone
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowNewCallPhone
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_HangUpCall
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CallBackPhone
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_DisposeHangUp
</UL>

<P><STRONG><a name="[6c6]"></a>communicatio_GetSignalIntensity</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = communicatio_GetSignalIntensity
</UL>
<BR>[Calls]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_Csq
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
</UL>

<P><STRONG><a name="[57d]"></a>Communication_SndMsg2Svr</STRONG> (Thumb, 120 bytes, Stack size 424 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1656 + Unknown Stack Size
<LI>Call Chain = Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Send
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Send
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteStr
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SmsSend
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendTickleInfo
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>

<P><STRONG><a name="[3a8]"></a>communicatio_GetMudulState</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = communicatio_GetMudulState
</UL>
<BR>[Calls]<UL><LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_ConSta
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_Csq
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_OriginalDataUpTrans
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckAndBlindReport
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
</UL>

<P><STRONG><a name="[92d]"></a>communicatio_NetState</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, modem_app_com.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_ConSta
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_ConSta
</UL>

<P><STRONG><a name="[1bf]"></a>Communication_Open</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Communication_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_OpenGSMModule
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
</UL>

<P><STRONG><a name="[1bc]"></a>Communication_Close</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Communication_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Close
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_CloseGSMModule
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
</UL>

<P><STRONG><a name="[930]"></a>Communication_Close2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem_app_com.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Close
</UL>

<P><STRONG><a name="[5f5]"></a>MOD_CloseMainIp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MOD_CloseMainIp
</UL>
<BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Close
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
</UL>

<P><STRONG><a name="[67a]"></a>MOD_GetIccidBcdValue</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MOD_GetIccidBcdValue
</UL>
<BR>[Calls]<UL><LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CCID
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalAttribute
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SaveCurSIMICcidNumberToE2Param
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurSIMICcidNumberToE2Param
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSIMCardNumber
</UL>

<P><STRONG><a name="[588]"></a>SetTelVolumeIncr</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SetTelVolumeIncr &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Clvl
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CurrentPhoneVolUp
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
</UL>

<P><STRONG><a name="[586]"></a>SetTelVolumeDecr</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SetTelVolumeDecr &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Clvl
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CurrentPhoneVolDown
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
</UL>

<P><STRONG><a name="[58a]"></a>GetTelVolume</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetTelVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_ClvlGet
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeAdjustVolume
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
</UL>

<P><STRONG><a name="[7ab]"></a>SetModTtsVolumeIncr</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SetModTtsVolumeIncr &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Clvl
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTtsVolumeIncr
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAndShowTTsVolume
</UL>

<P><STRONG><a name="[7ac]"></a>SetModTtsVolumeDecr</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SetModTtsVolumeDecr &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Clvl
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTtsVolumeDecr
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAndShowTTsVolume
</UL>

<P><STRONG><a name="[58d]"></a>GetModTtsVolume</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modem_app_com.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetModTtsVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsClvl
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeAdjustVolume
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTtsVolume
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAndShowTTsVolume
</UL>

<P><STRONG><a name="[cb9]"></a>First_IP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem_app_first.o(.text), UNUSED)

<P><STRONG><a name="[935]"></a>Net_First_Value</STRONG> (Thumb, 324 bytes, Stack size 96 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = Net_First_Value &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_IP
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Init
</UL>

<P><STRONG><a name="[936]"></a>Net_First_Login</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Net_First_Login &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_GetOpenAccountRequestFlag
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_OpenAccountOnline
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_GetRequestFlag
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLink1LoginAuthorizationState
</UL>
<BR>[Called By]<UL><LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
</UL>

<P><STRONG><a name="[93a]"></a>Net_First_Down</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Net_First_Down
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Switch_Net_Specific_To_MainIP
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Listen
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
</UL>

<P><STRONG><a name="[8fb]"></a>Net_First_Init</STRONG> (Thumb, 116 bytes, Stack size 72 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = Net_First_Init &rArr; Net_First_Value &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Init
</UL>

<P><STRONG><a name="[93b]"></a>Net_First_Call</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Net_First_Call &rArr; RadioProtocol_AddRecvDataForParse &rArr; QueueInBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_AddRecvDataForParse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modem_app_first.o(.text)
</UL>
<P><STRONG><a name="[93c]"></a>Net_First_IP</STRONG> (Thumb, 78 bytes, Stack size 80 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = Net_First_IP &rArr; Net_First_Value &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Value
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modem_app_first.o(.text)
</UL>
<P><STRONG><a name="[92f]"></a>Net_First_Open</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, modem_app_first.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Open
</UL>

<P><STRONG><a name="[608]"></a>Net_First_Close</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, modem_app_first.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Close
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TimeTask
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOD_CloseMainIp
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Close2
</UL>

<P><STRONG><a name="[93d]"></a>Net_First_ConTo</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Net_First_ConTo
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_connect_To_Specific_Server
</UL>

<P><STRONG><a name="[92b]"></a>Net_First_Send</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Net_First_Send &rArr; Modem_Api_Socket_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SocSta
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_SndMsg2Svr
</UL>

<P><STRONG><a name="[93e]"></a>Net_First_Listen</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Net_First_Listen &rArr; Net_First_Down
</UL>
<BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Down
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SocSta
</UL>
<BR>[Called By]<UL><LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
</UL>

<P><STRONG><a name="[92c]"></a>Net_First_ConSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem_app_first.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_GetMudulState
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_NetState
</UL>

<P><STRONG><a name="[941]"></a>Net_First_Check</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, modem_app_first.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
</UL>

<P><STRONG><a name="[940]"></a>Net_First_Debug</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, modem_app_first.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Run
</UL>

<P><STRONG><a name="[69e]"></a>First_connect_To_Specific_Server</STRONG> (Thumb, 142 bytes, Stack size 184 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = First_connect_To_Specific_Server &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_ConTo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
</UL>

<P><STRONG><a name="[93f]"></a>First_Switch_Net_Specific_To_MainIP</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, modem_app_first.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Down
</UL>

<P><STRONG><a name="[925]"></a>Net_First_Run</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, modem_app_first.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312 + Unknown Stack Size
<LI>Call Chain = Net_First_Run &rArr; Modem_Api_Socket_Open &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Debug
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Check
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Listen
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Down
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Login
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Close
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Rst
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_TimeTask
</UL>

<P><STRONG><a name="[942]"></a>Sms_Set_Alarm</STRONG> (Thumb, 308 bytes, Stack size 248 bytes, modem_app_other.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCDEx
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurPositionInfoDataBlock
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteStr
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SmsSend
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[943]"></a>Sms_Set_Num</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Sms_Set_Num &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
</UL>

<P><STRONG><a name="[944]"></a>Sms_Set_Ip</STRONG> (Thumb, 288 bytes, Stack size 136 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Sms_Set_Ip &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
</UL>

<P><STRONG><a name="[945]"></a>Sms_Set_DevicePhone</STRONG> (Thumb, 182 bytes, Stack size 88 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Sms_Set_DevicePhone &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_StrByte
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
</UL>

<P><STRONG><a name="[947]"></a>Sms_Set_ReportTime</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = Sms_Set_ReportTime &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
</UL>

<P><STRONG><a name="[948]"></a>Sms_Set_Heartbeat</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = Sms_Set_Heartbeat &rArr; EepromPram_UpdateVariable &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
</UL>

<P><STRONG><a name="[949]"></a>Sms_Set_DeviceId</STRONG> (Thumb, 192 bytes, Stack size 80 bytes, modem_app_other.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_StrByte
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[94a]"></a>Sms_Set_VerNo</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Sms_Set_VerNo
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
</UL>

<P><STRONG><a name="[94b]"></a>Sms_Set_SmsRst</STRONG> (Thumb, 72 bytes, Stack size 56 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Sms_Set_SmsRst &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
</UL>

<P><STRONG><a name="[94e]"></a>Net_Other_SmsRst</STRONG> (Thumb, 348 bytes, Stack size 128 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360 + Unknown Stack Size
<LI>Call Chain = Net_Other_SmsRst &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCDEx
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmy
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteStr
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SmsSend
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Run
</UL>

<P><STRONG><a name="[950]"></a>Net_Other_SmsSta</STRONG> (Thumb, 98 bytes, Stack size 264 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496 + Unknown Stack Size
<LI>Call Chain = Net_Other_SmsSta &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCDEx
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBcdToAsc
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_Csq
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SmsSend
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
</UL>

<P><STRONG><a name="[951]"></a>Net_Other_DisPlay</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem_app_other.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
</UL>

<P><STRONG><a name="[600]"></a>Net_Other_Printf</STRONG> (Thumb, 104 bytes, Stack size 72 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = Net_Other_Printf &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
</UL>

<P><STRONG><a name="[95c]"></a>Net_Other_SysRest</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, modem_app_other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Run
</UL>

<P><STRONG><a name="[952]"></a>Net_Other_FtpCrcInit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Net_Other_FtpCrcInit
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCheck
</UL>

<P><STRONG><a name="[956]"></a>Net_Other_FtpCrcDo</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Net_Other_FtpCrcDo
</UL>
<BR>[Called By]<UL><LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCheck
</UL>

<P><STRONG><a name="[953]"></a>Net_Other_FtpVal</STRONG> (Thumb, 622 bytes, Stack size 136 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = Net_Other_FtpVal &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpStart
</UL>

<P><STRONG><a name="[954]"></a>Net_Other_FtpCheck</STRONG> (Thumb, 168 bytes, Stack size 568 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = Net_Other_FtpCheck &rArr; Public_CheckTerminalAndPeripheralVerify &rArr; Public_CheckSystemLogoAndVerSion &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTerminalAndPeripheralVerify
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCrcDo
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCrcInit
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_FtpSize
</UL>
<BR>[Called By]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpEnd
</UL>

<P><STRONG><a name="[69c]"></a>Net_Other_FtpStart</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = Net_Other_FtpStart &rArr; Net_Other_FtpVal &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpVal
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
</UL>

<P><STRONG><a name="[906]"></a>Net_Other_FtpCall</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Net_Other_FtpCall &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallFtp
</UL>

<P><STRONG><a name="[957]"></a>Net_Other_FtpEnd</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = Net_Other_FtpEnd &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpCheck
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_TaskSet
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_FtpSize
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_FtpResult
</UL>
<BR>[Called By]<UL><LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Run
</UL>

<P><STRONG><a name="[95a]"></a>Net_Other_SmsHB</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Net_Other_SmsHB &rArr; RadioProtocol_AddRecvDataForParse &rArr; QueueInBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_AddRecvDataForParse
</UL>
<BR>[Called By]<UL><LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsCall
</UL>

<P><STRONG><a name="[95b]"></a>Net_Other_SmsDB</STRONG> (Thumb, 944 bytes, Stack size 128 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1624 + Unknown Stack Size
<LI>Call Chain = Net_Other_SmsDB &rArr; Net_Other_SmsSta &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmy
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsSta
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_SmsRst
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_VerNo
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Heartbeat
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_ReportTime
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DevicePhone
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Ip
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Num
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SmsSend
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsCall
</UL>

<P><STRONG><a name="[904]"></a>Net_Other_SmsCall</STRONG> (Thumb, 98 bytes, Stack size 88 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1712 + Unknown Stack Size
<LI>Call Chain = Net_Other_SmsCall &rArr; Net_Other_SmsDB &rArr; Net_Other_SmsSta &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_StrByte
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsHB
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallSms
</UL>

<P><STRONG><a name="[926]"></a>Net_Other_Run</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, modem_app_other.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376 + Unknown Stack Size
<LI>Call Chain = Net_Other_Run &rArr; Net_Other_SmsRst &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpEnd
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SysRest
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsRst
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Ftp
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_TimeTask
</UL>

<P><STRONG><a name="[cba]"></a>Second_IP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem_app_second.o(.text), UNUSED)

<P><STRONG><a name="[95d]"></a>Net_Second_Value</STRONG> (Thumb, 274 bytes, Stack size 96 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = Net_Second_Value &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_IP
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Init
</UL>

<P><STRONG><a name="[95e]"></a>Net_Second_Login</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Net_Second_Login &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_GetLinkFlag
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLink2LoginAuthorizationState
</UL>
<BR>[Called By]<UL><LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Run
</UL>

<P><STRONG><a name="[960]"></a>Net_Second_Down</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Net_Second_Down
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Second_Switch_Net_Specific_To_MainIP
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Listen
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Run
</UL>

<P><STRONG><a name="[8fc]"></a>Net_Second_Init</STRONG> (Thumb, 116 bytes, Stack size 72 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = Net_Second_Init &rArr; Net_Second_Value &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTerminalAuthorizationFlag
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Init
</UL>

<P><STRONG><a name="[961]"></a>Net_Second_Call</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Net_Second_Call &rArr; RadioProtocol_AddRecvDataForParse &rArr; QueueInBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_AddRecvDataForParse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modem_app_second.o(.text)
</UL>
<P><STRONG><a name="[962]"></a>Net_Second_IP</STRONG> (Thumb, 78 bytes, Stack size 80 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = Net_Second_IP &rArr; Net_Second_Value &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Value
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modem_app_second.o(.text)
</UL>
<P><STRONG><a name="[602]"></a>Net_Second_Open</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, modem_app_second.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
</UL>

<P><STRONG><a name="[601]"></a>Net_Second_Close</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, modem_app_second.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
</UL>

<P><STRONG><a name="[963]"></a>Net_Second_ConTo</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Net_Second_ConTo
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Second_connect_To_Specific_Server
</UL>

<P><STRONG><a name="[92a]"></a>Net_Second_Send</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Net_Second_Send &rArr; Modem_Api_Socket_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SocSta
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_SndMsg2Svr
</UL>

<P><STRONG><a name="[964]"></a>Net_Second_Listen</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Net_Second_Listen &rArr; Net_Second_Down
</UL>
<BR>[Calls]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Down
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SocSta
</UL>
<BR>[Called By]<UL><LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Run
</UL>

<P><STRONG><a name="[92e]"></a>Net_Second_ConSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem_app_second.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_NetState
</UL>

<P><STRONG><a name="[967]"></a>Net_Second_Check</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, modem_app_second.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Run
</UL>

<P><STRONG><a name="[966]"></a>Net_Second_Debug</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, modem_app_second.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Run
</UL>

<P><STRONG><a name="[69f]"></a>Second_connect_To_Specific_Server</STRONG> (Thumb, 196 bytes, Stack size 184 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = Second_connect_To_Specific_Server &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_ConTo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
</UL>

<P><STRONG><a name="[965]"></a>Second_Switch_Net_Specific_To_MainIP</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, modem_app_second.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Down
</UL>

<P><STRONG><a name="[927]"></a>Net_Second_Run</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, modem_app_second.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312 + Unknown Stack Size
<LI>Call Chain = Net_Second_Run &rArr; Modem_Api_Socket_Open &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Debug
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Check
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Listen
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Down
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Login
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Close
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Rst
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_TimeTask
</UL>

<P><STRONG><a name="[968]"></a>Modem_Bsp_Init</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, modem_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Modem_Bsp_Init &rArr; ModLib_NodInit &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodInit
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[96a]"></a>Modem_Bsp_SetPower</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, modem_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Bsp_SetPower
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Off
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Act
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[96b]"></a>Modem_Bsp_SetActive</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, modem_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Bsp_SetActive
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Off
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Act
</UL>

<P><STRONG><a name="[96c]"></a>Modem_Bsp_SetDTR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, modem_bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[96d]"></a>Modem_Bsp_ReadRing</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, modem_bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>

<P><STRONG><a name="[96e]"></a>Modem_Bsp_MicOn</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modem_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Modem_Bsp_MicOn &rArr; Io_WriteMicConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteMicConrtolBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ata
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
</UL>

<P><STRONG><a name="[96f]"></a>Modem_Bsp_MicOff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modem_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Modem_Bsp_MicOff &rArr; Io_WriteMicConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteMicConrtolBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
</UL>

<P><STRONG><a name="[91d]"></a>Modem_Bsp_SpkOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Modem_Bsp_SpkOn &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSpeakerConrtolBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Play
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ring
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
</UL>

<P><STRONG><a name="[91c]"></a>Modem_Bsp_SpkOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Modem_Bsp_SpkOff &rArr; Io_WriteSpeakerConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSpeakerConrtolBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Check
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenTts
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
</UL>

<P><STRONG><a name="[5ff]"></a>Modem_Printf</STRONG> (Thumb, 72 bytes, Stack size 1056 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184 + Unknown Stack Size
<LI>Call Chain = Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartTx
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Printf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link2Login_TimeTask
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Link1Login_TimeTask
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Clvl
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Vts
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Clvl
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ath
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ata
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Send
<LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Send
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_PrtfSta
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Aud
<LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpClose
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Apn
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenTts
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisRec
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisCon
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Sms
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta_ZTE
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta_Q
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Search
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpEnd
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Dt
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Dt
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Ftp
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallFtp
</UL>

<P><STRONG><a name="[910]"></a>Modem_PrtfTo</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Open
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Off
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetSer
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Err
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Dial
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ati
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Act
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisRec
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_ZTE
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_Q
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_SendData
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
</UL>

<P><STRONG><a name="[9b3]"></a>Modem_Delay</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, modem_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Off
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ati
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Act
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[97f]"></a>Modem_StrCmp_RecData_Q</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Modem_StrCmp_RecData_Q &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisRec
</UL>

<P><STRONG><a name="[980]"></a>Modem_StrCmp_RecData_ZTE</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Modem_StrCmp_RecData_ZTE &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisRec
</UL>

<P><STRONG><a name="[994]"></a>Modem_Send_cmd</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Modem_Send_cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Send
<LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Send
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Rec
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpSta
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_CCID
<LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Search
<LI><a href="#[99a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpLoc
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_AtiFibocom
<LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Ati
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
</UL>

<P><STRONG><a name="[995]"></a>Modem_Send_cmd_Only</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Modem_Send_cmd_Only &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Sms
<LI><a href="#[9a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpData
</UL>

<P><STRONG><a name="[996]"></a>Modem_Send_cmd_Base</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Modem_Send_cmd_Base &rArr; Modem_Send_cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Vts
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Clvl
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Audch
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ath
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ata
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
<LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_DNSIP
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetSer
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Dial
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Aud
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ati
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Act
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Sms
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpDown
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpLogin
<LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpClose
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Apn
</UL>

<P><STRONG><a name="[997]"></a>Modem_Send_cmd_Apn</STRONG> (Thumb, 490 bytes, Stack size 160 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344 + Unknown Stack Size
<LI>Call Chain = Modem_Send_cmd_Apn &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
</UL>

<P><STRONG><a name="[998]"></a>Modem_Send_cmd_Ati</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Modem_Send_cmd_Ati &rArr; Modem_Send_cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ati
</UL>

<P><STRONG><a name="[999]"></a>Modem_Send_cmd_AtiFibocom</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, modem_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
</UL>

<P><STRONG><a name="[99a]"></a>Modem_Send_cmd_IpLoc</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Modem_Send_cmd_IpLoc &rArr; Modem_Send_cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Dial
</UL>

<P><STRONG><a name="[99b]"></a>Modem_Send_cmd_Search</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Modem_Send_cmd_Search &rArr; Modem_Send_cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CSQ
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetSer
</UL>

<P><STRONG><a name="[99c]"></a>Modem_Send_cmd_CCID</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Modem_Send_cmd_CCID &rArr; Modem_Send_cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetSer
</UL>

<P><STRONG><a name="[99d]"></a>Modem_Send_cmd_IpSta</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Modem_Send_cmd_IpSta &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Close
<LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Open
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CSQ
</UL>

<P><STRONG><a name="[99e]"></a>Modem_Send_cmd_IpOpen</STRONG> (Thumb, 262 bytes, Stack size 168 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376 + Unknown Stack Size
<LI>Call Chain = Modem_Send_cmd_IpOpen &rArr; Modem_StrCmp_LisCon &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodRet
<LI><a href="#[99f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodNum
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisCon
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Open
</UL>

<P><STRONG><a name="[9a1]"></a>Modem_Send_cmd_IpClose</STRONG> (Thumb, 126 bytes, Stack size 112 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = Modem_Send_cmd_IpClose &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Close
<LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Open
</UL>

<P><STRONG><a name="[9a2]"></a>Modem_Send_cmd_IpData</STRONG> (Thumb, 78 bytes, Stack size 56 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Modem_Send_cmd_IpData &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[995]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Only
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Send
</UL>

<P><STRONG><a name="[9a3]"></a>Modem_Send_cmd_FtpLogin</STRONG> (Thumb, 194 bytes, Stack size 112 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = Modem_Send_cmd_FtpLogin &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ftp
</UL>

<P><STRONG><a name="[9a4]"></a>Modem_Send_cmd_FtpDown</STRONG> (Thumb, 760 bytes, Stack size 120 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = Modem_Send_cmd_FtpDown &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ftp
</UL>

<P><STRONG><a name="[9a5]"></a>Modem_Send_cmd_Sms</STRONG> (Thumb, 236 bytes, Stack size 72 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = Modem_Send_cmd_Sms &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[995]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Only
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Send
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Rec
</UL>

<P><STRONG><a name="[9a6]"></a>Modem_Tts_Cmd</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Modem_Tts_Cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Stop
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Play
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Clvl
</UL>

<P><STRONG><a name="[9a7]"></a>Modem_Tts_Run</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248 + Unknown Stack Size
<LI>Call Chain = Modem_Tts_Run &rArr; Modem_State_Tts_Pro &rArr; Modem_State_Tts_Clvl &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Play
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Pro
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9a9]"></a>Modem_Process</STRONG> (Thumb, 966 bytes, Stack size 8 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1760 + Unknown Stack Size
<LI>Call Chain = Modem_Process &rArr; Modem_StrCmp_Sms &rArr; Modem_Api_CallSms &rArr; Net_Other_SmsCall &rArr; Net_Other_SmsDB &rArr; Net_Other_SmsSta &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenFalt
<LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenOn
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenTts
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
<LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenSms
<LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenData
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisFtp
<LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Atd
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Sms
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_SendData
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpOpen
<LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ccid
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Search
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpLoc
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ati
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Base
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Rec_Handle
</UL>

<P><STRONG><a name="[9aa]"></a>Modem_Rec_Handle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1768 + Unknown Stack Size
<LI>Call Chain = Modem_Rec_Handle &rArr; Modem_Process &rArr; Modem_StrCmp_Sms &rArr; Modem_Api_CallSms &rArr; Net_Other_SmsCall &rArr; Net_Other_SmsDB &rArr; Net_Other_SmsSta &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodRet
<LI><a href="#[99f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodNum
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9ac]"></a>Modem_Chk_Run</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Modem_Chk_Run &rArr; Communication_Init &rArr; Modem_Api_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[924]"></a>Modem_Run</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2424 + Unknown Stack Size
<LI>Call Chain = Modem_Run &rArr; Modem_Debug_Run &rArr; Modem_Debug_UartPro &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodOut
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Init
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms
<LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Off
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetSer
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Err
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Dial
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CheckRun
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Aud
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ati
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Act
<LI><a href="#[9af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_Run
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_Init
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Chk_Run
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Rec_Handle
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Tts_Run
<LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Delay
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Cmd_Try
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetPower
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_Init
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_TimeTask
</UL>

<P><STRONG><a name="[cbb]"></a>ModemState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, modem_core.o(.text), UNUSED)

<P><STRONG><a name="[9b2]"></a>Modem_Debug_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modem_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Modem_Debug_Init &rArr; ModLib_NodInit &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9c0]"></a>Modem_Debug_UartIrq</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, modem_debug.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodIns
</UL>

<P><STRONG><a name="[971]"></a>Modem_Debug_UartTx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, modem_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Modem_Debug_UartTx &rArr; QueueInBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueInBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartStr
</UL>

<P><STRONG><a name="[9c1]"></a>Modem_Debug_UartRx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, modem_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_Debug_UartRx &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodIns
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_TimeTask
</UL>

<P><STRONG><a name="[9c2]"></a>Modem_Debug_UartStr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, modem_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Modem_Debug_UartStr &rArr; Modem_Debug_UartTx &rArr; QueueInBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartTx
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
</UL>

<P><STRONG><a name="[9c3]"></a>Modem_Debug_UartPro</STRONG> (Thumb, 620 bytes, Stack size 1184 bytes, modem_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2408 + Unknown Stack Size
<LI>Call Chain = Modem_Debug_UartPro &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Vts
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Play
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRet
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodNum
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartStr
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Stop
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Clvl
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Clvl
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Ata
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Ath
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Send
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Rst
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[9af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_Run
</UL>

<P><STRONG><a name="[9c7]"></a>Modem_Debug_PrtfSta</STRONG> (Thumb, 1024 bytes, Stack size 144 bytes, modem_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328 + Unknown Stack Size
<LI>Call Chain = Modem_Debug_PrtfSta &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Type
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[9af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_Run
</UL>

<P><STRONG><a name="[9c8]"></a>Modem_Debug_SocIP</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, modem_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Modem_Debug_SocIP &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> modem_debug.o(.text)
</UL>
<P><STRONG><a name="[9c9]"></a>Modem_Debug_SocCall</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, modem_debug.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> modem_debug.o(.text)
</UL>
<P><STRONG><a name="[9ca]"></a>Modem_Debug_SocRun</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, modem_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312 + Unknown Stack Size
<LI>Call Chain = Modem_Debug_SocRun &rArr; Modem_Api_Socket_Open &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Close
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Rst
</UL>
<BR>[Called By]<UL><LI><a href="#[9af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_Run
</UL>

<P><STRONG><a name="[9af]"></a>Modem_Debug_Run</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, modem_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2416 + Unknown Stack Size
<LI>Call Chain = Modem_Debug_Run &rArr; Modem_Debug_UartPro &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_SocRun
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_PrtfSta
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[969]"></a>ModLib_NodInit</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ModLib_NodInit &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Init
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_Init
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_Init
</UL>

<P><STRONG><a name="[90b]"></a>ModLib_NodIns</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodIns
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartRx
<LI><a href="#[9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartIrq
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Send
</UL>

<P><STRONG><a name="[9c5]"></a>ModLib_NodRet</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModLib_NodRet
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CheckSoc
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodRet
</UL>

<P><STRONG><a name="[9cb]"></a>ModLib_NodRetEx</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModLib_NodRetEx
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[9c4]"></a>ModLib_NodNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem_lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CheckSoc
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[99f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodNum
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodClr
</UL>

<P><STRONG><a name="[9f5]"></a>ModLib_NodLen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, modem_lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodIns
</UL>

<P><STRONG><a name="[9cc]"></a>ModLib_NodRst</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ModLib_NodRst
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodRst
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodClr
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
</UL>

<P><STRONG><a name="[94c]"></a>ModLib_AtCmp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModLib_AtCmp &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_RecCmd
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_RecData_ZTE
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_RecData_Q
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenFalt
<LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenOn
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenTts
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
<LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenSms
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisCon
<LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Atd
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Sms
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_ZTE
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_Q
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_SendData
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpOpen
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta_ZTE
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta_Q
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ccid
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Search
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpLoc
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ati
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Base
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_SmsRst
</UL>

<P><STRONG><a name="[983]"></a>ModLib_AtCmpEx</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ModLib_AtCmpEx &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_Q
</UL>

<P><STRONG><a name="[94f]"></a>ModLib_AtCmy</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ModLib_AtCmy &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenTts
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsRst
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Dt
</UL>

<P><STRONG><a name="[91a]"></a>ModLib_AtLen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, modem_lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_RecCmd
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_RecData_Q
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_ZTE
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta_Q
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ccid
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsRst
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Dt
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
</UL>

<P><STRONG><a name="[94d]"></a>ModLib_AtAddr</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModLib_AtAddr &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_RecCmd
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_RecData_ZTE
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_RecData_Q
<LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenSms
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Sms
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_ZTE
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta_Q
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ccid
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Search
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_SmsRst
</UL>

<P><STRONG><a name="[90d]"></a>ModLib_ChkIp</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModLib_ChkIp &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SocDnsSet
</UL>

<P><STRONG><a name="[946]"></a>ModLib_StrByte</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ModLib_StrByte
</UL>
<BR>[Called By]<UL><LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduDecode
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ccid
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DeviceId
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DevicePhone
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsCall
</UL>

<P><STRONG><a name="[929]"></a>ModLib_ByteStr</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ModLib_ByteStr &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_SndMsg2Svr
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduEncode
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsRst
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Alarm
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Dt
</UL>

<P><STRONG><a name="[98a]"></a>ModLib_ByteStrEx</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ModLib_ByteStrEx &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Send
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisRec
</UL>

<P><STRONG><a name="[9ce]"></a>ModLib_ByteExc</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ModLib_ByteExc
</UL>
<BR>[Called By]<UL><LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduEncode
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduDecode
</UL>

<P><STRONG><a name="[9cd]"></a>ModLib_PduEncode</STRONG> (Thumb, 426 bytes, Stack size 424 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = ModLib_PduEncode &rArr; ModLib_ByteStr &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteExc
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteStr
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Dt
</UL>

<P><STRONG><a name="[9cf]"></a>ModLib_7BitDecode</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ModLib_7BitDecode
</UL>
<BR>[Called By]<UL><LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduDecode
</UL>

<P><STRONG><a name="[986]"></a>ModLib_PduDecode</STRONG> (Thumb, 338 bytes, Stack size 280 bytes, modem_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = ModLib_PduDecode &rArr; ModLib_7BitDecode
</UL>
<BR>[Calls]<UL><LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_7BitDecode
<LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteExc
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_StrByte
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Sms
</UL>

<P><STRONG><a name="[cbc]"></a>ModLib_7BitEncode</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, modem_lib.o(.text), UNUSED)

<P><STRONG><a name="[9d0]"></a>Modem_Port_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, modem_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Modem_Port_Init &rArr; Public_SaveCurSIMICcidNumberToE2Param &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SaveCurSIMICcidNumberToE2Param
</UL>
<BR>[Called By]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
</UL>

<P><STRONG><a name="[cbd]"></a>Modem_Port_Call_Ati</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, modem_port.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>Modem_Port_Call_LocIp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, modem_port.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> modem_core.o(.text)
</UL>
<P><STRONG><a name="[97a]"></a>Modem_Port_Call_CCID</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, modem_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Modem_Port_Call_CCID &rArr; Public_SaveCurSIMICcidNumberToE2Param &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SaveCurSIMICcidNumberToE2Param
</UL>
<BR>[Called By]<UL><LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ccid
</UL>

<P><STRONG><a name="[cbe]"></a>Modem_Port_Call_Ip_STAT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, modem_port.o(.text), UNUSED)

<P><STRONG><a name="[9d1]"></a>Modem_Port_ReadSleep</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, modem_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Modem_Port_ReadSleep &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
</UL>

<P><STRONG><a name="[9d2]"></a>Modem_Port_ReadAud</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, modem_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Modem_Port_ReadAud &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Aud
</UL>

<P><STRONG><a name="[9d3]"></a>Modem_Port_ReadApn</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, modem_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Modem_Port_ReadApn &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
</UL>

<P><STRONG><a name="[9d4]"></a>Modem_Port_ReadUserPass</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, modem_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Modem_Port_ReadUserPass &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
</UL>

<P><STRONG><a name="[9d5]"></a>Modem_Port_Apn_Set</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, modem_port.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[928]"></a>Modem_Port_Csq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem_port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_GetMudulState
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_GetSignalIntensity
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsSta
</UL>

<P><STRONG><a name="[9b4]"></a>Modem_State_Init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248 + Unknown Stack Size
<LI>Call Chain = Modem_State_Init &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodRst
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_Init
<LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRst
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_Init
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Err
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[901]"></a>Modem_State_Delay</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, modem_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Off
</UL>

<P><STRONG><a name="[9db]"></a>Modem_State_DelayPro</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Check
</UL>

<P><STRONG><a name="[908]"></a>Modem_State_Type</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Type
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_PrtfSta
</UL>

<P><STRONG><a name="[cbf]"></a>Modem_State_Is</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, modem_state.o(.text), UNUSED)

<P><STRONG><a name="[919]"></a>Modem_State_Push</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Enter
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
</UL>

<P><STRONG><a name="[9e4]"></a>Modem_State_Pop</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
</UL>

<P><STRONG><a name="[8fe]"></a>Modem_State_Switch</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CSQ
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms
<LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Off
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetSer
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Err
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Dial
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CheckRun
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Aud
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ati
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Act
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenFalt
<LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenOn
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_On
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Rst
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Start
</UL>

<P><STRONG><a name="[912]"></a>Modem_State_SwitchOn</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ftp
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Send
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Close
<LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Open
<LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_DNSIP
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CSQ
<LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Send
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Rec
<LI><a href="#[9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CheckSms
<LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CheckSoc
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Enter
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Ath
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Ftp
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Close
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
</UL>

<P><STRONG><a name="[91b]"></a>Modem_State_SwitchPhone</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Vts
<LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ring
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Vts
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Clvl
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Audch
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ath
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ata
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Audch
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Clvl
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Ata
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Ath
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
</UL>

<P><STRONG><a name="[9d7]"></a>Modem_State_CheckSoc</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Modem_State_CheckSoc &rArr; ModLib_NodRet
</UL>
<BR>[Calls]<UL><LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRet
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodNum
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
</UL>
<BR>[Called By]<UL><LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Check
</UL>

<P><STRONG><a name="[9d8]"></a>Modem_State_CheckSms</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Modem_State_CheckSms
</UL>
<BR>[Calls]<UL><LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
</UL>
<BR>[Called By]<UL><LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Check
</UL>

<P><STRONG><a name="[9da]"></a>Modem_State_CheckPhone</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Check
</UL>

<P><STRONG><a name="[9b0]"></a>Modem_State_CheckRun</STRONG> (Thumb, 106 bytes, Stack size 4 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Modem_State_CheckRun
</UL>
<BR>[Calls]<UL><LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9d9]"></a>Modem_State_Check</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_State_Check &rArr; Modem_State_CheckSoc &rArr; ModLib_NodRet
</UL>
<BR>[Calls]<UL><LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CheckPhone
<LI><a href="#[9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CheckSms
<LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CheckSoc
<LI><a href="#[9db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_DelayPro
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[9bf]"></a>Modem_State_Err</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = Modem_State_Err &rArr; Modem_State_Init &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9b5]"></a>Modem_State_Off</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248 + Unknown Stack Size
<LI>Call Chain = Modem_State_Off &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Delay
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetActive
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetPower
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9b6]"></a>Modem_State_Act</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = Modem_State_Act &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Delay
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetActive
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SetPower
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9b7]"></a>Modem_State_Ati</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = Modem_State_Ati &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Ati
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Delay
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9b8]"></a>Modem_State_Aud</STRONG> (Thumb, 634 bytes, Stack size 120 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = Modem_State_Aud &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadAud
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9b9]"></a>Modem_State_NetSer</STRONG> (Thumb, 640 bytes, Stack size 16 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = Modem_State_NetSer &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_CCID
<LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Search
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9bb]"></a>Modem_State_NetCfg</STRONG> (Thumb, 374 bytes, Stack size 72 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416 + Unknown Stack Size
<LI>Call Chain = Modem_State_NetCfg &rArr; Modem_Send_cmd_Apn &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadUserPass
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadApn
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadSleep
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Apn
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9ba]"></a>Modem_State_Sms</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = Modem_State_Sms &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Search
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9bc]"></a>Modem_State_Dial</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = Modem_State_Dial &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[99a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpLoc
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[917]"></a>Modem_State_Sms_Dt</STRONG> (Thumb, 596 bytes, Stack size 24 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduEncode
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SmsSend
</UL>

<P><STRONG><a name="[9dc]"></a>Modem_State_Sms_Rec</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = Modem_State_Sms_Rec &rArr; Modem_Send_cmd_Sms &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Sms
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[9dd]"></a>Modem_State_Sms_Send</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200 + Unknown Stack Size
<LI>Call Chain = Modem_State_Sms_Send &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Sms
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[2c0]"></a>Modem_State_SocSta</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_Idle
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Send
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Send
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Send
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_SocSta
</UL>

<P><STRONG><a name="[9de]"></a>Modem_State_CSQ</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = Modem_State_CSQ &rArr; Modem_Send_cmd_IpSta &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpSta
<LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Search
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[9df]"></a>Modem_State_DNSIP</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Modem_State_DNSIP &rArr; Modem_Send_cmd_Base &rArr; Modem_Send_cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[9e0]"></a>Modem_State_Ip_Open</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392 + Unknown Stack Size
<LI>Call Chain = Modem_State_Ip_Open &rArr; Modem_Send_cmd_IpOpen &rArr; Modem_StrCmp_LisCon &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpClose
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpSta
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[9e1]"></a>Modem_State_Ip_Close</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312 + Unknown Stack Size
<LI>Call Chain = Modem_State_Ip_Close &rArr; Modem_Send_cmd_IpClose &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpClose
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpSta
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[9e2]"></a>Modem_State_Ip_Send</STRONG> (Thumb, 484 bytes, Stack size 648 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832 + Unknown Stack Size
<LI>Call Chain = Modem_State_Ip_Send &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteStrEx
<LI><a href="#[9a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpData
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[9e3]"></a>Modem_State_Ftp</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = Modem_State_Ftp &rArr; Modem_Send_cmd_FtpDown &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpDown
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpLogin
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[98f]"></a>Modem_State_Phone_Enter</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Modem_State_Phone_Enter
</UL>
<BR>[Calls]<UL><LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Push
</UL>
<BR>[Called By]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
</UL>

<P><STRONG><a name="[990]"></a>Modem_State_Phone_Break</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Modem_State_Phone_Break &rArr; Modem_Api_CallPhoneStatus &rArr; Public_DisposePhoneStatus &rArr; NaviLcd_DisposePhoneStatus &rArr; NaviLcdSendCmdNewCallPhone &rArr; Public_CheckPhoneInformation &rArr; Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Pop
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_MicOff
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchOn
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOff
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallPhoneStatus
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ath
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
</UL>

<P><STRONG><a name="[9e5]"></a>Modem_State_Phone_Atd</STRONG> (Thumb, 442 bytes, Stack size 48 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = Modem_State_Phone_Atd &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_MicOff
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_MicOn
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallPhoneStatus
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
</UL>

<P><STRONG><a name="[9e6]"></a>Modem_State_Phone_Ata</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = Modem_State_Phone_Ata &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_MicOn
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallPhoneStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
</UL>

<P><STRONG><a name="[9e7]"></a>Modem_State_Phone_Ath</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = Modem_State_Phone_Ath &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
</UL>

<P><STRONG><a name="[9e8]"></a>Modem_State_Phone_Audch</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Modem_State_Phone_Audch &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
</UL>

<P><STRONG><a name="[9e9]"></a>Modem_State_Phone_Clvl</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = Modem_State_Phone_Clvl &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
</UL>

<P><STRONG><a name="[9ea]"></a>Modem_State_Phone_Vts</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224 + Unknown Stack Size
<LI>Call Chain = Modem_State_Phone_Vts &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Base
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
</UL>

<P><STRONG><a name="[9eb]"></a>Modem_State_Phone_Ring</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Modem_State_Phone_Ring &rArr; Modem_Api_CallPhoneStatus &rArr; Public_DisposePhoneStatus &rArr; NaviLcd_DisposePhoneStatus &rArr; NaviLcdSendCmdNewCallPhone &rArr; Public_CheckPhoneInformation &rArr; Public_CheckPhoneIsSpecialNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOn
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallPhoneStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
</UL>

<P><STRONG><a name="[9ed]"></a>Modem_State_Phone_Idle</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
</UL>

<P><STRONG><a name="[9ec]"></a>Modem_State_Phone_Pro</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = Modem_State_Phone_Pro &rArr; Modem_State_Phone_Clvl &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Idle
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ring
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Vts
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Clvl
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Audch
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ath
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Ata
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_MicOff
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SwitchPhone
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_OnLine
</UL>

<P><STRONG><a name="[9bd]"></a>Modem_State_Tts</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_State_Tts
</UL>
<BR>[Calls]<UL><LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[923]"></a>Modem_State_Tts_Dt</STRONG> (Thumb, 528 bytes, Stack size 24 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmy
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteStr
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_Play
</UL>

<P><STRONG><a name="[922]"></a>Modem_State_Tts_Is</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, modem_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSta
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Tts_IsSpt
</UL>

<P><STRONG><a name="[9ee]"></a>Modem_State_Tts_Clvl</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = Modem_State_Tts_Clvl &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Tts_Cmd
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Pro
</UL>

<P><STRONG><a name="[9ef]"></a>Modem_State_Tts_Play</STRONG> (Thumb, 330 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Modem_State_Tts_Play &rArr; Modem_Tts_Cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Tts_Cmd
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOn
</UL>
<BR>[Called By]<UL><LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Pro
</UL>

<P><STRONG><a name="[9f0]"></a>Modem_State_Tts_Stop</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Modem_State_Tts_Stop &rArr; Modem_Tts_Cmd &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Tts_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Pro
</UL>

<P><STRONG><a name="[9f1]"></a>Modem_State_Tts_Check</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Modem_State_Tts_Check &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOff
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Pro
</UL>

<P><STRONG><a name="[9a8]"></a>Modem_State_Tts_Pro</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = Modem_State_Tts_Pro &rArr; Modem_State_Tts_Clvl &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Check
<LI><a href="#[9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Stop
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Play
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Clvl
</UL>
<BR>[Called By]<UL><LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Tts_Run
</UL>

<P><STRONG><a name="[9be]"></a>Modem_State_OnLine</STRONG> (Thumb, 322 bytes, Stack size 8 bytes, modem_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = Modem_State_OnLine &rArr; Modem_State_Ip_Send &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Pro
<LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ftp
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Send
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Close
<LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Open
<LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_DNSIP
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_CSQ
<LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Send
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Rec
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Check
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9f4]"></a>Modem_Uart_RecCnt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, modem_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodIns
</UL>

<P><STRONG><a name="[9f2]"></a>Modem_Uart_RecCmd</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Modem_Uart_RecCmd &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[9f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodIns
</UL>

<P><STRONG><a name="[9d6]"></a>Modem_Uart_NodRst</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Modem_Uart_NodRst &rArr; ModLib_NodRst
</UL>
<BR>[Calls]<UL><LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRst
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
</UL>

<P><STRONG><a name="[99f]"></a>Modem_Uart_NodNum</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Modem_Uart_NodNum
</UL>
<BR>[Calls]<UL><LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodNum
</UL>
<BR>[Called By]<UL><LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Rec_Handle
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
</UL>

<P><STRONG><a name="[973]"></a>Modem_Uart_NodClr</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Modem_Uart_NodClr &rArr; ModLib_NodRst
</UL>
<BR>[Calls]<UL><LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRst
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodNum
</UL>
<BR>[Called By]<UL><LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
</UL>

<P><STRONG><a name="[9a0]"></a>Modem_Uart_NodRet</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_Uart_NodRet &rArr; ModLib_NodRet
</UL>
<BR>[Calls]<UL><LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRet
</UL>
<BR>[Called By]<UL><LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Rec_Handle
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
</UL>

<P><STRONG><a name="[9f3]"></a>Modem_Uart_NodIns</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Modem_Uart_NodIns &rArr; Modem_Uart_RecCmd &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_RecCmd
<LI><a href="#[9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_RecCnt
<LI><a href="#[9f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodLen
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodIns
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodOut
</UL>

<P><STRONG><a name="[9ae]"></a>Modem_Uart_NodOut</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Modem_Uart_NodOut &rArr; Modem_Uart_NodIns &rArr; Modem_Uart_RecCmd &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[9f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodIns
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9b1]"></a>Modem_Uart_Init</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Modem_Uart_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodInit
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[974]"></a>Modem_Uart_Send</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodIns
</UL>
<BR>[Called By]<UL><LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Check
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Play
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Send
<LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Send
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
</UL>

<P><STRONG><a name="[cc]"></a>UART5_IRQHandler</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, modem_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = UART5_IRQHandler &rArr; Modem_Uart_NodIns &rArr; Modem_Uart_RecCmd &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[9f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodIns
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRetEx
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartTx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>VDRCard_TimeTask</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2256 + Unknown Stack Size
<LI>Call Chain = VDRCard_TimeTask &rArr; VDRCard_StateLogin &rArr; VDROvertime_DriverLogin &rArr; VDROvertime_DriverLogout &rArr; RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetInitFlag
<LI><a href="#[9ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_Init
<LI><a href="#[9fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateMonitor
<LI><a href="#[9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateRead
<LI><a href="#[9fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateLogin
<LI><a href="#[9f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateLogout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[a01]"></a>VDRCard_GetReportInfo</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VDRCard_GetReportInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetLoginFlag
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
</UL>

<P><STRONG><a name="[a02]"></a>VDRCard_GetExternalDriverName</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VDRCard_GetExternalDriverName
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
</UL>

<P><STRONG><a name="[788]"></a>VDRCoefficient_EnableCalibration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, vdr_coefficient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = VDRCoefficient_EnableCalibration &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
</UL>
<BR>[Called By]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenFeatureCoefFlag
<LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_Init
</UL>

<P><STRONG><a name="[a06]"></a>VDRCoefficient_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, vdr_coefficient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = VDRCoefficient_Init &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_EnableCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
</UL>

<P><STRONG><a name="[62]"></a>VDRCoefficient_TimeTask</STRONG> (Thumb, 876 bytes, Stack size 72 bytes, vdr_coefficient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = VDRCoefficient_TimeTask &rArr; VDRCoefficient_CalDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopygPosition
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetSecondSpeed
<LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_Init
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_GetPoint
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_CalDistance
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_ModifyPulseCoef
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[cc0]"></a>VDRCoefficient_DisableCalibration</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, vdr_coefficient.o(.text), UNUSED)

<P><STRONG><a name="[78a]"></a>VDRCoefficient_GetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_coefficient.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFeatureCoefFlag
</UL>

<P><STRONG><a name="[a07]"></a>VDRData_EraseFlashArea</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = VDRData_EraseFlashArea &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_EraseAllFlashArea
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>

<P><STRONG><a name="[58]"></a>VDRData_TimeTask</STRONG> (Thumb, 502 bytes, Stack size 32 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = VDRData_TimeTask &rArr; VDRData_Check &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[4ad]"></a>VDRData_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = VDRData_Init &rArr; VDRData_Check &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_EraseAllFlashArea
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a09]"></a>VDRData_ReadNewestTime</STRONG> (Thumb, 398 bytes, Stack size 24 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = VDRData_ReadNewestTime &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_CheckReadParameter
<LI><a href="#[a0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_CheckWriteParameter
</UL>

<P><STRONG><a name="[a0b]"></a>VDRData_Write</STRONG> (Thumb, 684 bytes, Stack size 56 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[a0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_CheckWriteParameter
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_TimeTask
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[a8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_Write
<LI><a href="#[a67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_Init
<LI><a href="#[a63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Init
<LI><a href="#[a61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Write
<LI><a href="#[a5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRParameter_Write
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Write
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightWrite
<LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
<LI><a href="#[a29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WriteStop
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
<LI><a href="#[a26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePositionNoChange
</UL>

<P><STRONG><a name="[a0c]"></a>VDRData_ReadOldestTime</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = VDRData_ReadOldestTime &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_CheckReadParameter
</UL>

<P><STRONG><a name="[a0e]"></a>VDRData_Read</STRONG> (Thumb, 810 bytes, Stack size 80 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_CheckReadParameter
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Get2daysLog
<LI><a href="#[a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd08H
<LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd09H
<LI><a href="#[a7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd10H
<LI><a href="#[a79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd11H
<LI><a href="#[a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd12H
<LI><a href="#[a77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd13H
<LI><a href="#[a76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd14H
<LI><a href="#[a75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd15H
<LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
</UL>

<P><STRONG><a name="[a35]"></a>VDRData_SetWriteEnableFlag</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, vdr_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SavePacketData
<LI><a href="#[a37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask1
<LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask1
</UL>

<P><STRONG><a name="[a34]"></a>VDRData_ReadWriteEnableFlag</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, vdr_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SavePacketData
<LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask1
</UL>

<P><STRONG><a name="[a2e]"></a>VDRData_ReadInitFlag</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, vdr_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_TimeTask
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_TimeTask
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_TimeTask
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_TimeTask
</UL>

<P><STRONG><a name="[a10]"></a>VDRData_ReadTotalList</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VDRData_ReadTotalList
</UL>
<BR>[Called By]<UL><LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SavePacketData
<LI><a href="#[a8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_CheckEnableFlag
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Get15MinuteSpeed
<LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
<LI><a href="#[a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadListNum
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadListTime
<LI><a href="#[a11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalPacket
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadList
</UL>

<P><STRONG><a name="[a0f]"></a>VDRData_ReadList</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = VDRData_ReadList &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalList
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SavePacketData
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Get15MinuteSpeed
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
<LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadPacket
</UL>

<P><STRONG><a name="[a11]"></a>VDRData_ReadTotalPacket</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VDRData_ReadTotalPacket &rArr; VDRData_ReadTotalList
</UL>
<BR>[Calls]<UL><LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalList
</UL>
<BR>[Called By]<UL><LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
<LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadPacket
</UL>

<P><STRONG><a name="[a12]"></a>VDRData_ReadPacket</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = VDRData_ReadPacket &rArr; VDRData_ReadList &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalPacket
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadList
</UL>
<BR>[Called By]<UL><LI><a href="#[a37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask1
<LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask1
</UL>

<P><STRONG><a name="[a13]"></a>VDRData_ReadListTime</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = VDRData_ReadListTime &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalList
</UL>
<BR>[Called By]<UL><LI><a href="#[a8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_CheckEnableFlag
<LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
</UL>

<P><STRONG><a name="[a14]"></a>VDRData_ReadListNum</STRONG> (Thumb, 238 bytes, Stack size 20 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VDRData_ReadListNum &rArr; VDRData_ReadTotalList
</UL>
<BR>[Calls]<UL><LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalList
</UL>
<BR>[Called By]<UL><LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
</UL>

<P><STRONG><a name="[328]"></a>VDRData_EraseAllFlashArea</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = VDRData_EraseAllFlashArea &rArr; VDRData_Init &rArr; VDRData_Check &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Init
<LI><a href="#[a07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_EraseFlashArea
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
</UL>

<P><STRONG><a name="[cc1]"></a>VDRDocimasy_GetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_docimasy.o(.text), UNUSED)

<P><STRONG><a name="[a16]"></a>VDRDocimasy_EnterE0H</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = VDRDocimasy_EnterE0H &rArr; VDRDocimasy_InitTim4 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTimerTask
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE0H
</UL>

<P><STRONG><a name="[a18]"></a>VDRDocimasy_EnterE1H</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = VDRDocimasy_EnterE1H &rArr; VDRDocimasy_InitExti14 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti14
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE1H
</UL>

<P><STRONG><a name="[a1b]"></a>VDRDocimasy_EnterE2H</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = VDRDocimasy_EnterE2H &rArr; VDRDocimasy_InitExti10 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitGpioPB14
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitExti10
</UL>
<BR>[Called By]<UL><LI><a href="#[a6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE2H
</UL>

<P><STRONG><a name="[a1c]"></a>VDRDocimasy_EnterE3H</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = VDRDocimasy_EnterE3H &rArr; VDRDocimasy_InitTim4 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitGpioPB14
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitTim4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE3H
</UL>

<P><STRONG><a name="[a1d]"></a>VDRDocimasy_EnterE4H</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = VDRDocimasy_EnterE4H &rArr; VDRPulse_Init &rArr; VDRPulse_InitExti10 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[a1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_Init
<LI><a href="#[a1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_InitGpioPB14
</UL>
<BR>[Called By]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_Tim4Isr
<LI><a href="#[a69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE4H
</UL>

<P><STRONG><a name="[81a]"></a>VDRDocimasy_ExtiIsr</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = VDRDocimasy_ExtiIsr &rArr; VDRPulse_CalInstantSpeed &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_CalInstantSpeed
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[817]"></a>VDRDocimasy_Tim4Isr</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = VDRDocimasy_Tim4Isr &rArr; VDRDocimasy_AckE1H &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE4H
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_AckE1H
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[180]"></a>VDRDoubt_GetCarRunFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_doubt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Turn_check
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Corner_TimeTask
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysAutoRunToMainInfoTask
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckAlarmVoiceTask
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_TimeTask
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
<LI><a href="#[9fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateMonitor
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleAlarm
<LI><a href="#[a29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WriteStop
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
<LI><a href="#[a26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePositionNoChange
</UL>

<P><STRONG><a name="[5c]"></a>VDRDoubt_TimeTask</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = VDRDoubt_TimeTask &rArr; VDRDoubt_WritePowerOn &rArr; VDRDoubt_Read2 &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
<LI><a href="#[a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_RunOrStop
<LI><a href="#[a2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_CalSecondSpeed
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_SaveCurrentSpeedStatus
<LI><a href="#[a29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WriteStop
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
<LI><a href="#[a26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePositionNoChange
<LI><a href="#[a2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadInitFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[a8b]"></a>VDRDoubt_GetSecondSpeed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_doubt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
</UL>

<P><STRONG><a name="[a2f]"></a>VDRGprs_PacketAckPreHandle</STRONG> (Thumb, 482 bytes, Stack size 56 bytes, vdr_gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = VDRGprs_PacketAckPreHandle &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadListNum
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadListTime
<LI><a href="#[a11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalPacket
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalList
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
<LI><a href="#[a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadOldestTime
</UL>
<BR>[Called By]<UL><LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask1
</UL>

<P><STRONG><a name="[63]"></a>VDRGprs_TimeTask</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, vdr_gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = VDRGprs_TimeTask &rArr; VDRGprs_TimeTask2 &rArr; RadioProtocol_RecorderDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
<LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[68]"></a>VDRGprs_ResendTimeTask</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, vdr_gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1864 + Unknown Stack Size
<LI>Call Chain = VDRGprs_ResendTimeTask &rArr; VDRGprs_ResendTimeTask2 &rArr; RadioProtocol_RecorderDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask2
<LI><a href="#[a37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[6a7]"></a>VDRGprs_RecData</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, vdr_gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = VDRGprs_RecData &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_RecorderPramSet
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_RecorderDataCollection
</UL>

<P><STRONG><a name="[6b8]"></a>VDRGprs_PacketResendRequest</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, vdr_gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = VDRGprs_PacketResendRequest &rArr; SetTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_UploadFromBreak_Request
</UL>

<P><STRONG><a name="[329]"></a>VDRLog_EraseFlashArea</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, vdr_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = VDRLog_EraseFlashArea &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_DisposeWriteParam
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[a39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_GetWriteCount
</UL>

<P><STRONG><a name="[64]"></a>VDRLog_TimeTask</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, vdr_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = VDRLog_TimeTask &rArr; VDRLog_GetWriteCount &rArr; VDRLog_EraseFlashArea &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_GetWriteCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[a3a]"></a>VDRLog_Write</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, vdr_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = VDRLog_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_TimeTask
<LI><a href="#[a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_SendCmd
</UL>

<P><STRONG><a name="[8aa]"></a>VDRLog_SaveLogFile</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, vdr_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 900 + Unknown Stack Size
<LI>Call Chain = VDRLog_SaveLogFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm2
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[a3c]"></a>VDRLog_EnablePrint</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, vdr_log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
</UL>

<P><STRONG><a name="[a3d]"></a>VDROverspeed_WriteEarlyAlarmFlagBit</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VDROverspeed_WriteEarlyAlarmFlagBit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsAlarm
<LI><a href="#[a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsEarlyAlarm
</UL>

<P><STRONG><a name="[a45]"></a>VDROverspeed_ReadAlarmFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_overspeed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_TimeTask
</UL>

<P><STRONG><a name="[a41]"></a>VDROverspeed_WriteAlarmFlagBit</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VDROverspeed_WriteAlarmFlagBit &rArr; Io_WriteOverSpeedConrtolBit
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteOverSpeedConrtolBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsAlarm
</UL>

<P><STRONG><a name="[345]"></a>VDROverspeed_UpdateParameter</STRONG> (Thumb, 854 bytes, Stack size 56 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = VDROverspeed_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_BCD2HEX
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_Init
</UL>

<P><STRONG><a name="[61]"></a>VDROverspeed_TimeTask</STRONG> (Thumb, 386 bytes, Stack size 8 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = VDROverspeed_TimeTask &rArr; VDROverspeed_OnceOverReport &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[a45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_ReadAlarmFlag
<LI><a href="#[a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_Init
<LI><a href="#[a43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_OnceOverReport
<LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsAlarm
<LI><a href="#[a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsEarlyAlarm
<LI><a href="#[a46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_ReadEarlyAlarmFlag
<LI><a href="#[a2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadInitFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[1ed]"></a>VDROverspeed_SetAreaParameter</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VDROverspeed_SetAreaParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRectArea
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_DisposeDriveInRoundArea
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_DisposeDriveInArea
</UL>

<P><STRONG><a name="[1ba]"></a>VDROverspeed_ResetAreaParameter</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, vdr_overspeed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ClearSpeedAreaBit
</UL>

<P><STRONG><a name="[6d5]"></a>VDROverspeed_SetRoadParameter</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VDROverspeed_SetRoadParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_SetSpeedParam
</UL>

<P><STRONG><a name="[6d6]"></a>VDROverspeed_ResetRoadParameter</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, vdr_overspeed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ClearSpeedParam
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_SetSpeedParam
</UL>

<P><STRONG><a name="[cc2]"></a>VDROverspeed_ReadAlarmFlagBit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, vdr_overspeed.o(.text), UNUSED)

<P><STRONG><a name="[cc3]"></a>VDROverspeed_ReadEarlyAlarmFlagBit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, vdr_overspeed.o(.text), UNUSED)

<P><STRONG><a name="[7d3]"></a>VDROverspeed_GetAlarmSpeed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, vdr_overspeed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCarInfo
<LI><a href="#[a57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_OnceRunReport
</UL>

<P><STRONG><a name="[346]"></a>VDROverspeed_ClearTime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, vdr_overspeed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[347]"></a>VDROvertime_UpdateParameter</STRONG> (Thumb, 1066 bytes, Stack size 48 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = VDROvertime_UpdateParameter &rArr; UpdateRunMode &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_BCD2HEX
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRunMode
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[a5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Init
</UL>

<P><STRONG><a name="[5d]"></a>VDROvertime_TimeTask</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = VDROvertime_TimeTask &rArr; VDROvertime_OnceRunReport &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Init
<LI><a href="#[a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_JudgeRunOrStop
<LI><a href="#[a57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_OnceRunReport
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_StopAlarm
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleAlarm
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
<LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOtherDrivers
<LI><a href="#[a49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleRunUnlogin
<LI><a href="#[a47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleNightRunVoice
<LI><a href="#[a2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadInitFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[9f7]"></a>VDROvertime_DriverLogout</STRONG> (Thumb, 400 bytes, Stack size 120 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = VDROvertime_DriverLogout &rArr; RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSelfDefine2Bit
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DriverInformationReport
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveAllDriverInfo
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[9f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateLogout
</UL>

<P><STRONG><a name="[9fb]"></a>VDROvertime_DriverLogin</STRONG> (Thumb, 740 bytes, Stack size 296 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2216 + Unknown Stack Size
<LI>Call Chain = VDROvertime_DriverLogin &rArr; VDROvertime_DriverLogout &rArr; RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteSelfDefine2Bit
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DriverInformationReport
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetReportInfo
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveAllDriverInfo
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateLogin
</UL>

<P><STRONG><a name="[a00]"></a>VDROvertime_GetInitFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_overtime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_TimeTask
</UL>

<P><STRONG><a name="[6cc]"></a>VDROvertime_GetLoginFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_overtime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetLink1NextReportPoint
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriverInfo
<LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetReportInfo
<LI><a href="#[a83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd01H
</UL>

<P><STRONG><a name="[a5c]"></a>VDROvertime_GetUnsaveLog</STRONG> (Thumb, 376 bytes, Stack size 56 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = VDROvertime_GetUnsaveLog &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Get2daysLog
<LI><a href="#[a79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd11H
</UL>

<P><STRONG><a name="[7cd]"></a>VDROvertime_Get2daysLog</STRONG> (Thumb, 226 bytes, Stack size 152 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = VDROvertime_Get2daysLog &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetUnsaveLog
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecordInit
</UL>

<P><STRONG><a name="[7d0]"></a>VDROvertime_GetLicense</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VDROvertime_GetLicense
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriverInfo
<LI><a href="#[a83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd01H
</UL>

<P><STRONG><a name="[452]"></a>VDROvertime_GetDriveTime</STRONG> (Thumb, 360 bytes, Stack size 8 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = VDROvertime_GetDriveTime &rArr; VDROvertime_NightIsArrived &rArr; VDROvertime_NightTimeIsOk
</UL>
<BR>[Calls]<UL><LI><a href="#[a5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetAlarmFlag
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsArrived
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_GetContDriveTimeStr
</UL>

<P><STRONG><a name="[348]"></a>VDROvertime_ClearStartTime</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, vdr_overtime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
</UL>

<P><STRONG><a name="[a5e]"></a>VDRParameter_Write</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, vdr_parameter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = VDRParameter_Write &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[5a]"></a>VDRPosition_TimeTask</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, vdr_position.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = VDRPosition_TimeTask &rArr; VDRPosition_Init &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[a63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Init
<LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SaveStartTime
<LI><a href="#[a61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Write
<LI><a href="#[a5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SavePosition
<LI><a href="#[a2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadInitFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[a64]"></a>VDRPosition_GetCurHourPosition</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, vdr_position.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = VDRPosition_GetCurHourPosition &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SavePacketData
<LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd09H
</UL>

<P><STRONG><a name="[a65]"></a>VDRPosition_Get15MinuteSpeed</STRONG> (Thumb, 524 bytes, Stack size 72 bytes, vdr_position.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_HEX2BCD
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadList
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalList
</UL>

<P><STRONG><a name="[5f]"></a>VDRPower_TimeTask</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, vdr_power.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = VDRPower_TimeTask &rArr; VDRPower_Init &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[a67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_Init
<LI><a href="#[a66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_GetStatus
<LI><a href="#[a2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadInitFlag
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[a68]"></a>VDRProtocol_SendCmd</STRONG> (Thumb, 362 bytes, Stack size 32 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = VDRProtocol_SendCmd &rArr; VDRLog_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_Write
<LI><a href="#[a22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_SendData
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_Parse
</UL>

<P><STRONG><a name="[a7d]"></a>VDRProtocol_ParseCmd07H</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = VDRProtocol_ParseCmd07H &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_ReadNoPacketData
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a7e]"></a>VDRProtocol_ParseCmd06H</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = VDRProtocol_ParseCmd06H &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_ReadNoPacketData
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a7f]"></a>VDRProtocol_ParseCmd05H</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = VDRProtocol_ParseCmd05H &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_ReadNoPacketData
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a80]"></a>VDRProtocol_ParseCmd04H</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = VDRProtocol_ParseCmd04H &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_ReadNoPacketData
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a81]"></a>VDRProtocol_ParseCmd03H</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = VDRProtocol_ParseCmd03H &rArr; Public_ConvertLongToBCD &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBCD
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_ReadNoPacketData
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a82]"></a>VDRProtocol_ParseCmd02H</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = VDRProtocol_ParseCmd02H &rArr; VDRPub_ConvertNowTimeToBCD &rArr; VDRPub_HEX2BCD
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_ReadNoPacketData
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a83]"></a>VDRProtocol_ParseCmd01H</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = VDRProtocol_ParseCmd01H &rArr; VDROvertime_GetLicense
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetLoginFlag
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetLicense
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_ReadNoPacketData
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a84]"></a>VDRProtocol_ParseCmd00H</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VDRProtocol_ParseCmd00H
</UL>
<BR>[Called By]<UL><LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_ReadNoPacketData
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a32]"></a>VDRProtocol_ParseCmd</STRONG> (Thumb, 718 bytes, Stack size 32 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1720 + Unknown Stack Size
<LI>Call Chain = VDRProtocol_ParseCmd &rArr; VDRProtocol_ParseCmdD0H &rArr; RadioProtocol_WritePram &rArr; E2ParamApp_DisposeWriteParam &rArr; DriverInfo_DisposeRadioProtocol &rArr; DriverInfoAdd &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd00H
<LI><a href="#[a83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd01H
<LI><a href="#[a82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd02H
<LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd03H
<LI><a href="#[a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd04H
<LI><a href="#[a7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd05H
<LI><a href="#[a7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd06H
<LI><a href="#[a7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd07H
<LI><a href="#[a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd08H
<LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd09H
<LI><a href="#[a7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd10H
<LI><a href="#[a79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd11H
<LI><a href="#[a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd12H
<LI><a href="#[a77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd13H
<LI><a href="#[a76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd14H
<LI><a href="#[a75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd15H
<LI><a href="#[a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd82H
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd83H
<LI><a href="#[a72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd84H
<LI><a href="#[a71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC2H
<LI><a href="#[a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC3H
<LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC4H
<LI><a href="#[a6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdD0H
<LI><a href="#[a6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE0H
<LI><a href="#[a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE1H
<LI><a href="#[a6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE2H
<LI><a href="#[a6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE3H
<LI><a href="#[a69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE4H
<LI><a href="#[a5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRParameter_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[a85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_Parse
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
<LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask1
</UL>

<P><STRONG><a name="[a85]"></a>VDRProtocol_Parse</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1760 + Unknown Stack Size
<LI>Call Chain = VDRProtocol_Parse &rArr; VDRProtocol_ParseCmd &rArr; VDRProtocol_ParseCmdD0H &rArr; RadioProtocol_WritePram &rArr; E2ParamApp_DisposeWriteParam &rArr; DriverInfo_DisposeRadioProtocol &rArr; DriverInfoAdd &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_SendCmd
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_TimeTask
</UL>

<P><STRONG><a name="[a33]"></a>VDRProtocol_Packet</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VDRProtocol_Packet
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask2
<LI><a href="#[a37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask1
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
<LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask1
</UL>

<P><STRONG><a name="[a25]"></a>VDRPub_GetNoNavigationPostion</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, vdr_pub.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SavePosition
<LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
</UL>

<P><STRONG><a name="[2a7]"></a>VDRPub_HEX2BCD</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, vdr_pub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VDRPub_HEX2BCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Get15MinuteSpeed
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
</UL>

<P><STRONG><a name="[a24]"></a>VDRPub_ConvertTimeToBCD</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, vdr_pub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VDRPub_ConvertTimeToBCD &rArr; VDRPub_HEX2BCD
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_HEX2BCD
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[a8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_Write
<LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd03H
<LI><a href="#[a67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_Init
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Get15MinuteSpeed
<LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SaveStartTime
<LI><a href="#[a5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRParameter_Write
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetUnsaveLog
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Write
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightWrite
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
</UL>

<P><STRONG><a name="[2a6]"></a>VDRPub_BCD2HEX</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, vdr_pub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VDRPub_BCD2HEX
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_UpdateParameter
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_UpdateParameter
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
</UL>

<P><STRONG><a name="[a30]"></a>VDRPub_ConvertBCDToTime</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, vdr_pub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VDRPub_ConvertBCDToTime &rArr; VDRPub_BCD2HEX
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_BCD2HEX
</UL>
<BR>[Called By]<UL><LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Get2daysLog
<LI><a href="#[a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd08H
<LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd09H
<LI><a href="#[a7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd10H
<LI><a href="#[a79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd11H
<LI><a href="#[a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd12H
<LI><a href="#[a77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd13H
<LI><a href="#[a76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd14H
<LI><a href="#[a75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd15H
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd83H
<LI><a href="#[a71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC2H
<LI><a href="#[a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_GetCurHourPosition
<LI><a href="#[a63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Init
<LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SaveStartTime
<LI><a href="#[a61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_Write
<LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
</UL>

<P><STRONG><a name="[2b9]"></a>VDRPub_ConvertNowTimeToBCD</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, vdr_pub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = VDRPub_ConvertNowTimeToBCD &rArr; VDRPub_HEX2BCD
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_HEX2BCD
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogin
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogout
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_TimeTask
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetLoginInfo
<LI><a href="#[a82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd02H
<LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd03H
<LI><a href="#[a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd04H
<LI><a href="#[a7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd06H
</UL>

<P><STRONG><a name="[cc4]"></a>VDRPub_HEX2ASC</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, vdr_pub.o(.text), UNUSED)

<P><STRONG><a name="[812]"></a>VDRPulse_GetInstantSpeed</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = VDRPulse_GetInstantSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_GetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vss_TimeTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimeTask
<LI><a href="#[a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_RunOrStop
<LI><a href="#[a2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_CalSecondSpeed
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_SaveCurrentSpeedStatus
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_AckE1H
</UL>

<P><STRONG><a name="[34a]"></a>VDRPulse_UpdateParameter</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedFlagUpdatePram
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_SetPram
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_UpdateVariable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimeTask
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_ModifyPulseCoef
<LI><a href="#[a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_UpdateParameter
<LI><a href="#[a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdC3H
</UL>

<P><STRONG><a name="[a1e]"></a>VDRPulse_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = VDRPulse_Init &rArr; VDRPulse_InitExti10 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitTim3
<LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_InitExti10
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_TimeTask
<LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE4H
</UL>

<P><STRONG><a name="[59]"></a>VDRPulse_TimeTask</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = VDRPulse_TimeTask &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_UpdateParameter
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetInstantSpeed
<LI><a href="#[a1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[a91]"></a>VDRPulse_GetPulseSpeed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_pulse.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
</UL>

<P><STRONG><a name="[5ed]"></a>VDRPulse_GetSecondSpeed</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = VDRPulse_GetSecondSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_GetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlOil_TimeTask
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckIsPhoneServerRunStatus
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
</UL>

<P><STRONG><a name="[3ad]"></a>VDRPulse_GetTotalMile</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_pulse.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_GetCurTotalMeter
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetCurDistance
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurTotalMile
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_GetCurDistance
<LI><a href="#[a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE1H
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_AckE1H
</UL>

<P><STRONG><a name="[a1f]"></a>VDRPulse_AddMile</STRONG> (Thumb, 358 bytes, Stack size 40 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = VDRPulse_AddMile &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_InsertCurPulseVal
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_ExtiIsr
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_ExtiIsr
</UL>

<P><STRONG><a name="[a20]"></a>VDRPulse_CalInstantSpeed</STRONG> (Thumb, 352 bytes, Stack size 80 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = VDRPulse_CalInstantSpeed &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_InsertCurPulseVal
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_ExtiIsr
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_ExtiIsr
</UL>

<P><STRONG><a name="[816]"></a>VDRPulse_TimIsr</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = VDRPulse_TimIsr &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_InsertCurPulseVal
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[819]"></a>VDRPulse_ExtiIsr</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = VDRPulse_ExtiIsr &rArr; VDRPulse_CalInstantSpeed &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_CalInstantSpeed
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[3ab]"></a>VDRSpeed_GetCurSpeedType</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vdr_speed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_GetCurTotalMeter
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetCurDistance
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurTotalMile
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_GetCurDistance
</UL>

<P><STRONG><a name="[171]"></a>VDRSpeed_GetCurSpeed</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, vdr_speed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = VDRSpeed_GetCurSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeedType
<LI><a href="#[a8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetSecondSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Speed
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetCurSpeed
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_UpdateCurStatusInfo
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
<LI><a href="#[a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmdE1H
<LI><a href="#[a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_JudgeRunOrStop
<LI><a href="#[a57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_OnceRunReport
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_StopAlarm
<LI><a href="#[a43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_OnceOverReport
<LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsAlarm
<LI><a href="#[a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsEarlyAlarm
</UL>

<P><STRONG><a name="[a8c]"></a>VDRSpeed_UpdateParameter</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, vdr_speed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = VDRSpeed_UpdateParameter &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_UpdateParameter
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_ClearOldPoint
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_UpdatePram
</UL>
<BR>[Called By]<UL><LI><a href="#[a8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Init
</UL>

<P><STRONG><a name="[5b]"></a>VDRSpeed_TimeTask</STRONG> (Thumb, 758 bytes, Stack size 72 bytes, vdr_speed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = VDRSpeed_TimeTask &rArr; VDRSpeed_Init &rArr; VDRSpeed_UpdateParameter &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadExtCarStatusBit
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Init
<LI><a href="#[a8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_SaveMinuteSpeed
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadInitFlag
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[a60]"></a>VDRSpeed_GetMinuteSpeed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_speed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_SavePosition
</UL>

<P><STRONG><a name="[7c9]"></a>VDRSpeed_Get15MinuteSpeed</STRONG> (Thumb, 468 bytes, Stack size 96 bytes, vdr_speed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = VDRSpeed_Get15MinuteSpeed &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_HEX2BCD
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show15MinSpeedInit
</UL>

<P><STRONG><a name="[60]"></a>VDRSpeedStatus_TimeTask</STRONG> (Thumb, 484 bytes, Stack size 40 bytes, vdr_speedstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = VDRSpeedStatus_TimeTask &rArr; VDRSpeedStatus_Write &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_Init
<LI><a href="#[a8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_CheckEnableFlag
<LI><a href="#[a8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_Write
<LI><a href="#[a91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetPulseSpeed
<LI><a href="#[a8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetSecondSpeed
<LI><a href="#[a2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadInitFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[454]"></a>VDRSpeedStatus_GetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_speedstatus.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetSecondSpeed
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetInstantSpeed
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
</UL>

<P><STRONG><a name="[a22]"></a>VDRUsart_SendData</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, vdr_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = VDRUsart_SendData &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_TimeTask
<LI><a href="#[a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_SendCmd
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_AckE1H
</UL>

<P><STRONG><a name="[57]"></a>VDRUsart_TimeTask</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, vdr_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1768 + Unknown Stack Size
<LI>Call Chain = VDRUsart_TimeTask &rArr; VDRProtocol_Parse &rArr; VDRProtocol_ParseCmd &rArr; VDRProtocol_ParseCmdD0H &rArr; RadioProtocol_WritePram &rArr; E2ParamApp_DisposeWriteParam &rArr; DriverInfo_DisposeRadioProtocol &rArr; DriverInfoAdd &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueOutBuffer
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartRx
<LI><a href="#[a85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_Parse
<LI><a href="#[a3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_Write
<LI><a href="#[a22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskschedule.o(.data)
</UL>
<P><STRONG><a name="[755]"></a>VDRUsart_Init</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, vdr_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = VDRUsart_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
</UL>

<P><STRONG><a name="[818]"></a>VDRUsart_Isr</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, vdr_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = VDRUsart_Isr &rArr; VDRUsart_TxIsr &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[a93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_RxIsr
<LI><a href="#[a92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_TxIsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[8ab]"></a>VDRUsb_CreatVdrFile</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, vdr_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1204 + Unknown Stack Size
<LI>Call Chain = VDRUsb_CreatVdrFile &rArr; VDRUsb_SaveVerifyCode &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOn
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioOutOff
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[a9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm
<LI><a href="#[a99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveBlockNum
<LI><a href="#[a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveNoPacketData
<LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SavePacketData
<LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveVerifyCode
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[a3b]"></a>Vdr_Usb_UniNm2</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, vdr_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = Vdr_Usb_UniNm2 &rArr; Public_ConvertNowTimeToBCDEx &rArr; Public_ConvertTimeToBCDEx &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCDEx
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
</UL>

<P><STRONG><a name="[a9b]"></a>b_queue_init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, b_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = b_queue_init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[aa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_init
</UL>

<P><STRONG><a name="[ab6]"></a>lock_b_queue</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, b_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[abb]"></a>unlock_b_queue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, b_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[ab7]"></a>out_b_queue</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, b_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = out_b_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[aa6]"></a>in_b_queue</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, b_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = in_b_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__print
</UL>

<P><STRONG><a name="[ab9]"></a>read_b_queue_fst_byte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, b_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[ab5]"></a>is_queue_enmty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, b_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_print_finished
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[a9c]"></a>image_conv</STRONG> (Thumb, 180 bytes, Stack size 88 bytes, font.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[a9d]"></a>zoom_hz</STRONG> (Thumb, 618 bytes, Stack size 624 bytes, font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = zoom_hz &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dot_image_Flash
</UL>

<P><STRONG><a name="[a9e]"></a>get_dot_image</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_dot_image
</UL>
<BR>[Calls]<UL><LI><a href="#[a9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_font_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dot_image_Flash
</UL>

<P><STRONG><a name="[cc5]"></a>ziku_EnglishConversion</STRONG> (Thumb, 142 bytes, Stack size 28 bytes, font.o(.text), UNUSED)

<P><STRONG><a name="[aa1]"></a>ziku_ChineseConversion</STRONG> (Thumb, 148 bytes, Stack size 28 bytes, font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ziku_ChineseConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dot_image_Flash
</UL>

<P><STRONG><a name="[aa0]"></a>get_dot_image_Flash</STRONG> (Thumb, 104 bytes, Stack size 96 bytes, font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = get_dot_image_Flash &rArr; zoom_hz &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ReadOneChineseCharacterFromFlash
<LI><a href="#[aa1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ziku_ChineseConversion
<LI><a href="#[a9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dot_image
<LI><a href="#[a9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zoom_hz
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[cc6]"></a>image_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, font.o(.text), UNUSED)

<P><STRONG><a name="[aa3]"></a>set_print_param</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, printer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_init
</UL>

<P><STRONG><a name="[aa5]"></a>printer_status</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = printer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
<LI><a href="#[aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__print
</UL>

<P><STRONG><a name="[abc]"></a>heater_detect_tick</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = heater_detect_tick &rArr; is_too_hot &rArr; computer_temperature
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_too_hot
<LI><a href="#[abd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;force_start_T_datect
<LI><a href="#[aa9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_print
</UL>
<BR>[Called By]<UL><LI><a href="#[ad6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_irq
</UL>

<P><STRONG><a name="[765]"></a>is_print_finished</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = is_print_finished
</UL>
<BR>[Calls]<UL><LI><a href="#[ab5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_queue_enmty
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrint
</UL>

<P><STRONG><a name="[762]"></a>ptr_pwr_ctrl</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ptr_pwr_ctrl &rArr; stop_print &rArr; close_ptr_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[abe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_on
<LI><a href="#[abf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_off
<LI><a href="#[aa9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_print
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMainInterface
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintstart
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintend
</UL>

<P><STRONG><a name="[ac0]"></a>fmt_print</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = fmt_print &rArr; vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__print
<LI><a href="#[ac1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
</UL>

<P><STRONG><a name="[4b3]"></a>print_ctrl_task</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = print_ctrl_task &rArr; print_ctrl &rArr; get_dot_image_Flash &rArr; zoom_hz &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[ac2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_detect_tick
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_printer
</UL>

<P><STRONG><a name="[756]"></a>print_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = print_init &rArr; printer_init &rArr; b_queue_init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_cfg
<LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_io_init
<LI><a href="#[aa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInit
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintstart
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintend
<LI><a href="#[ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_printer
</UL>

<P><STRONG><a name="[cc7]"></a>Print_TimeTask</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printer.o(.text), UNUSED)

<P><STRONG><a name="[ac4]"></a>_ptr_ctrl</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _ptr_ctrl &rArr; ptr_ctrl &rArr; ptr_heat &rArr; strobe_time &rArr; computer_heat_time
</UL>
<BR>[Calls]<UL><LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[ad6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_irq
</UL>

<P><STRONG><a name="[764]"></a>printer_task</STRONG> (Thumb, 1242 bytes, Stack size 96 bytes, printer_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = printer_task &rArr; VDROvertime_Get2daysLog &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_GetFlag
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_Get15MinuteSpeed
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Get2daysLog
<LI><a href="#[a02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetExternalDriverName
<LI><a href="#[aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ptr_timer
<LI><a href="#[abe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_on
<LI><a href="#[abd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;force_start_T_datect
<LI><a href="#[aaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_ptr_timer
<LI><a href="#[ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmt_print
<LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_status
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ac7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd_to_dec
<LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conv_time_str
<LI><a href="#[ac6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dectostr
</UL>
<BR>[Called By]<UL><LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskMenuPrintstart
<LI><a href="#[ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_printer
</UL>

<P><STRONG><a name="[ac8]"></a>test_printer</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, printer_test.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl_task
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_init
</UL>

<P><STRONG><a name="[aba]"></a>ptr_io_init</STRONG> (Thumb, 350 bytes, Stack size 8 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ptr_io_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ac9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_init
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[aca]"></a>ptr_pwr_ctrl_tick</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ptr_pwr_ctrl_tick
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ad6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_irq
</UL>

<P><STRONG><a name="[abe]"></a>ptr_pwr_on</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ptr_pwr_on
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
</UL>

<P><STRONG><a name="[abf]"></a>ptr_pwr_off</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ptr_pwr_off
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl
</UL>

<P><STRONG><a name="[cc8]"></a>ptr_step_into</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ptr_stepmotor_ctrl.o(.text), UNUSED)

<P><STRONG><a name="[aaf]"></a>ptr_step_finished</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
</UL>

<P><STRONG><a name="[acb]"></a>ptr_step_tick</STRONG> (Thumb, 572 bytes, Stack size 8 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ptr_step_tick
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[ad6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_irq
</UL>

<P><STRONG><a name="[aae]"></a>ptr_step</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
</UL>

<P><STRONG><a name="[ab0]"></a>write_ptr</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = write_ptr &rArr; ptr_port_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[acc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_port_send_byte
<LI><a href="#[acd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
</UL>

<P><STRONG><a name="[11e]"></a>tp_paper_detect</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tp_paper_detect
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printer.o(.text)
</UL>
<P><STRONG><a name="[ad0]"></a>computer_heat_time</STRONG> (Thumb, 168 bytes, Stack size 20 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = computer_heat_time
</UL>
<BR>[Called By]<UL><LI><a href="#[ace]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strobe_time
</UL>

<P><STRONG><a name="[ab2]"></a>ptr_heat</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ptr_heat &rArr; strobe_time &rArr; computer_heat_time
</UL>
<BR>[Calls]<UL><LI><a href="#[ace]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strobe_time
</UL>
<BR>[Called By]<UL><LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
</UL>

<P><STRONG><a name="[ad1]"></a>ptr_heat_tick</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ptr_heat_tick
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ad6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_irq
</UL>

<P><STRONG><a name="[ab3]"></a>ptr_heat_finished</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
</UL>

<P><STRONG><a name="[ad3]"></a>init_temperature</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ptr_temperature.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[ac2]"></a>temperature_detect_tick</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, ptr_temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = temperature_detect_tick &rArr; computer_temperature
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Val
<LI><a href="#[ad2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computer_temperature
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl_task
</UL>

<P><STRONG><a name="[aad]"></a>start_T_datect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ptr_temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = start_T_datect &rArr; start_ptr_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ptr_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[abd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;force_start_T_datect
<LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
</UL>

<P><STRONG><a name="[abd]"></a>force_start_T_datect</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ptr_temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = force_start_T_datect &rArr; start_T_datect &rArr; start_ptr_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[aad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_T_datect
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heater_detect_tick
</UL>

<P><STRONG><a name="[ab1]"></a>get_temperature</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ptr_temperature.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
</UL>

<P><STRONG><a name="[aac]"></a>is_T_detect_finished</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ptr_temperature.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_ctrl
</UL>

<P><STRONG><a name="[11d]"></a>is_too_hot</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ptr_temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = is_too_hot &rArr; computer_temperature
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[ad2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computer_temperature
</UL>
<BR>[Called By]<UL><LI><a href="#[abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heater_detect_tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printer.o(.text)
</UL>
<P><STRONG><a name="[ac3]"></a>ptr_timer_cfg</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, ptr_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ptr_timer_cfg &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PrescalerConfig
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[ad5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetAutoreload
<LI><a href="#[ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_init
</UL>

<P><STRONG><a name="[aa8]"></a>start_ptr_timer</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ptr_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = start_ptr_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[aad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_T_datect
<LI><a href="#[aa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_print
</UL>

<P><STRONG><a name="[aaa]"></a>close_ptr_timer</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ptr_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = close_ptr_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[aa9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_print
</UL>

<P><STRONG><a name="[ad6]"></a>ptr_timer_irq</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, ptr_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ptr_timer_irq &rArr; _ptr_ctrl &rArr; ptr_ctrl &rArr; ptr_heat &rArr; strobe_time &rArr; computer_heat_time
</UL>
<BR>[Calls]<UL><LI><a href="#[ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ptr_ctrl
<LI><a href="#[abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heater_detect_tick
<LI><a href="#[ad1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_heat_tick
<LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_step_tick
<LI><a href="#[aca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl_tick
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[cd]"></a>TIM6_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ptr_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = TIM6_IRQHandler &rArr; ptr_timer_irq &rArr; _ptr_ctrl &rArr; ptr_ctrl &rArr; ptr_heat &rArr; strobe_time &rArr; computer_heat_time
</UL>
<BR>[Calls]<UL><LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[ad7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[ad6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_timer_irq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_cl.o(RESET)
</UL>
<P><STRONG><a name="[ad8]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[ae3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[682]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[ad9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[ada]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>
<BR>[Called By]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate5
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate4
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate3
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate2
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueCreate1
</UL>

<P><STRONG><a name="[68a]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[ad9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueueDispose
<LI><a href="#[af2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[ac1]"></a>vsprintf</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, vsprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[adb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmt_print
</UL>

<P><STRONG><a name="[970]"></a>vsnprintf</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, vsnprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[adb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
</UL>

<P><STRONG><a name="[2ff]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[adb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCDEx
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_cmd_String
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayNumber16
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInitLimit
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfo_DisposeRadioProtocol
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_RadioProtocolQuestionDownload
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTiredDriverAutoLog
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetTiredDriveRecord
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_LcdShowTime
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowTurnSpeedValue
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MainInterface
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOnlyBigSpeed
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowSafetyCaution
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_GetContDriveTimeStr
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Second_connect_To_Specific_Server
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_connect_To_Specific_Server
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowValue
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBCDEx
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBCD
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBCDEx
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBCD
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCD
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertStrToASC
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCallRecordIndex
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneBookIndex
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowCallTalking
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStr
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckPackVoiceStr
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCarInfo
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecord
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show15MinSpeed
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoIndex
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoServiceIndex
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriveMile
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProductInfo
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQueryServerParameter
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentReportMode
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemShowTerminalID
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemCameraInfo
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemWeightCollector
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAndCheckPhoneNumber
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadAndWriteOnefileToUsb
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Clvl
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Vts
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Clvl
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Audch
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Aud
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Sms
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpDown
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpLogin
<LI><a href="#[9a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpData
<LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpClose
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpSta
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Apn
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_Q
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Value
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpVal
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsSta
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Value
<LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsAlarm
</UL>

<P><STRONG><a name="[add]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ae2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[b01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[afe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[ae1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[ade]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ae2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[b01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[afe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[ae1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[adf]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[ae0]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[adc]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[add]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[b02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[135]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[adf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[ae1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[ae2]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[add]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[ae3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[b03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[ae4]"></a>_printf_longlong_oct</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[139]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[141]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[ae5]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[13b]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[143]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[12d]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[ae6]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[ae7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[adb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[6ab]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[ae9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertStrToIP
<LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_RecCmd
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_RecData_ZTE
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_RecData_Q
<LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenSms
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_ZTE
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Search
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Heartbeat
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_ReportTime
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Ip
</UL>

<P><STRONG><a name="[2f9]"></a>atol</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[ae9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseSet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMaxCalib
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepMinCalib
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDeepBaseCalib
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentDriverParameter
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_ProtocolParse
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTurnSpeedPulseNum
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordKeyResponse
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataTCPPort
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataUDPPort
</UL>

<P><STRONG><a name="[483]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_ProtocolParse
</UL>

<P><STRONG><a name="[41f]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_A
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFullWAVFileName
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFullJPEGFileName
</UL>

<P><STRONG><a name="[1f5]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetFileName
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRectArea
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_ScanRoundArea
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadParam
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_cmd_String
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsg
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShowEx
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_UpdateParameter
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssCheckChangePar
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneInformation
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeRecvDataResponse
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_CheckDailPhone
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetDriverSpeedRecord
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetTiredDriveRecord
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetDriverInfo
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAVWithID
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEGWithID
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFullWAVFileName
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFullJPEGFileName
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPhoneInformation
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDefaultValue
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSignNum
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Second_connect_To_Specific_Server
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurentProductModel
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_connect_To_Specific_Server
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SingleMemoryIndex
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_ScanArea
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TakeCallMonitorServerPhone
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_DisposeNewCallPhone
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_Printf
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffExternal
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendShortMessage
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTextInfoIndex
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoServiceIndex
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQuestionListIndex
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEventReportInfoIndex
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInformationDemandIndex
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicConfirmAll
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataGpsMode
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[9fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateMonitor
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetLoginInfo
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Check
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Rec
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadApn
<LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_SocIP
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Aud
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Sms
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpDown
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpLogin
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Apn
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Sms
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_IP
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Value
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Num
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_IP
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Value
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Dt
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Ftp
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleAlarm
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
<LI><a href="#[a47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleNightRunVoice
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask2
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask2
</UL>

<P><STRONG><a name="[353]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCDEx
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetFileName
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_A
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadParam
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsgEx
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowMsg
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowWaitPlease
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowButton
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawStr
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssCheckChangePar
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_DefaultSet
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowStr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_RadioProtocolQuestionDownload
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdCurrentDriverInfo
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdShowTempText
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewCallPhone
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetFixPhrase
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendFixText
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetDriverSpeedRecord
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetTiredDriveRecord
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetDriverInfo
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfo
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoAll
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInfoDemand
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEventReport
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneBook
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPhoneInformation
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDefaultValue
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_Find
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SignDelFlag
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSignNum
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_FindCurFolder
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowTurnSpeedValue
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowOnlyBigSpeed
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinInit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SingleMemoryIndex
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerGeneralAck
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalAttribute
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_TTSVoiceStr
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCD
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneIsSpecialNumber
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskShowMakeNewDial
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffExternal
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PlayMulTTSVoiceStrbase
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStr
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckPackVoiceStr
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendShortMessage
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentIOstatus
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Check
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Atd
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadUserPass
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadApn
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduEncode
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartStr
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmpEx
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenTts
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmy
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpVal
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsSta
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DeviceId
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DevicePhone
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Alarm
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Dt
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Dt
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ChkIp
<LI><a href="#[a9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm
<LI><a href="#[a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd82H
<LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm2
</UL>

<P><STRONG><a name="[3d9]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_RxIsr
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDriverInfoForLogin
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberForCheckData
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberEx
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumber
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTerminalFirmwareVersion
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_ProtocolParse
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPeripheralUpdataType
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckSystemLogoAndVerSion
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiCenterConnect_TimeTask
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoiceLoad
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushAdministratorCardResponse
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateNumber
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarVinNumber
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarPlateType
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetAPN
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAndCheckTerminalPhoneNumber
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataGpsMode
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmpEx
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenTts
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpVal
</UL>

<P><STRONG><a name="[4c1]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchWAVWithID
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchJPEGWithID
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFullWAVFileName
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFullJPEGFileName
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIDFileName
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_TimeTask
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProductInfo
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Audch
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_PrtfSta
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Dt
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
</UL>

<P><STRONG><a name="[161]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_SentCmd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A2OBD_RadioProtocolOriginalDataUpTrans
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataBatchInsert
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueDataBatchDelete
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_GetExternalDriverName
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_AuthenticationAck
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_ParseCmd
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_SendCmd
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogin
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_CameraProtocolParse
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_SendData
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Report
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Report
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetInOutAreaAlarmSubjoinInfo
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilLevelPercent
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilVolume
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_OilProtocolCheck
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_CopyBuf
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_A
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Process_CMD_A
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Protocol_Extract
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_SendData
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_CheckReckData
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_WriteOneGnssDataToFlash
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_DisposeRadioProtocol
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_PotocolPackData
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_RadioProtocolParse
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadOneParam
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_GetSubjoinInfoCurDeepVal
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_ComRec
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_RadioProtocolQuestionDownload
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendDataToWriteICcard
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdCallTaxiDetail
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewCallTaxi
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdCurrentDriverInfo
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdInfoService
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQuestionDisplay
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdQuestionDisplayEx
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewText
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdSendCmdNewCallPhone
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdProtocolParse
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSetTerminalParamter
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryTerminalParamter
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetFixPhrase
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendFixText
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeSendTickleInfo
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_GetTiredDriveRecord
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommResendData
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommSendData
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoModify
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoAdd
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoUpdate
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_GetOnePhoneBookContent
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_ReadOneData
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuestionResponse_SaveOneData
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_ReadOneData
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_SaveOneData
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentDriverParameter
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfo
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoAll
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInfoDemand
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEventReport
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneBook
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPhoneInformation
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModify
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoModifyDriverCodeAndPassword
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DriverInfoAdd
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDriverInfoForLogin
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberForCheckData
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumberEx
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDriverInfoRecordNumber
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandModify
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandAdd
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandUpdate
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromInfoDemand
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDefaultValue
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportModify
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportAdd
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportUpdate
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressFromEventReport
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookModify
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookAdd
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookUpdate
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkmanAddressFromPhoneBook
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaSearch_GetMediaIndexInformation
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_PosEx
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegister
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplaySystemTest
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ShowText_EvTask
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDeviationAlarmInfo
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_GetSubjoinInfoCurTurnSpeedVal
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetInOutAlarmSubjoinInfo
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDriveAlarmInfoSubjoinInfo
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_RecData
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Question_DisposeRadioProtocol
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoService_DisposeRadioProtocol
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurentProductModel
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IC_Card_Radio_Heartbeat
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_Packet_ICCard_AuthInfo
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DataCompressUpTrans
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRSA
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DriverInformationUploadRequest
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CarControl
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TextMessageDownload
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ParamQueryAll
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalRegisterAck
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalAttribute
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ModifyCurCallRecord
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_ReadOneCallRecordData
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_SaveOneCallRecordData
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_HandleCmd8108H
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GanSuOil_GetOnePacketData
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GanSuOil_OilProtocolCheck
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffInternal
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStr
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_ComSend
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetLicense
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Get2daysLog
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushAdministratorCardResponse
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTiredDriveRecord
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[a02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetExternalDriverName
<LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetReportInfo
<LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetLicense
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetLoginInfo
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_Apn_Set
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadUserPass
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadApn
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduEncode
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRetEx
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRet
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_PrtfSta
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduDecode
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_ZTE
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Search
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_ConTo
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Value
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmy
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpVal
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_VerNo
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DeviceId
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DevicePhone
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Ip
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_ConTo
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Value
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Dt
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Dt
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodIns
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
<LI><a href="#[aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dot_image_Flash
<LI><a href="#[a9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zoom_hz
<LI><a href="#[a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_conv
<LI><a href="#[a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveNoPacketData
<LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SavePacketData
<LI><a href="#[a83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd01H
<LI><a href="#[a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd04H
<LI><a href="#[a7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd05H
<LI><a href="#[a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_SendCmd
<LI><a href="#[a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_GetCurHourPosition
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetUnsaveLog
<LI><a href="#[a22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_SendData
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_AckE1H
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadList
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
<LI><a href="#[aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[aeb]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[cc9]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[4c3]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransMean
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unTransMean
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdParseResultForRecvLen
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DeleteOneDriverInfo
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDelEx
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[a33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_Packet
</UL>

<P><STRONG><a name="[aec]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[aed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[cca]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[270]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateCheck
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StatePhoto
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateFetch
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSend
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateTiming
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Request_CMD_A
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_RxIsr
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WriteAllPram
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_Gmtime
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToAsc
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalQualify
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowDeepValue
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Second_connect_To_Specific_Server
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_connect_To_Specific_Server
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCarInfo
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Audch
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Aud
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteStrEx
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DeviceId
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DevicePhone
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Alarm
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteStr
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadCurrentDriverInfo
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Write
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightWrite
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveAllDriverInfo
<LI><a href="#[aee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[aeb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[ccb]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ccc]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ccd]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[277]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSend
</UL>

<P><STRONG><a name="[cce]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[aee]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[aed]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[ccf]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[361]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[aef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShowEx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAutoShowQuestionResponse
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarOwnerPhone
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
</UL>

<P><STRONG><a name="[43e]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost_Init
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Vts
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_ParameterInitialize
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcdCommParamInit
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DeleteOneDriverInfo
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Messege_DriverInfoUpdate
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoDemandUpdate
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportDefaultValue
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventReportUpdate
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookUpdate
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalControl
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStr
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckPackVoiceStr
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadUserPass
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadApn
<LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRst
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodRet
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_NetCfg
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenPhone
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Sms
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ccid
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Search
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodInit
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpVal
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Dt
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Sms_Dt
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Ath
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Phone_Atd
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[af0]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[aef]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[183]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_CollectApp_TimeTask
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Dma_Config
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_Config
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMM_Initialize
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Rx_Isr
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TimeTask
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Save
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Save
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetInOutAreaAlarmSubjoinInfo
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRoundArea
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_SaveOneRectArea
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBeat_TimeTask
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConfigGNSS
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gnss_ReadParam
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EIExpand_RadioProtocolParse
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GnssCheckChangePar
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteSpecialParam
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadTimeParam
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_WriteTimeParam
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_ParameterInitialize
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_FindSDcardFileAndSaveToUdisk
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_WriteDriverInfoToICcard
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_QueryOrSaveTerminalParamter
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NaviLcd_DisposeQueryWorkStatus
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckWAVEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckJPEGEvent
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_UploadTimeTask
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicSysParamterInit
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OpenAccount
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_ReadAndCheckParam
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDeviationAlarmInfo
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetInOutAlarmSubjoinInfo
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDriveAlarmInfoSubjoinInfo
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Second_connect_To_Specific_Server
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_DisposeSetRoad
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpStart
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurentProductModel
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_connect_To_Specific_Server
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ServerRSA
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_CameraPhoto
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_SaveCurSIMICcidNumberToE2Param
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_SaveOneArea
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_ParamInitialize
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Phone_CallBackPhone
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurSIMICcidNumberToE2Param
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetMainDomainName
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpDomainName
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskQueryPeripheralInform
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataGpsMode
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainIp
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainApn
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackupIp
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackApn
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataTCPPort
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataUDPPort
<LI><a href="#[9f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodIns
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodRst
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Tts_Clvl
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Clvl
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Audch
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Ip_Send
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadUserPass
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_ReadApn
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduEncode
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_PrtfSta
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Debug_UartPro
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Init
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduDecode
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpDown
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_FtpLogin
<LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpClose
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Apn
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisRec
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_NodInit
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_IP
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Second_Value
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsDB
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_FtpVal
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsSta
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsRst
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DeviceId
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_DevicePhone
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Ip
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Num
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Set_Alarm
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_IP
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_First_Value
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Net_Other_SmsCall
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Socket_Open
<LI><a href="#[aa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_init
<LI><a href="#[a9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zoom_hz
<LI><a href="#[a9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_queue_init
<LI><a href="#[a9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm
<LI><a href="#[a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveNoPacketData
<LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveVerifyCode
<LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_UniNm2
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_AckE1H
<LI><a href="#[ad3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_temperature
</UL>

<P><STRONG><a name="[cd0]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[cd1]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[af1]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[54d]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchWAV
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SearchJPEG
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuffExternal
</UL>

<P><STRONG><a name="[4df]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBook_CheckPhoneCallResult
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPhoneInformation
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinkmanAddressFromPhoneBook
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckPhoneIsSpecialNumber
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[cd2]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ad9]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[14f]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[afe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[ae9]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[b07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[af6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[cd3]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[cd4]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[cd5]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[cd6]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[ada]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[af2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[af3]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[14d]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[ad9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[af2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[af5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[af5]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[2]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[af6]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __read_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[ae9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[af7]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[ae9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[b2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[b2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[ae1]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[add]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ae5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[12b]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[cd7]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[afe]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[add]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[aff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[b01]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[add]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[aff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[adb]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ae6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[ac1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>

<P><STRONG><a name="[120]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[ac1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> vsprintf.o(.text)
<LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[121]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> vsnprintf.o(.text)
</UL>
<P><STRONG><a name="[b02]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[145]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[147]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[b03]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[ae2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[149]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[b03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[14b]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[b03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[13d]"></a>_printf_longlong_dec</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[afd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[ae1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[b06]"></a>__strtod_int</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[aea]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[ae9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[b07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[ae3]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[ae2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[cd8]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[b0b]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[cd9]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[af2]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[ada]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[afd]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[125]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[b00]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[add]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[b01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[afe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[123]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[124]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[b07]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[ae9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[af9]"></a>_btod_etento</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[afb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[af4]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[b0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[af3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[cda]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[cdb]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[cdc]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[154]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[b0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[b08]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[b07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[b10]"></a>_scanf_really_real</STRONG> (Thumb, 668 bytes, Stack size 120 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[ae7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[b13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[b11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
<LI><a href="#[b12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
<LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>
<BR>[Called By]<UL><LI><a href="#[b05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>

<P><STRONG><a name="[159]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b0a]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[b09]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[15d]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[b0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[b15]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[b09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[b16]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[b15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[b17]"></a>_scanf_really_hex_real</STRONG> (Thumb, 786 bytes, Stack size 80 bytes, scanf_hexfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[b19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
<LI><a href="#[b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[b13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[b12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>

<P><STRONG><a name="[b54]"></a>_scanf_really_infnan</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, scanf_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[b11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
</UL>

<P><STRONG><a name="[b18]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[cdd]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[afa]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[b1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b1b]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[b1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[b1a]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[b1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[afa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[b1e]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[afb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[b1c]"></a>_e2d</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, btod.o(CL$$btod_e2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[b0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
</UL>

<P><STRONG><a name="[b1d]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[afb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>

<P><STRONG><a name="[afb]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[b1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[af9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b0f]"></a>_btod_edivd</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_edivd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_edivd &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
<LI><a href="#[b1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[afc]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[b1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[af9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b0e]"></a>_btod_emuld</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emuld))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_emuld &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>
<BR>[Called By]<UL><LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[b1f]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[b0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[aff]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[afe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[b20]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 828 bytes, Stack size 128 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[b22]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[b23]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[b24]"></a>__kernel_sin</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[aff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[b25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[b26]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[b27]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[b28]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[b29]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[b2a]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Calls]<UL><LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[b2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>

<P><STRONG><a name="[b25]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[b2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[b13]"></a>__mathlib_narrow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, narrow.o(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __mathlib_narrow &rArr; __mathlib_tofloat &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[b2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>
<BR>[Called By]<UL><LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[b2b]"></a>__mathlib_tofloat</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, narrow.o(i.__mathlib_tofloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_tofloat &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[b13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[b19]"></a>__support_ldexp</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ldexp.o(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[b2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[ae7]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[ae6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[268]"></a>acos</STRONG> (Thumb, 574 bytes, Stack size 40 bytes, acos.o(i.acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = acos &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[b29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
</UL>

<P><STRONG><a name="[6d2]"></a>asin</STRONG> (Thumb, 572 bytes, Stack size 56 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = asin &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[aff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[b25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[b29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
</UL>

<P><STRONG><a name="[366]"></a>atof</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, atof.o(i.atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[af6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_ProtocolParse
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
</UL>

<P><STRONG><a name="[305]"></a>cos</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[b29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_CalDistance
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_CalDistance
</UL>

<P><STRONG><a name="[367]"></a>floor</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
</UL>

<P><STRONG><a name="[b2c]"></a>frexp</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, frexp.o(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = frexp
</UL>
<BR>[Calls]<UL><LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[b2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[b2d]"></a>ldexp</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ldexp.o(i.ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[b25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[b2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[b19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[6d1]"></a>pow</STRONG> (Thumb, 2512 bytes, Stack size 128 bytes, pow.o(i.pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[aff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[b25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[b2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[b29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[b26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
</UL>

<P><STRONG><a name="[304]"></a>sin</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[b29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_CalDistance
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_CalDistance
</UL>

<P><STRONG><a name="[2ef]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[b2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_CalDistance
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNearestDistance
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_CalDistance
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[11f]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[152]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[254]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_ProtocolParse
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_CalInstantSpeed
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
<LI><a href="#[b2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[b2f]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[256]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_DecimalDegree
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNearestDistance
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CalTrigonOrientation
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_GetPoint
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
</UL>

<P><STRONG><a name="[b32]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[b35]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[b36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[b39]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[251]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_CalDistance
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_DecimalDegree
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNearestDistance
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CalTrigonOrientation
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_GetPoint
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_CalDistance
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_CalInstantSpeed
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[b29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[b26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
</UL>

<P><STRONG><a name="[b37]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[522]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_InitialLonLat
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CalTrigonOrientation
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[b2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[b2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[b38]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[b39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[527]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_GpsPosSpeedCount
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[b3a]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1a5]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalDotDotMile
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_GetTotalMile
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMileSum
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
</UL>

<P><STRONG><a name="[b3b]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[2ed]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[cde]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[1e6]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundComparePos
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_UpdatePram
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_DecimalDegree
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckIsInRoute
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CalTrigonOrientation
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriveMile
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_GetPoint
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[cdf]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[1e7]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_RoundComparePos
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_CheckIsInRoute
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNearestDistance
</UL>

<P><STRONG><a name="[b3c]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[b39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[b3f]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[250]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ParamApp_ReadSpecialParam
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_UpdatePram
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_CalDistance
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNearestDistance
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CalTrigonOrientation
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDriveMile
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_CalDistance
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_CalInstantSpeed
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[b3d]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[b31]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[b3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[b3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[b3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[b37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[b42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[b32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[b2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[b2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[b34]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[b3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[b37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[b32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[267]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_TimeTask
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_CalDistance
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CalTrigonOrientation
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CalcCurTurnSpeed
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_CalDistance
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[b2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[b3e]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[2ee]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_CalDistance
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_CalDistance
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[b40]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[b2e]"></a>_dsqrt</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, dsqrt_noumaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[306]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_GpsPosSpeedCount
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_CalDistance
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetNearestDistance
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDistance
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polygon_CalTrigonOrientation
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_CalDistance
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[b42]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[255]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowLoadValue
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowSaveDataProBar
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CalcCurTurnSpeed
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemWeightCollector
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_CalInstantSpeed
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
</UL>

<P><STRONG><a name="[b43]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[264]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
</UL>

<P><STRONG><a name="[b45]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[b49]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[266]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CalcCurTurnSpeed
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemWeightCollector
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
</UL>

<P><STRONG><a name="[b47]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[269]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
</UL>

<P><STRONG><a name="[b48]"></a>_fcmpeq</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[b49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[80b]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CalcCurTurnSpeed
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_CalInstantSpeed
</UL>

<P><STRONG><a name="[b4a]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[258]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_GetAngle
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_ProtocolParse
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
</UL>

<P><STRONG><a name="[b4b]"></a>_ffixu</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[178]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_slowdwn_check
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_acce_check
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
</UL>

<P><STRONG><a name="[ce0]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[179]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_slowdwn_check
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_acce_check
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Calibration
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateRolloverParameter
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinShow
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CalcCurTurnSpeed
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemOilCollector
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_CalInstantSpeed
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_AddMile
</UL>

<P><STRONG><a name="[ce1]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[17a]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_slowdwn_check
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_acce_check
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
</UL>

<P><STRONG><a name="[b4c]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[b49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[b4f]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[257]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_ProtocolParse
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
</UL>

<P><STRONG><a name="[b4d]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[b44]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[b4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[b4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
<LI><a href="#[b47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[b52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[b45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[b43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[b30]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[b47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[b45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[b2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[263]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
</UL>

<P><STRONG><a name="[b4e]"></a>_frcmple</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmple_InfNaN
</UL>

<P><STRONG><a name="[303]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_CalcCurTurnSpeed
</UL>

<P><STRONG><a name="[b50]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[b51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[265]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcCurDeepLength
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_CalcDeepParam
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayTemperature
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTemperatureCollector
</UL>

<P><STRONG><a name="[b52]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[12f]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[afe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[133]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[b36]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[b53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[b35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[b21]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[b35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[b2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[b25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[b2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[b05]"></a>_scanf_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf1.o(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<BR>[Called By]<UL><LI><a href="#[b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[b12]"></a>_scanf_hex_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[b11]"></a>_scanf_infnan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_infnan &rArr; _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[b53]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[b36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[172]"></a>Emer_Acce_Occur_Report</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = Emer_Acce_Occur_Report &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreeEmerCleckAlarmBit
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreeEmerAlarmBit
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformationReport
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Turn_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_slowdwn_check
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_acce_check
</UL>

<P><STRONG><a name="[175]"></a>Emer_Acce_Clear_Report</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, acceleration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = Emer_Acce_Clear_Report &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreeEmerCleckAlarmBit
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreeEmerAlarmBit
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformationReport
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_TimeTask
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_Turn_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_slowdwn_check
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Emer_acce_check
</UL>

<P><STRONG><a name="[227]"></a>Blind_GetLink2ReportFlag</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, blind.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Report
</UL>

<P><STRONG><a name="[226]"></a>Blind_Link2Report</STRONG> (Thumb, 496 bytes, Stack size 184 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = Blind_Link2Report &rArr; RadioProtocol_PostionInformation_BulkUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformation_BulkUpTrans
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_GetLink2ReportFlag
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
</UL>

<P><STRONG><a name="[229]"></a>Blind_Link2Erase</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = Blind_Link2Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Search
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Erase
</UL>

<P><STRONG><a name="[22c]"></a>Blind_Link1Erase</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaptionEx
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Search
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Erase
</UL>

<P><STRONG><a name="[22d]"></a>Blind_Link2SearchSector</STRONG> (Thumb, 764 bytes, Stack size 192 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = Blind_Link2SearchSector &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeStruct
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Search
</UL>

<P><STRONG><a name="[231]"></a>Blind_Link2Search</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = Blind_Link2Search &rArr; Blind_Link2SearchSector &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2SearchSector
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
</UL>

<P><STRONG><a name="[232]"></a>Blind_UpdateLink2OpenFlag</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Blind_UpdateLink2OpenFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Init
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link2Init
</UL>

<P><STRONG><a name="[234]"></a>Blind_Link2Init</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Blind_Link2Init &rArr; Blind_UpdateLink2OpenFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_UpdateLink2OpenFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
</UL>

<P><STRONG><a name="[236]"></a>Blind_GetLink1ReportFlag</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, blind.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Report
</UL>

<P><STRONG><a name="[235]"></a>Blind_Link1Report</STRONG> (Thumb, 496 bytes, Stack size 184 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = Blind_Link1Report &rArr; RadioProtocol_PostionInformation_BulkUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_PostionInformation_BulkUpTrans
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_GetLink1ReportFlag
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
</UL>

<P><STRONG><a name="[237]"></a>Blind_Link1SearchSector</STRONG> (Thumb, 750 bytes, Stack size 192 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = Blind_Link1SearchSector &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeStruct
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Search
</UL>

<P><STRONG><a name="[238]"></a>Blind_Link1Search</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = Blind_Link1Search &rArr; Blind_Link1SearchSector &rArr; Blind_Erase &rArr; Blind_Link1Erase &rArr; LcdShowCaptionEx &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1SearchSector
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Link1Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
</UL>

<P><STRONG><a name="[239]"></a>Blind_Link1Init</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Blind_Link1Init &rArr; Blind_UpdateLink2OpenFlag &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRunMode
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_UpdateLink2OpenFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_TimeTask
</UL>

<P><STRONG><a name="[23d]"></a>Blind_Link2Save</STRONG> (Thumb, 600 bytes, Stack size 224 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Blind_Link2Save &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeStruct
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Save
</UL>

<P><STRONG><a name="[23e]"></a>Blind_Link1Save</STRONG> (Thumb, 556 bytes, Stack size 224 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Blind_Link1Save &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeStruct
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_Save
</UL>

<P><STRONG><a name="[242]"></a>Blind_StartLink2Report</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, blind.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_StartReport
</UL>

<P><STRONG><a name="[241]"></a>Blind_StartLink1Report</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, blind.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_StartReport
</UL>

<P><STRONG><a name="[243]"></a>Blind_Link2ReportAck</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Blind_Link2ReportAck &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_ReportAck
</UL>

<P><STRONG><a name="[244]"></a>Blind_Link1ReportAck</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, blind.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Blind_Link1ReportAck &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_ReportAck
</UL>

<P><STRONG><a name="[246]"></a>BMA250E_CrashAlarm</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BMA250E_CrashAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_TimeTask
</UL>

<P><STRONG><a name="[249]"></a>BMA250E_Delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bma250e.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_WriteRegisterAndCheck
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_WriteRegister
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadRegister
</UL>

<P><STRONG><a name="[247]"></a>BMA250E_ReadRegister</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BMA250E_ReadRegister &rArr; E2_ReadOneByte &rArr; E2_Check_I2C_Ack &rArr; ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Delay
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_ReadOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_WriteRegisterAndCheck
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadAllRegister
</UL>

<P><STRONG><a name="[24a]"></a>BMA250E_ReadAllRegister</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BMA250E_ReadAllRegister &rArr; BMA250E_ReadRegister &rArr; E2_ReadOneByte &rArr; E2_Check_I2C_Ack &rArr; ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
</UL>

<P><STRONG><a name="[24b]"></a>BMA250E_WriteRegister</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BMA250E_WriteRegister &rArr; E2_WriteOneByte &rArr; E2_Check_I2C_Ack &rArr; ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Delay
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
</UL>

<P><STRONG><a name="[24d]"></a>BMA250E_WriteRegisterAndCheck</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BMA250E_WriteRegisterAndCheck &rArr; BMA250E_ReadRegister &rArr; E2_ReadOneByte &rArr; E2_Check_I2C_Ack &rArr; ICCARD_M3_I2C_CheckAck &rArr; ICCARD_M3_SDA_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadRegister
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Delay
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2_WriteOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_SetGRange
</UL>

<P><STRONG><a name="[24e]"></a>BMA250E_SetGRange</STRONG> (Thumb, 584 bytes, Stack size 48 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ClearInitFlag
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_WriteRegisterAndCheck
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadRegister
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Delay
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_UpdateCrashParameter
</UL>

<P><STRONG><a name="[25a]"></a>BMA250E_InitExit</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BMA250E_InitExit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
</UL>

<P><STRONG><a name="[262]"></a>BMA250E_RolloverAlarm</STRONG> (Thumb, 554 bytes, Stack size 48 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BMA250E_RolloverAlarm &rArr; acos &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadXYZAcceleration
</UL>

<P><STRONG><a name="[26a]"></a>BMA250E_ReadXYZAcceleration</STRONG> (Thumb, 514 bytes, Stack size 88 bytes, bma250e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = BMA250E_ReadXYZAcceleration &rArr; BMA250E_Init &rArr; BMA250E_UpdateCrashParameter &rArr; BMA250E_SetGRange &rArr; Public_ShowTextInfo &rArr; LcdShowMsgEx &rArr; LcdShowCaption &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_Init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_RolloverAlarm
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_ReadRegister
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA250E_TimeTask
</UL>

<P><STRONG><a name="[26d]"></a>Camera_ErrorHandle</STRONG> (Thumb, 506 bytes, Stack size 32 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Camera_ErrorHandle &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[271]"></a>Camera_StateSwitch</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, camera_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_WriteParameter
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleTiming
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_SchedulePhoto
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleFetch
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleCheck
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateCheck
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StatePhoto
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateFetch
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateStore
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSend
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateResend
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateTiming
</UL>

<P><STRONG><a name="[26f]"></a>Camera_StateTiming</STRONG> (Thumb, 344 bytes, Stack size 40 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = Camera_StateTiming &rArr; Public_ConvertTimeToBCDEx &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_SendData
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertTimeToBCDEx
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[275]"></a>Camera_StateResend</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Camera_StateResend
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[276]"></a>Camera_StateSend</STRONG> (Thumb, 610 bytes, Stack size 16 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = Camera_StateSend &rArr; RadioProtocol_MultiMediaDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_MultiMediaDataReport
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTerminalAuthorizationFlag
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[279]"></a>Camera_StateStore</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3372<LI>Call Chain = Camera_StateStore &rArr; Media_SaveLog &rArr; Media_SignDelFlag &rArr; Media_GetSignNum &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_SaveLog
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSdOnLineFlag
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetFileName
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[281]"></a>Camera_StateFetch</STRONG> (Thumb, 468 bytes, Stack size 32 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Camera_StateFetch &rArr; Usart3_SendData &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_SendData
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[282]"></a>Camera_StatePhoto</STRONG> (Thumb, 664 bytes, Stack size 40 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Camera_StatePhoto &rArr; Report_GetPositionBasicInfo &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_SendData
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionBasicInfo
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[284]"></a>Camera_StateCheck</STRONG> (Thumb, 618 bytes, Stack size 32 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Camera_StateCheck &rArr; Usart3_SendData &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart3_SendData
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[285]"></a>Camera_ScheduleCheck</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Camera_ScheduleCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSchedule
</UL>

<P><STRONG><a name="[286]"></a>Camera_SavePhotoNumToFram</STRONG> (Thumb, 636 bytes, Stack size 16 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Camera_SavePhotoNumToFram &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleFetch
</UL>

<P><STRONG><a name="[287]"></a>Camera_ScheduleFetch</STRONG> (Thumb, 512 bytes, Stack size 16 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Camera_ScheduleFetch &rArr; Camera_SavePhotoNumToFram &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_SavePhotoNumToFram
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSchedule
</UL>

<P><STRONG><a name="[288]"></a>Camera_SchedulePhoto</STRONG> (Thumb, 880 bytes, Stack size 16 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Camera_SchedulePhoto
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Media_GetSdOnLineFlag
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTerminalAuthorizationFlag
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSchedule
</UL>

<P><STRONG><a name="[289]"></a>Camera_ScheduleTiming</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Camera_ScheduleTiming
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSchedule
</UL>

<P><STRONG><a name="[28a]"></a>Camera_StateSchedule</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Camera_StateSchedule &rArr; Camera_ScheduleFetch &rArr; Camera_SavePhotoNumToFram &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleTiming
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_SchedulePhoto
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleFetch
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ScheduleCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[28b]"></a>Camera_TaskInit</STRONG> (Thumb, 1270 bytes, Stack size 32 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Camera_TaskInit &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_TimeTask
</UL>

<P><STRONG><a name="[28d]"></a>Camera_WriteParameter</STRONG> (Thumb, 928 bytes, Stack size 48 bytes, camera_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Camera_WriteParameter &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_StateSwitch
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
</UL>

<P><STRONG><a name="[2a9]"></a>Can_1_Mask_Init</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, can_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Can_1_Mask_Init &rArr; CAN_FilterInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_FilterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Init
</UL>

<P><STRONG><a name="[2ab]"></a>Can_1_Baud_Init</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, can_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Can_1_Baud_Init &rArr; CAN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_StructInit
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Init
</UL>

<P><STRONG><a name="[2af]"></a>Can_1_Init</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, can_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Can_1_Init &rArr; Can_1_Baud_Init &rArr; CAN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ITConfig
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Baud_Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_1_Mask_Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Init
</UL>

<P><STRONG><a name="[2bb]"></a>CARDState_Switch</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, card.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_ParseCmd
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_Idle
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_ConnectNet
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_AuthenticationRequest
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogin
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_DriverLogout
</UL>

<P><STRONG><a name="[2b8]"></a>CARDState_DriverLogout</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = CARDState_DriverLogout &rArr; RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DriverInformationReport
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_Switch
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
</UL>

<P><STRONG><a name="[2bc]"></a>CARDState_DriverLogin</STRONG> (Thumb, 144 bytes, Stack size 160 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = CARDState_DriverLogin &rArr; RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_DriverInformationReport
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_Switch
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
</UL>

<P><STRONG><a name="[2bd]"></a>CARDState_AuthenticationRequest</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816 + Unknown Stack Size
<LI>Call Chain = CARDState_AuthenticationRequest &rArr; RadioProtocol_OriginalDataUpTrans &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_OriginalDataUpTrans
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_Switch
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
</UL>

<P><STRONG><a name="[2be]"></a>CARDState_ConnectNet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CARDState_ConnectNet
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
</UL>

<P><STRONG><a name="[2bf]"></a>CARDState_Idle</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CARDState_Idle
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_SocSta
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARDState_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
</UL>

<P><STRONG><a name="[2c1]"></a>Card_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Card_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_TimeTask
</UL>

<P><STRONG><a name="[2c2]"></a>Card_SendCmd</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Card_SendCmd &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM2_WriteBuff
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransMean
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_AuthenticationAck
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_ParseCmd
</UL>

<P><STRONG><a name="[365]"></a>ESpinPoint</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, espin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
</UL>

<P><STRONG><a name="[438]"></a>JointechOiLCost_Operation_Damp</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = JointechOiLCost_Operation_Damp &rArr; JointechOiLCost_1Dec_To_2ASCII
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_1Dec_To_2ASCII
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StageMain_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_I
</UL>

<P><STRONG><a name="[de]"></a>JointechOiLCost_StateMachine</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = JointechOiLCost_StateMachine &rArr; JointechOiLCost_StateMachine_E &rArr; JointechOiLCost_COM_Buf_Write &rArr; COM2_WriteBuff &rArr; COMM_SendData &rArr; SetUsartITConfig &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_E
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_H
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_I
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_R
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jointechoil_protocol.o(.text)
</UL>
<P><STRONG><a name="[436]"></a>JointechOiLCost_StageMain_Set</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = JointechOiLCost_StageMain_Set &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_E
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_H
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StateMachine_R
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Operation_TemperatureCompensation
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Operation_Damp
</UL>

<P><STRONG><a name="[43c]"></a>JointechOiLCost_Operation_TemperatureCompensation</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = JointechOiLCost_Operation_TemperatureCompensation &rArr; JointechOiLCost_StageMain_Set &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_StageMain_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost_Init
</UL>

<P><STRONG><a name="[43d]"></a>Task_JointechOiLCost_Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, jointechoil_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Task_JointechOiLCost_Init &rArr; JointechOiLCost_Operation_TemperatureCompensation &rArr; JointechOiLCost_StageMain_Set &rArr; LZM_PublicSetOnceTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimerTask
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicKillTimerAll
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_Operation_TemperatureCompensation
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_JointechOiLCost
</UL>

<P><STRONG><a name="[47a]"></a>lcd_delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteCom
</UL>

<P><STRONG><a name="[485]"></a>Lock1_ParameterIsRight</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, lock1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Lock1_ParameterIsRight &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_TimeTask
</UL>

<P><STRONG><a name="[486]"></a>Lock1_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lock1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Lock1_Init &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock1_TimeTask
</UL>

<P><STRONG><a name="[489]"></a>Lock2_Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, lock2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Lock2_Init &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock2_TimeTask
</UL>

<P><STRONG><a name="[48e]"></a>LZM_DevInitHook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LZM_DevInitHook &rArr; LZM_QueueInit &rArr; LZM_QueueDataInit
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_QueueInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TaskMenuStart
</UL>

<P><STRONG><a name="[497]"></a>LZM_TaskInitHook</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lzmsys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LZM_TaskInitHook &rArr; PublicSysParamterInit &rArr; Message_ParameterInitialize &rArr; MessageFlashReadAndCheck &rArr; MessageReadAndCheckEventReport &rArr; EventReportDefaultValue &rArr; EventReportSaveDataToFlash &rArr; MessageSaveDataToFlash &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTask
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicSysParamterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_TaskMenuStart
</UL>

<P><STRONG><a name="[e3]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, navilcd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> navilcd.o(.text)
</UL>
<P><STRONG><a name="[5f2]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, other.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayTrigTimeTask
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_TimeTask
</UL>

<P><STRONG><a name="[603]"></a>PacketUpdate_SendPacketRequest</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, packetupdate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1856 + Unknown Stack Size
<LI>Call Chain = PacketUpdate_SendPacketRequest &rArr; RadioProtocol_ResendPacketRequest &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ResendPacketRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TimeTask
</UL>

<P><STRONG><a name="[605]"></a>PacketUpdate_TerminalGeneralAck</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, packetupdate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = PacketUpdate_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_GetDownloadCmdChannel
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TimeTask
</UL>

<P><STRONG><a name="[606]"></a>PacketUpdate_SendUpdateResultNote</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, packetupdate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816 + Unknown Stack Size
<LI>Call Chain = PacketUpdate_SendUpdateResultNote &rArr; RadioProtocol_FirmwareUpdataResultNote &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_FirmwareUpdataResultNote
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_TimeTask
</UL>

<P><STRONG><a name="[636]"></a>Photo_GetCurDistance</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Photo_GetCurDistance &rArr; MileMeter_GetTotalMile &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeedType
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetTotalMile
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_GetTotalMile
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_DistanceArive
</UL>

<P><STRONG><a name="[637]"></a>Photo_DistanceArive</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Photo_DistanceArive &rArr; Camera_Photo &rArr; Camera_WriteParameter &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_UpdatePram
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_GetCurDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_TimeTask
</UL>

<P><STRONG><a name="[638]"></a>Photo_TimeArive</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Photo_TimeArive &rArr; Camera_Photo &rArr; Camera_WriteParameter &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_UpdatePram
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_TimeTask
</UL>

<P><STRONG><a name="[639]"></a>Photo_StatusChange</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Photo_StatusChange &rArr; Camera_Photo &rArr; Camera_WriteParameter &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_GetLink2OpenFlag
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_TimeTask
</UL>

<P><STRONG><a name="[63a]"></a>Photo_AlarmChange</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, photo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Photo_AlarmChange &rArr; Camera_Photo &rArr; Camera_WriteParameter &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Photo
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blind_GetLink2OpenFlag
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Photo_TimeTask
</UL>

<P><STRONG><a name="[e9]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, public.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> public.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>RadioProtocol_UploadFromBreak_Request</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_UploadFromBreak_Request &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketResendRequest
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>RadioProtocol_DownloadUpdatePacket</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RadioProtocol_DownloadUpdatePacket &rArr; PacketUpdate_HandleCmd8108H
</UL>
<BR>[Calls]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketUpdate_HandleCmd8108H
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>RadioProtocol_AlarmConfirmManual</STRONG> (Thumb, 372 bytes, Stack size 32 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_AlarmConfirmManual &rArr; RadioProtocol_TerminalGeneralAck &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_TerminalGeneralAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>RadioProtocol_TerminalAttribute</STRONG> (Thumb, 1390 bytes, Stack size 384 bytes, radioprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2120 + Unknown Stack Size
<LI>Call Chain = RadioProtocol_TerminalAttribute &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_Type
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOD_GetIccidBcdValue
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_SendCmd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radioprotocol.o(.data)
</UL>
<P><STRONG><a name="[6bb]"></a>Report_GetPositionEiAdditionalInfo</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Report_GetPositionEiAdditionalInfo &rArr; JointechOiLCost_GetSubjoinInfoCurOilLevelPercent
</UL>
<BR>[Calls]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acceleration_PosEx
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreeEmerInfo
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilLevelPercent
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadSelfDefine2
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeepPlow_GetSubjoinInfoCurDeepVal
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temperature_PosEx
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TurnSpeed_GetSubjoinInfoCurTurnSpeedVal
</UL>
<BR>[Called By]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionAdditionalInfo
</UL>

<P><STRONG><a name="[6c0]"></a>Report_GetManualAlarmSubjoinInfo</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Report_GetManualAlarmSubjoinInfo &rArr; Area_GetInOutAreaAlarmSubjoinInfo &rArr; Public_ConvertLongToBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetInOutAreaAlarmSubjoinInfo
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarm
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetInOutAlarmSubjoinInfo
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDriveAlarmInfoSubjoinInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
</UL>

<P><STRONG><a name="[6c3]"></a>Report_GetPositionStdAdditionalInfo</STRONG> (Thumb, 596 bytes, Stack size 64 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Report_GetPositionStdAdditionalInfo &rArr; Report_GetManualAlarmSubjoinInfo &rArr; Area_GetInOutAreaAlarmSubjoinInfo &rArr; Public_ConvertLongToBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Area_GetInOutAreaAlarmSubjoinInfo
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JointechOiLCost_GetSubjoinInfoCurOilVolume
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadOverSpeedConrtolBit
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadIoStatus
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadExtCarStatus
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadStaNum
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetSecondSpeed
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;communicatio_GetSignalIntensity
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetInOutAlarmSubjoinInfo
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Route_GetDriveAlarmInfoSubjoinInfo
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetManualAlarmSubjoinInfo
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurTotalMile
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionAdditionalInfo
</UL>

<P><STRONG><a name="[6c8]"></a>Report_GetPositionAdditionalInfo</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Report_GetPositionAdditionalInfo &rArr; Report_GetPositionStdAdditionalInfo &rArr; Report_GetManualAlarmSubjoinInfo &rArr; Area_GetInOutAreaAlarmSubjoinInfo &rArr; Public_ConvertLongToBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPeripheral2TypeBit
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hand_WeightingSystem_GetPositionAdditionalInfo
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionStdAdditionalInfo
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionEiAdditionalInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_GetPositionInfo
</UL>

<P><STRONG><a name="[6ca]"></a>Report_GetCurDistance</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Report_GetCurDistance &rArr; MileMeter_GetTotalMile &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeedType
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetTotalMile
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MileMeter_GetTotalMile
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
</UL>

<P><STRONG><a name="[6cb]"></a>Report_GetLink1NextReportPoint</STRONG> (Thumb, 968 bytes, Stack size 24 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Report_GetLink1NextReportPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetLoginFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
</UL>

<P><STRONG><a name="[6cd]"></a>Report_Link2ReportOpenFlag</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Report_Link2ReportOpenFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_TimeTask
</UL>

<P><STRONG><a name="[728]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sleepdeep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_TerminalShutdown
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepDeep_EnterStopMode
</UL>

<P><STRONG><a name="[772]"></a>PublicMsgBoxCancel</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PublicMsgBoxCancel &rArr; LZM_ReturnPreTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReturnPreTask
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskPublicMsgBox
</UL>

<P><STRONG><a name="[ef]"></a>TaskPublicMsgBox</STRONG> (Thumb, 354 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = TaskPublicMsgBox &rArr; LcdShowButton &rArr; LcdShowStr &rArr; DrawStr &rArr; DrawChar &rArr; Lcd_ReadOneEnglishCharacterFromFlash &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowButton
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicMsgBoxCancel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[779]"></a>ConvertReadPramToValue</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ConvertReadPramToValue &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarTotalMile
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarFeatureCoef
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarProvinceID
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemSetCarCityID
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowQueryServerParameter
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetTCPPort2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetUDPPort2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveFreight
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IP1SaveEyePlat
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugFixTime
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDebugFixTimeOk
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemDebugSetPassWord
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetSpeedParam
</UL>

<P><STRONG><a name="[77b]"></a>ReadAndCheckPhoneNumber</STRONG> (Thumb, 242 bytes, Stack size 64 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = ReadAndCheckPhoneNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckStrIsBCD
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAndCheckTerminalPhoneNumber
</UL>

<P><STRONG><a name="[77e]"></a>ConvertPhoneStrToBCD</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ConvertPhoneStrToBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAndCheckTerminalPhoneNumber
</UL>

<P><STRONG><a name="[77d]"></a>SaveAndCheckTerminalPhoneNumber</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = SaveAndCheckTerminalPhoneNumber &rArr; ReadAndCheckPhoneNumber &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertPhoneStrToBCD
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAndCheckPhoneNumber
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetPhoneNumber
</UL>

<P><STRONG><a name="[795]"></a>ConvertStrToIP</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ConvertStrToIP &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushAdministratorCardResponse
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetIP2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemServerSetBackUpIP2
</UL>

<P><STRONG><a name="[79d]"></a>PublicGetPasswordCancel</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PublicGetPasswordCancel &rArr; LZM_ReturnPreTask &rArr; LZM_RefuseNowTask &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_ReturnPreTask
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordKeyResponse
</UL>

<P><STRONG><a name="[79e]"></a>PublicGetPasswordCorrect</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PublicGetPasswordCorrect &rArr; LZM_StartNewTaskEx &rArr; LZM_RefuseNowTaskEx &rArr; LZM_ReadyNewTask &rArr; LZM_QueueInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_StartNewTaskEx
</UL>
<BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrushAdministratorCardResponse
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordKeyResponse
</UL>

<P><STRONG><a name="[79f]"></a>PublicGetPasswordKeyResponse</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = PublicGetPasswordKeyResponse &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowBorder
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_SetAlarm
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinResponse
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordCorrect
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordCancel
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGetPassword
</UL>

<P><STRONG><a name="[ff]"></a>TaskGetPassword</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TaskGetPassword &rArr; PublicGetPasswordKeyResponse &rArr; ESpinResponse &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearScreen
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowHorLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdShowCaption
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_KillTimer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_GetSutMessage
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_DefTaskProc
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinShow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinSetFocus
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESpinInit
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetSystemRFEnable
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordKeyResponse
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicGetPasswordCancel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7d6]"></a>ReadSystemPassWord</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, taskmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ReadSystemPassWord &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicSysParamterInit
</UL>

<P><STRONG><a name="[7d7]"></a>ReadSystemDeviceID</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
</UL>
<BR>[Called By]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAndCheckSystemDeviceID
</UL>

<P><STRONG><a name="[7d8]"></a>SaveAndCheckSystemDeviceID</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, taskmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemDeviceID
</UL>
<BR>[Called By]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemParamSetDeviceID
</UL>

<P><STRONG><a name="[f1]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, taskmenu.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(.text)
</UL>
<P><STRONG><a name="[7ed]"></a>TTSApp_CheckPackVoiceStr</STRONG> (Thumb, 140 bytes, Stack size 200 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = TTSApp_CheckPackVoiceStr &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSDerv_SendUartData
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_CheckExtTtsFlag
</UL>

<P><STRONG><a name="[7f2]"></a>TTSApp_PlayExtTtsFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ttsdevapp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTS_GetPlayBusyFlag
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTtsVolume
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTtsVolumeDecr
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTtsVolumeIncr
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuff
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStrToSend
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_StatusVoicePlay
</UL>

<P><STRONG><a name="[7ef]"></a>TTSApp_PackVoiceStr</STRONG> (Thumb, 198 bytes, Stack size 216 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = TTSApp_PackVoiceStr &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LZM_PublicSetOnceTimer
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInGetState
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSDerv_SendUartData
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTSApp_PackVoiceStrToSend
</UL>

<P><STRONG><a name="[7fb]"></a>TTSApp_PlayMulTTSVoiceStrbase</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ttsdevapp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceBuff
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceStr
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMulTTSVoiceAlarmStr
</UL>

<P><STRONG><a name="[813]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[81f]"></a>SetSysClockTo72</STRONG> (Thumb, 272 bytes, Stack size 12 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[81e]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[82b]"></a>USB_OTG_EnableCommonInt</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_EnableCommonInt
</UL>
<BR>[Called By]<UL><LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableHostInt
</UL>

<P><STRONG><a name="[820]"></a>USB_OTG_CoreReset</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>

<P><STRONG><a name="[84d]"></a>USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[84c]"></a>USB_OTG_USBH_handle_Disconnect_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_USBH_handle_Disconnect_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[83f]"></a>USB_OTG_USBH_handle_port_ISR</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USB_OTG_USBH_handle_port_ISR &rArr; USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitFSLSPClkSel
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[840]"></a>USB_OTG_USBH_handle_hc_n_Out_ISR</STRONG> (Thumb, 984 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_OTG_USBH_handle_hc_n_Out_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_DoPing
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[843]"></a>USB_OTG_USBH_handle_hc_n_In_ISR</STRONG> (Thumb, 1066 bytes, Stack size 40 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[844]"></a>USB_OTG_USBH_handle_hc_ISR</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHostAllChannels_intr
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[846]"></a>USB_OTG_USBH_handle_ptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_USBH_handle_ptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[847]"></a>USB_OTG_USBH_handle_nptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_USBH_handle_nptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[848]"></a>USB_OTG_USBH_handle_rx_qlvl_ISR</STRONG> (Thumb, 356 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_OTG_USBH_handle_rx_qlvl_ISR &rArr; USB_OTG_ReadPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[84b]"></a>USB_OTG_USBH_handle_sof_ISR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_USBH_handle_sof_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[859]"></a>USBH_HandleEnum</STRONG> (Thumb, 472 bytes, Stack size 88 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = USBH_HandleEnum &rArr; USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_ResetPort
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetCfg
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetAddress
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Modify_Channel
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_StringDesc
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_DevDesc
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_CfgDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[867]"></a>USBH_GetFreeChannel</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usbh_hcs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Alloc_Channel
</UL>

<P><STRONG><a name="[869]"></a>USBH_SubmitSetupRequest</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_SubmitSetupRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>

<P><STRONG><a name="[871]"></a>USBH_ParseDevDesc</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_ParseDevDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_DevDesc
</UL>

<P><STRONG><a name="[875]"></a>USBH_ParseEPDesc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usbh_stdreq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>

<P><STRONG><a name="[874]"></a>USBH_ParseInterfaceDesc</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usbh_stdreq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>

<P><STRONG><a name="[872]"></a>USBH_ParseCfgDesc</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBH_ParseCfgDesc &rArr; USBH_GetNextDesc
</UL>
<BR>[Calls]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetNextDesc
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseInterfaceDesc
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseEPDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_CfgDesc
</UL>

<P><STRONG><a name="[876]"></a>USBH_ParseStringDesc</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USBH_ParseStringDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_StringDesc
</UL>

<P><STRONG><a name="[7e]"></a>USBH_MSC_InterfaceInit</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, usbh_msc_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USBH_MSC_InterfaceInit &rArr; USBH_Open_Channel &rArr; USB_OTG_HC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Open_Channel
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Alloc_Channel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[7f]"></a>USBH_MSC_InterfaceDeInit</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usbh_msc_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_MSC_InterfaceDeInit &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free_Channel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>USBH_MSC_ClassRequest</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbh_msc_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_MSC_ClassRequest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[87e]"></a>USBH_MSC_GETMaxLUN</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usbh_msc_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_MSC_GETMaxLUN &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[87f]"></a>USBH_MSC_BOTReset</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbh_msc_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_MSC_BOTReset &rArr; USBH_CtlReq &rArr; USBH_SubmitSetupRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[81]"></a>USBH_MSC_Handle</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, usbh_msc_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = USBH_MSC_Handle &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity10
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ModeSense6
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ErrorHandle
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOTReset
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_GETMaxLUN
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClrFeature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[11b]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_app.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb_app.o(.text)
</UL>
<P><STRONG><a name="[892]"></a>USB_OTG_BSP_TimeInit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_BSP_TimeInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
</UL>

<P><STRONG><a name="[893]"></a>BSP_SetTime</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PrescalerConfig
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Delay
</UL>

<P><STRONG><a name="[89b]"></a>BSP_Delay</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BSP_Delay &rArr; BSP_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>

<P><STRONG><a name="[89e]"></a>USB_ReadAndUpdataUDPPort</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = USB_ReadAndUpdataUDPPort &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[89f]"></a>USB_ReadAndUpdataTCPPort</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = USB_ReadAndUpdataTCPPort &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[8a0]"></a>USB_ReadAndUpdataBackApn</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 924<LI>Call Chain = USB_ReadAndUpdataBackApn &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[8a1]"></a>USB_ReadAndUpdataBackupIp</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 932<LI>Call Chain = USB_ReadAndUpdataBackupIp &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[8a2]"></a>USB_ReadAndUpdataMainApn</STRONG> (Thumb, 304 bytes, Stack size 48 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 924<LI>Call Chain = USB_ReadAndUpdataMainApn &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[8a3]"></a>USB_ReadAndUpdataMainIp</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 932<LI>Call Chain = USB_ReadAndUpdataMainIp &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[8a7]"></a>MOD_CalcCRC</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MOD_CalcCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
</UL>

<P><STRONG><a name="[8a6]"></a>MOD_InitCRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
</UL>

<P><STRONG><a name="[8a4]"></a>EraseUpdataFlashArea</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EraseUpdataFlashArea &rArr; sFLASH_EraseSector &rArr; sFLASH_WriteEnable &rArr; sFLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
</UL>

<P><STRONG><a name="[8a5]"></a>USB_ReadAndUpdataSystem</STRONG> (Thumb, 954 bytes, Stack size 600 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476<LI>Call Chain = USB_ReadAndUpdataSystem &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_ReadByte
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2prom_WriteByte
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckSystemLogoAndVerSion
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseUpdataFlashArea
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOD_InitCRC
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOD_CalcCRC
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usb_SetCurrentUsbStatus
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>

<P><STRONG><a name="[8a9]"></a>USB_USR_ReadDataForUpdataApp</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1988 + Unknown Stack Size
<LI>Call Chain = USB_USR_ReadDataForUpdataApp &rArr; USB_UpdateZhiKu &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_SaveLogFile
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_UpdateZhiKu
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataGpsMode
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataSystem
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainIp
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataMainApn
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackupIp
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataBackApn
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataTCPPort
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadAndUpdataUDPPort
</UL>
<BR>[Called By]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_CurrentApplication
</UL>

<P><STRONG><a name="[8ac]"></a>USB_USR_CurrentApplication</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1996 + Unknown Stack Size
<LI>Call Chain = USB_USR_CurrentApplication &rArr; USB_USR_ReadDataForUpdataApp &rArr; USB_UpdateZhiKu &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_ReadDataForUpdataApp
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_MSC_Application
</UL>

<P><STRONG><a name="[8ad]"></a>Explore_Disk</STRONG> (Thumb, 152 bytes, Stack size 320 bytes, usbh_usr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameForward
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
</UL>

<P><STRONG><a name="[8bf]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[8b4]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[8c2]"></a>mem_cmp</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[8c9]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[8b2]"></a>move_window</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[8b3]"></a>sync</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = sync &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[8b7]"></a>remove_chain</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
</UL>

<P><STRONG><a name="[8b8]"></a>create_chain</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[8d1]"></a>clmt_clust</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clmt_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[8b9]"></a>dir_sdi</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[8bb]"></a>dir_next</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[8bc]"></a>cmp_lfn</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cmp_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[8c4]"></a>pick_lfn</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pick_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[8c6]"></a>fit_lfn</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fit_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[8c1]"></a>sum_sfn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sum_sfn
</UL>
<BR>[Called By]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[8c0]"></a>dir_find</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[8c3]"></a>dir_read</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[8c5]"></a>dir_register</STRONG> (Thumb, 414 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_lfn
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>

<P><STRONG><a name="[8c7]"></a>dir_remove</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = dir_remove &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>

<P><STRONG><a name="[8c8]"></a>create_name</STRONG> (Thumb, 654 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = create_name &rArr; mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[8cb]"></a>get_fileinfo</STRONG> (Thumb, 416 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_fileinfo &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
</UL>

<P><STRONG><a name="[8cc]"></a>follow_path</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[8cd]"></a>check_fs</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = check_fs &rArr; disk_read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[8ce]"></a>chk_mounted</STRONG> (Thumb, 870 bytes, Stack size 72 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = chk_mounted &rArr; check_fs &rArr; disk_read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[8d0]"></a>validate</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[8e2]"></a>CheckITStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_can.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GetITStatus
</UL>

<P><STRONG><a name="[8f1]"></a>TI4_Config</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[8ef]"></a>TI3_Config</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[8ed]"></a>TI2_Config</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[8eb]"></a>TI1_Config</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[972]"></a>send_cmd</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_NodClr
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Tts_Cmd
<LI><a href="#[995]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_Only
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Cmd_Try
</UL>

<P><STRONG><a name="[975]"></a>Modem_StrCmp_Base</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_StrCmp_Base &rArr; ModLib_AtCmp &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[976]"></a>Modem_StrCmp_Ati</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_StrCmp_Ati &rArr; ModLib_AtCmp &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[977]"></a>Modem_StrCmp_IpLoc</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_StrCmp_IpLoc &rArr; ModLib_AtCmp &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[978]"></a>Modem_StrCmp_Search</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_Search &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[979]"></a>Modem_StrCmp_Ccid</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Modem_StrCmp_Ccid &rArr; Modem_Port_Call_CCID &rArr; Public_SaveCurSIMICcidNumberToE2Param &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Port_Call_CCID
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_StrByte
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[97b]"></a>Modem_StrCmp_IpSta_Q</STRONG> (Thumb, 474 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_IpSta_Q &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
</UL>
<BR>[Called By]<UL><LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta
</UL>

<P><STRONG><a name="[97c]"></a>Modem_StrCmp_IpSta_ZTE</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_IpSta_ZTE &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta
</UL>

<P><STRONG><a name="[97d]"></a>Modem_StrCmp_IpSta</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_IpSta &rArr; Modem_StrCmp_IpSta_ZTE &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta_ZTE
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_IpSta_Q
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[97e]"></a>Modem_StrCmp_IpOpen</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_StrCmp_IpOpen &rArr; ModLib_AtCmp &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[981]"></a>Modem_StrCmp_SendData</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_SendData &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[982]"></a>Modem_StrCmp_Ftp_Q</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_Ftp_Q &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmpEx
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallFtp
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisFtp
</UL>

<P><STRONG><a name="[984]"></a>Modem_StrCmp_Ftp_ZTE</STRONG> (Thumb, 514 bytes, Stack size 40 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_Ftp_ZTE &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtLen
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallFtp
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisFtp
</UL>

<P><STRONG><a name="[985]"></a>Modem_StrCmp_Sms</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1752 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_Sms &rArr; Modem_Api_CallSms &rArr; Net_Other_SmsCall &rArr; Net_Other_SmsDB &rArr; Net_Other_SmsSta &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_PduDecode
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Api_CallSms
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[987]"></a>Modem_StrCmp_Atd</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_StrCmp_Atd &rArr; ModLib_AtCmp &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[988]"></a>Modem_StrCmp_LisCon</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_LisCon &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Send_cmd_IpOpen
<LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenData
</UL>

<P><STRONG><a name="[989]"></a>Modem_StrCmp_LisRec</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_LisRec &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_ByteStrEx
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_RecData_ZTE
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_RecData_Q
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_PrtfTo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_ListenData
</UL>

<P><STRONG><a name="[98b]"></a>Modem_StrCmp_LisFtp</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_LisFtp &rArr; Modem_StrCmp_Ftp_Q &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_ZTE
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_Ftp_Q
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[98c]"></a>Modem_StrCmp_ListenData</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_ListenData &rArr; Modem_StrCmp_LisRec &rArr; Modem_PrtfTo &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisRec
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_StrCmp_LisCon
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[98d]"></a>Modem_StrCmp_ListenSms</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Modem_StrCmp_ListenSms &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtAddr
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[98e]"></a>Modem_StrCmp_ListenPhone</STRONG> (Thumb, 304 bytes, Stack size 48 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_ListenPhone &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Uart_Send
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Enter
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Phone_Break
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_MicOff
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOff
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[991]"></a>Modem_StrCmp_ListenTts</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224 + Unknown Stack Size
<LI>Call Chain = Modem_StrCmp_ListenTts &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Printf
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmy
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Bsp_SpkOff
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[992]"></a>Modem_StrCmp_ListenOn</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_StrCmp_ListenOn &rArr; ModLib_AtCmp &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[993]"></a>Modem_StrCmp_ListenFalt</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modem_StrCmp_ListenFalt &rArr; ModLib_AtCmp &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModLib_AtCmp
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_State_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Process
</UL>

<P><STRONG><a name="[9ab]"></a>Modem_Cmd_Try</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, modem_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Modem_Cmd_Try &rArr; send_cmd &rArr; Modem_Uart_Send &rArr; ModLib_NodIns
</UL>
<BR>[Calls]<UL><LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9ad]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, modem_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Chk_Run
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modem_Run
</UL>

<P><STRONG><a name="[9f6]"></a>VDRCard_StateLogout</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = VDRCard_StateLogout &rArr; VDROvertime_DriverLogout &rArr; RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_TimeTask
</UL>

<P><STRONG><a name="[9f8]"></a>VDRCard_GetLoginInfo</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = VDRCard_GetLoginInfo &rArr; VDRPub_ConvertNowTimeToBCD &rArr; VDRPub_HEX2BCD
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertNowTimeToBCD
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetLicense
</UL>

<P><STRONG><a name="[9f9]"></a>VDRCard_GetLicense</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = VDRCard_GetLicense &rArr; VDRCard_GetLoginInfo &rArr; VDRPub_ConvertNowTimeToBCD &rArr; VDRPub_HEX2BCD
</UL>
<BR>[Calls]<UL><LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetLoginInfo
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateRead
<LI><a href="#[9fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateLogin
</UL>

<P><STRONG><a name="[9fa]"></a>VDRCard_StateLogin</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2248 + Unknown Stack Size
<LI>Call Chain = VDRCard_StateLogin &rArr; VDROvertime_DriverLogin &rArr; VDROvertime_DriverLogout &rArr; RadioProtocol_DriverInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetLicense
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_TimeTask
</UL>

<P><STRONG><a name="[9fc]"></a>VDRCard_StateRead</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320 + Unknown Stack Size
<LI>Call Chain = VDRCard_StateRead &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL4442_Buffer_Read
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_24XX_HL_Buf_Read
<LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_GetLicense
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_TimeTask
</UL>

<P><STRONG><a name="[9fd]"></a>VDRCard_IsInsert</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VDRCard_IsInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_StateMonitor
</UL>

<P><STRONG><a name="[9fe]"></a>VDRCard_StateMonitor</STRONG> (Thumb, 268 bytes, Stack size 48 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336 + Unknown Stack Size
<LI>Call Chain = VDRCard_StateMonitor &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[9fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_IsInsert
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_TimeTask
</UL>

<P><STRONG><a name="[9ff]"></a>VDRCard_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, vdr_card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = VDRCard_Init &rArr; ICCARD_M3_Init &rArr; ICCARD_M3_I2C_Stop &rArr; ICCARD_M3_SDA_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICCARD_M3_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCard_TimeTask
</UL>

<P><STRONG><a name="[a03]"></a>VDRCoefficient_ModifyPulseCoef</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, vdr_coefficient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = VDRCoefficient_ModifyPulseCoef &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_UpdateParameter
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
</UL>

<P><STRONG><a name="[a04]"></a>VDRCoefficient_CalDistance</STRONG> (Thumb, 462 bytes, Stack size 136 bytes, vdr_coefficient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = VDRCoefficient_CalDistance &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
</UL>

<P><STRONG><a name="[a05]"></a>VDRCoefficient_GetPoint</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, vdr_coefficient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = VDRCoefficient_GetPoint &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopygPosition
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRCoefficient_TimeTask
</UL>

<P><STRONG><a name="[a08]"></a>VDRData_Check</STRONG> (Thumb, 1072 bytes, Stack size 32 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = VDRData_Check &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_EraseFlashArea
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_TimeTask
</UL>

<P><STRONG><a name="[a0a]"></a>VDRData_CheckWriteParameter</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = VDRData_CheckWriteParameter &rArr; VDRData_ReadNewestTime &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadNewestTime
</UL>
<BR>[Called By]<UL><LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>

<P><STRONG><a name="[a0d]"></a>VDRData_CheckReadParameter</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, vdr_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadOldestTime
<LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadNewestTime
</UL>
<BR>[Called By]<UL><LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
</UL>

<P><STRONG><a name="[a15]"></a>VDRDocimasy_InitTim4</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VDRDocimasy_InitTim4 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PrescalerConfig
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE3H
<LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE1H
<LI><a href="#[a16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE0H
</UL>

<P><STRONG><a name="[a17]"></a>VDRDocimasy_InitExti14</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VDRDocimasy_InitExti14 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE1H
</UL>

<P><STRONG><a name="[a19]"></a>VDRDocimasy_InitExti10</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VDRDocimasy_InitExti10 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE2H
</UL>

<P><STRONG><a name="[a1a]"></a>VDRDocimasy_InitGpioPB14</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VDRDocimasy_InitGpioPB14 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE4H
<LI><a href="#[a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE3H
<LI><a href="#[a1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE2H
</UL>

<P><STRONG><a name="[a21]"></a>VDRDocimasy_AckE1H</STRONG> (Thumb, 304 bytes, Stack size 88 bytes, vdr_docimasy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = VDRDocimasy_AckE1H &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadExtCarStatusBit
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadExtCarStatus
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetTotalMile
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetInstantSpeed
<LI><a href="#[a22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_SendData
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_Tim4Isr
</UL>

<P><STRONG><a name="[a23]"></a>VDRDoubt_Read2</STRONG> (Thumb, 390 bytes, Stack size 80 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = VDRDoubt_Read2 &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurPositionInfoDataBlock
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_GetNoNavigationPostion
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOn
<LI><a href="#[a29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WriteStop
<LI><a href="#[a26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePositionNoChange
</UL>

<P><STRONG><a name="[a26]"></a>VDRDoubt_WritePositionNoChange</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = VDRDoubt_WritePositionNoChange &rArr; VDRDoubt_Read2 &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_CopygPosition
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_TimeTask
</UL>

<P><STRONG><a name="[a27]"></a>VDRDoubt_Read1</STRONG> (Thumb, 420 bytes, Stack size 88 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = VDRDoubt_Read1 &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurPositionInfoDataBlock
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_GetNoNavigationPostion
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_WritePowerOff
</UL>

<P><STRONG><a name="[a28]"></a>VDRDoubt_WritePowerOff</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = VDRDoubt_WritePowerOff &rArr; VDRDoubt_Read1 &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read1
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadList
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalList
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_TimeTask
</UL>

<P><STRONG><a name="[a29]"></a>VDRDoubt_WriteStop</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = VDRDoubt_WriteStop &rArr; VDRDoubt_Read2 &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_TimeTask
</UL>

<P><STRONG><a name="[a2a]"></a>VDRDoubt_SaveCurrentSpeedStatus</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = VDRDoubt_SaveCurrentSpeedStatus &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertShortToBuffer
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadExtCarStatusBit
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetInstantSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_TimeTask
</UL>

<P><STRONG><a name="[a2b]"></a>VDRDoubt_CalSecondSpeed</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = VDRDoubt_CalSecondSpeed &rArr; VDRPulse_GetInstantSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetInstantSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_TimeTask
</UL>

<P><STRONG><a name="[a2c]"></a>VDRDoubt_RunOrStop</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VDRDoubt_RunOrStop &rArr; VDRPulse_GetInstantSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_ReadSpeed
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetInstantSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_TimeTask
</UL>

<P><STRONG><a name="[a2d]"></a>VDRDoubt_WritePowerOn</STRONG> (Thumb, 384 bytes, Stack size 48 bytes, vdr_doubt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = VDRDoubt_WritePowerOn &rArr; VDRDoubt_Read2 &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBcdToValue
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_Read2
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_TimeTask
</UL>

<P><STRONG><a name="[a31]"></a>VDRGprs_TimeTask1</STRONG> (Thumb, 900 bytes, Stack size 40 bytes, vdr_gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1848 + Unknown Stack Size
<LI>Call Chain = VDRGprs_TimeTask1 &rArr; RadioProtocol_RecorderDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_RecorderDataReport
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
<LI><a href="#[a33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_Packet
<LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_PacketAckPreHandle
<LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadPacket
<LI><a href="#[a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadWriteEnableFlag
<LI><a href="#[a35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_SetWriteEnableFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask
</UL>

<P><STRONG><a name="[a36]"></a>VDRGprs_TimeTask2</STRONG> (Thumb, 1344 bytes, Stack size 64 bytes, vdr_gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = VDRGprs_TimeTask2 &rArr; RadioProtocol_RecorderDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_RecorderDataReport
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
<LI><a href="#[a33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_Packet
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_TimeTask
</UL>

<P><STRONG><a name="[a37]"></a>VDRGprs_ResendTimeTask1</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, vdr_gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824 + Unknown Stack Size
<LI>Call Chain = VDRGprs_ResendTimeTask1 &rArr; RadioProtocol_RecorderDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_RecorderDataReport
<LI><a href="#[a33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_Packet
<LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadPacket
<LI><a href="#[a35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_SetWriteEnableFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask
</UL>

<P><STRONG><a name="[a38]"></a>VDRGprs_ResendTimeTask2</STRONG> (Thumb, 750 bytes, Stack size 48 bytes, vdr_gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1856 + Unknown Stack Size
<LI>Call Chain = VDRGprs_ResendTimeTask2 &rArr; RadioProtocol_RecorderDataReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_NameConver
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_RecorderDataReport
<LI><a href="#[a33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_Packet
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRGprs_ResendTimeTask
</UL>

<P><STRONG><a name="[a39]"></a>VDRLog_GetWriteCount</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, vdr_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = VDRLog_GetWriteCount &rArr; VDRLog_EraseFlashArea &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_EraseFlashArea
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRLog_TimeTask
</UL>

<P><STRONG><a name="[a46]"></a>VDROverspeed_ReadEarlyAlarmFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_overspeed.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_TimeTask
</UL>

<P><STRONG><a name="[a3f]"></a>VDROverspeed_NightTimeIsOk</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VDROverspeed_NightTimeIsOk
</UL>
<BR>[Called By]<UL><LI><a href="#[a3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_NightIsArrived
</UL>

<P><STRONG><a name="[a3e]"></a>VDROverspeed_NightIsArrived</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = VDROverspeed_NightIsArrived &rArr; VDROverspeed_NightTimeIsOk
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[a3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_NightTimeIsOk
</UL>
<BR>[Called By]<UL><LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsAlarm
<LI><a href="#[a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_IsEarlyAlarm
</UL>

<P><STRONG><a name="[a40]"></a>VDROverspeed_IsEarlyAlarm</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = VDROverspeed_IsEarlyAlarm &rArr; VDROverspeed_NightIsArrived &rArr; VDROverspeed_NightTimeIsOk
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[a3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_WriteEarlyAlarmFlagBit
<LI><a href="#[a3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_NightIsArrived
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_TimeTask
</UL>

<P><STRONG><a name="[a42]"></a>VDROverspeed_IsAlarm</STRONG> (Thumb, 302 bytes, Stack size 80 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = VDROverspeed_IsAlarm &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[a41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_WriteAlarmFlagBit
<LI><a href="#[a3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_WriteEarlyAlarmFlagBit
<LI><a href="#[a3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_NightIsArrived
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_TimeTask
</UL>

<P><STRONG><a name="[a43]"></a>VDROverspeed_OnceOverReport</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = VDROverspeed_OnceOverReport &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_TimeTask
</UL>

<P><STRONG><a name="[a44]"></a>VDROverspeed_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, vdr_overspeed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = VDROverspeed_Init &rArr; VDROverspeed_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_UpdateParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_TimeTask
</UL>

<P><STRONG><a name="[a48]"></a>VDROvertime_GetRunFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_overtime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
<LI><a href="#[a49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleRunUnlogin
<LI><a href="#[a47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleNightRunVoice
</UL>

<P><STRONG><a name="[a47]"></a>VDROvertime_HandleNightRunVoice</STRONG> (Thumb, 336 bytes, Stack size 64 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352 + Unknown Stack Size
<LI>Call Chain = VDROvertime_HandleNightRunVoice &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetRunFlag
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
</UL>

<P><STRONG><a name="[a49]"></a>VDROvertime_HandleRunUnlogin</STRONG> (Thumb, 304 bytes, Stack size 8 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = VDROvertime_HandleRunUnlogin &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetRunFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
</UL>

<P><STRONG><a name="[a4a]"></a>VDROvertime_SaveAllDriverInfo</STRONG> (Thumb, 746 bytes, Stack size 40 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = VDROvertime_SaveAllDriverInfo &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOtherDrivers
</UL>

<P><STRONG><a name="[a4b]"></a>VDROvertime_NightWrite</STRONG> (Thumb, 294 bytes, Stack size 88 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = VDROvertime_NightWrite &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadOvertimeConrtolBit
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
<LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOtherDrivers
</UL>

<P><STRONG><a name="[a4d]"></a>VDROvertime_Write</STRONG> (Thumb, 282 bytes, Stack size 88 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = VDROvertime_Write &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOtherDrivers
</UL>

<P><STRONG><a name="[a4e]"></a>VDROvertime_HandleOtherDrivers</STRONG> (Thumb, 540 bytes, Stack size 16 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = VDROvertime_HandleOtherDrivers &rArr; VDROvertime_Write &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Write
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightWrite
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveAllDriverInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
</UL>

<P><STRONG><a name="[a4f]"></a>VDROvertime_SaveCurrentDriverInfo</STRONG> (Thumb, 712 bytes, Stack size 40 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = VDROvertime_SaveCurrentDriverInfo &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogout
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_DriverLogin
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
<LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleOneDayAlarm
</UL>

<P><STRONG><a name="[a50]"></a>VDROvertime_HandleOneDayAlarm</STRONG> (Thumb, 492 bytes, Stack size 88 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376 + Unknown Stack Size
<LI>Call Chain = VDROvertime_HandleOneDayAlarm &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetRunFlag
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
</UL>

<P><STRONG><a name="[a52]"></a>VDROvertime_NightTimeIsOk</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VDROvertime_NightTimeIsOk
</UL>
<BR>[Called By]<UL><LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsArrived
</UL>

<P><STRONG><a name="[a51]"></a>VDROvertime_NightIsArrived</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = VDROvertime_NightIsArrived &rArr; VDROvertime_NightTimeIsOk
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[a52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightTimeIsOk
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetDriveTime
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
</UL>

<P><STRONG><a name="[a53]"></a>VDROvertime_NightIsAlarm</STRONG> (Thumb, 1394 bytes, Stack size 24 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = VDROvertime_NightIsAlarm &rArr; VDROvertime_NightWrite &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteOvertimeConrtolBit
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WritePreOvertimeConrtolBit
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurPositionInfoDataBlock
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsArrived
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightWrite
<LI><a href="#[a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetRunFlag
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_GetNoNavigationPostion
</UL>
<BR>[Called By]<UL><LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleAlarm
</UL>

<P><STRONG><a name="[a54]"></a>VDROvertime_IsAlarm</STRONG> (Thumb, 1402 bytes, Stack size 24 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = VDROvertime_IsAlarm &rArr; VDROvertime_Write &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_ReadStatusBit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteOvertimeConrtolBit
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WritePreOvertimeConrtolBit
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurPositionInfoDataBlock
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Write
<LI><a href="#[a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetRunFlag
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_GetNoNavigationPostion
</UL>
<BR>[Called By]<UL><LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_HandleAlarm
</UL>

<P><STRONG><a name="[a55]"></a>VDROvertime_HandleAlarm</STRONG> (Thumb, 466 bytes, Stack size 64 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352 + Unknown Stack Size
<LI>Call Chain = VDROvertime_HandleAlarm &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDoubt_GetCarRunFlag
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ShowTextInfo
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_PlayTTSVoiceStr
<LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_IsAlarm
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightIsAlarm
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
</UL>

<P><STRONG><a name="[a56]"></a>VDROvertime_StopAlarm</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VDROvertime_StopAlarm &rArr; VDRSpeed_GetCurSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_WriteAlarmBit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
</UL>

<P><STRONG><a name="[a57]"></a>VDROvertime_OnceRunReport</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = VDROvertime_OnceRunReport &rArr; Report_UploadPositionInfo &rArr; RadioProtocol_PostionInformationReport &rArr; RadioProtocol_SendCmd &rArr; Communication_SndMsg2Svr &rArr; Modem_Api_SmsSend &rArr; Modem_State_Sms_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Report_UploadPositionInfo
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROverspeed_GetAlarmSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
</UL>

<P><STRONG><a name="[a58]"></a>VDROvertime_JudgeRunOrStop</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VDROvertime_JudgeRunOrStop &rArr; VDRSpeed_GetCurSpeed &rArr; Gps_ReadSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
</UL>

<P><STRONG><a name="[a59]"></a>VDROvertime_ReadCurrentDriverInfo</STRONG> (Thumb, 702 bytes, Stack size 56 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = VDROvertime_ReadCurrentDriverInfo &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
</UL>

<P><STRONG><a name="[a5a]"></a>VDROvertime_ReadAllDriverInfo</STRONG> (Thumb, 2300 bytes, Stack size 72 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = VDROvertime_ReadAllDriverInfo &rArr; VDROvertime_Write &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetSumVerify
<LI><a href="#[a59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadCurrentDriverInfo
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_SaveCurrentDriverInfo
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Write
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_NightWrite
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_Init
</UL>

<P><STRONG><a name="[a5b]"></a>VDROvertime_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, vdr_overtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = VDROvertime_Init &rArr; VDROvertime_ReadAllDriverInfo &rArr; VDROvertime_Write &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_UpdateParameter
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_ReadAllDriverInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_TimeTask
</UL>

<P><STRONG><a name="[a5d]"></a>VDROvertime_GetAlarmFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vdr_overtime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetDriveTime
</UL>

<P><STRONG><a name="[a5f]"></a>VDRPosition_SavePosition</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, vdr_position.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = VDRPosition_SavePosition &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_GetCurPositionInfoDataBlock
<LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetMinuteSpeed
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_GetNoNavigationPostion
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_TimeTask
</UL>

<P><STRONG><a name="[a61]"></a>VDRPosition_Write</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, vdr_position.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = VDRPosition_Write &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_TimeTask
</UL>

<P><STRONG><a name="[a62]"></a>VDRPosition_SaveStartTime</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, vdr_position.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = VDRPosition_SaveStartTime &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_TimeTask
</UL>

<P><STRONG><a name="[a63]"></a>VDRPosition_Init</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, vdr_position.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = VDRPosition_Init &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_TimeTask
</UL>

<P><STRONG><a name="[a66]"></a>VDRPower_GetStatus</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, vdr_power.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VDRPower_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_TimeTask
</UL>

<P><STRONG><a name="[a67]"></a>VDRPower_Init</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, vdr_power.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = VDRPower_Init &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPower_TimeTask
</UL>

<P><STRONG><a name="[a69]"></a>VDRProtocol_ParseCmdE4H</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = VDRProtocol_ParseCmdE4H &rArr; VDRDocimasy_EnterE4H &rArr; VDRPulse_Init &rArr; VDRPulse_InitExti10 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE4H
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a6a]"></a>VDRProtocol_ParseCmdE3H</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = VDRProtocol_ParseCmdE3H &rArr; VDRDocimasy_EnterE3H &rArr; VDRDocimasy_InitTim4 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE3H
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a6b]"></a>VDRProtocol_ParseCmdE2H</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = VDRProtocol_ParseCmdE2H &rArr; VDRDocimasy_EnterE2H &rArr; VDRDocimasy_InitExti10 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE2H
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a6c]"></a>VDRProtocol_ParseCmdE1H</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = VDRProtocol_ParseCmdE1H &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_GetCurSpeed
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_GetTotalMile
<LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE1H
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a6d]"></a>VDRProtocol_ParseCmdE0H</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = VDRProtocol_ParseCmdE0H &rArr; VDRDocimasy_EnterE0H &rArr; VDRDocimasy_InitTim4 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRDocimasy_EnterE0H
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a6e]"></a>VDRProtocol_ParseCmdD0H</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1688 + Unknown Stack Size
<LI>Call Chain = VDRProtocol_ParseCmdD0H &rArr; RadioProtocol_WritePram &rArr; E2ParamApp_DisposeWriteParam &rArr; DriverInfo_DisposeRadioProtocol &rArr; DriverInfoAdd &rArr; Public_PlayTTSVoiceStr &rArr; PlayMulTTSVoiceStr &rArr; TTSApp_PlayMulTTSVoiceStrbase &rArr; PlayMulTTSVoiceBuff &rArr; PlayMulTTSVoiceBuffInternal &rArr; Modem_Api_Tts_Play &rArr; Modem_State_Tts_Dt &rArr; Modem_Printf &rArr; vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_ReadPram
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioProtocol_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a6f]"></a>VDRProtocol_ParseCmdC4H</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = VDRProtocol_ParseCmdC4H &rArr; GpsMile_SetPram &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsMile_SetPram
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBCDToLong
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a70]"></a>VDRProtocol_ParseCmdC3H</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = VDRProtocol_ParseCmdC3H &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_UpdateParameter
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a71]"></a>VDRProtocol_ParseCmdC2H</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = VDRProtocol_ParseCmdC2H &rArr; SetRtc &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtc
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a72]"></a>VDRProtocol_ParseCmd84H</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = VDRProtocol_ParseCmd84H &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a73]"></a>VDRProtocol_ParseCmd83H</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = VDRProtocol_ParseCmd83H &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a74]"></a>VDRProtocol_ParseCmd82H</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = VDRProtocol_ParseCmd82H &rArr; EepromPram_WritePram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_WritePram
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a75]"></a>VDRProtocol_ParseCmd15H</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = VDRProtocol_ParseCmd15H &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a76]"></a>VDRProtocol_ParseCmd14H</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = VDRProtocol_ParseCmd14H &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a77]"></a>VDRProtocol_ParseCmd13H</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = VDRProtocol_ParseCmd13H &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a78]"></a>VDRProtocol_ParseCmd12H</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = VDRProtocol_ParseCmd12H &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a79]"></a>VDRProtocol_ParseCmd11H</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = VDRProtocol_ParseCmd11H &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDROvertime_GetUnsaveLog
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a7a]"></a>VDRProtocol_ParseCmd10H</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = VDRProtocol_ParseCmd10H &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a7b]"></a>VDRProtocol_ParseCmd09H</STRONG> (Thumb, 202 bytes, Stack size 88 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = VDRProtocol_ParseCmd09H &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConverseGmtime
<LI><a href="#[a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_GetCurHourPosition
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a7c]"></a>VDRProtocol_ParseCmd08H</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, vdr_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = VDRProtocol_ParseCmd08H &rArr; VDRData_Read &rArr; VDRData_CheckReadParameter &rArr; ConverseGmtime &rArr; YearDay
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToShort
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertBCDToTime
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd
</UL>

<P><STRONG><a name="[a86]"></a>VDRPulse_InitExti10</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = VDRPulse_InitExti10 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_Init
</UL>

<P><STRONG><a name="[a87]"></a>VDRPulse_InitTim3</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, vdr_pulse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = VDRPulse_InitTim3 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PrescalerConfig
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPulse_Init
</UL>

<P><STRONG><a name="[a8a]"></a>VDRSpeed_SaveMinuteSpeed</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, vdr_speed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = VDRSpeed_SaveMinuteSpeed &rArr; FRAM_BufferWrite &rArr; FRAM_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
</UL>

<P><STRONG><a name="[a8d]"></a>VDRSpeed_Init</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, vdr_speed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = VDRSpeed_Init &rArr; VDRSpeed_UpdateParameter &rArr; VDRPulse_UpdateParameter &rArr; EepromPram_ReadPram &rArr; E2prom_ReadByte &rArr; E2prom_ReadStatusRegister &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertBufferToLong
<LI><a href="#[a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_UpdateParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeed_TimeTask
</UL>

<P><STRONG><a name="[a8e]"></a>VDRSpeedStatus_Write</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, vdr_speedstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = VDRSpeedStatus_Write &rArr; VDRData_Write &rArr; sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferWrite
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPub_ConvertTimeToBCD
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
</UL>

<P><STRONG><a name="[a8f]"></a>VDRSpeedStatus_CheckEnableFlag</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, vdr_speedstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = VDRSpeedStatus_CheckEnableFlag &rArr; VDRData_ReadListTime &rArr; sFLASH_ReadBuffer &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gmtime
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCurTime
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_CheckTimeStruct
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadListTime
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalList
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
</UL>

<P><STRONG><a name="[a90]"></a>VDRSpeedStatus_Init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, vdr_speedstatus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = VDRSpeedStatus_Init &rArr; FRAM_BufferRead &rArr; sFLASH_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAM_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRSpeedStatus_TimeTask
</UL>

<P><STRONG><a name="[a92]"></a>VDRUsart_TxIsr</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, vdr_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VDRUsart_TxIsr &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Isr
</UL>

<P><STRONG><a name="[a93]"></a>VDRUsart_RxIsr</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, vdr_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VDRUsart_RxIsr
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsart_Isr
</UL>

<P><STRONG><a name="[a95]"></a>Vdr_Usb_XorVer</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, vdr_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Vdr_Usb_XorVer
</UL>
<BR>[Called By]<UL><LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveVerifyCode
</UL>

<P><STRONG><a name="[a94]"></a>VDRUsb_SaveVerifyCode</STRONG> (Thumb, 176 bytes, Stack size 296 bytes, vdr_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = VDRUsb_SaveVerifyCode &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[a95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vdr_Usb_XorVer
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
</UL>

<P><STRONG><a name="[a96]"></a>VDRUsb_SavePacketData</STRONG> (Thumb, 352 bytes, Stack size 56 bytes, vdr_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = VDRUsb_SavePacketData &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertLongToBuffer
<LI><a href="#[a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRPosition_GetCurHourPosition
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadList
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadTotalList
<LI><a href="#[a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_ReadWriteEnableFlag
<LI><a href="#[a35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRData_SetWriteEnableFlag
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
</UL>

<P><STRONG><a name="[a97]"></a>VDRUsb_ReadNoPacketData</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, vdr_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = VDRUsb_ReadNoPacketData &rArr; VDRProtocol_ParseCmd03H &rArr; Public_ConvertLongToBCD &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd00H
<LI><a href="#[a83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd01H
<LI><a href="#[a82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd02H
<LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd03H
<LI><a href="#[a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd04H
<LI><a href="#[a7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd05H
<LI><a href="#[a7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd06H
<LI><a href="#[a7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRProtocol_ParseCmd07H
</UL>
<BR>[Called By]<UL><LI><a href="#[a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_SaveNoPacketData
</UL>

<P><STRONG><a name="[a98]"></a>VDRUsb_SaveNoPacketData</STRONG> (Thumb, 110 bytes, Stack size 216 bytes, vdr_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 548 + Unknown Stack Size
<LI>Call Chain = VDRUsb_SaveNoPacketData &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_ReadNoPacketData
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
</UL>

<P><STRONG><a name="[a99]"></a>VDRUsb_SaveBlockNum</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, vdr_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = VDRUsb_SaveBlockNum &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Called By]<UL><LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
</UL>

<P><STRONG><a name="[a9a]"></a>Vdr_Usb_UniNm</STRONG> (Thumb, 372 bytes, Stack size 56 bytes, vdr_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = Vdr_Usb_UniNm &rArr; Public_ConvertNowTimeToBCDEx &rArr; Public_ConvertTimeToBCDEx &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromPram_ReadPram
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Public_ConvertNowTimeToBCDEx
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDRUsb_CreatVdrFile
</UL>

<P><STRONG><a name="[a9f]"></a>read_font_memory</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, font.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dot_image
</UL>

<P><STRONG><a name="[aa2]"></a>printer_init</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = printer_init &rArr; b_queue_init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[aa3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_print_param
<LI><a href="#[a9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_queue_init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_init
</UL>

<P><STRONG><a name="[aa4]"></a>__print</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __print &rArr; in_b_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_status
<LI><a href="#[aa6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_b_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmt_print
</UL>

<P><STRONG><a name="[aa7]"></a>start_print</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = start_print &rArr; start_ptr_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ptr_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[aa9]"></a>stop_print</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = stop_print &rArr; close_ptr_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[aaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_ptr_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_pwr_ctrl
<LI><a href="#[abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heater_detect_tick
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[aab]"></a>ptr_ctrl</STRONG> (Thumb, 490 bytes, Stack size 24 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ptr_ctrl &rArr; ptr_heat &rArr; strobe_time &rArr; computer_heat_time
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[aad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_T_datect
<LI><a href="#[aaf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_step_finished
<LI><a href="#[aae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_step
<LI><a href="#[ab3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_heat_finished
<LI><a href="#[ab2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_heat
<LI><a href="#[aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_T_detect_finished
<LI><a href="#[ab1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_temperature
<LI><a href="#[ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ptr_ctrl
</UL>

<P><STRONG><a name="[ab8]"></a>push_image</STRONG> (Thumb, 254 bytes, Stack size 20 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = push_image
</UL>
<BR>[Called By]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl
</UL>

<P><STRONG><a name="[ab4]"></a>print_ctrl</STRONG> (Thumb, 438 bytes, Stack size 40 bytes, printer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = print_ctrl &rArr; get_dot_image_Flash &rArr; zoom_hz &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_io_init
<LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_status
<LI><a href="#[ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_image
<LI><a href="#[aa9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_print
<LI><a href="#[aa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_print
<LI><a href="#[aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dot_image_Flash
<LI><a href="#[ab5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_queue_enmty
<LI><a href="#[ab9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_b_queue_fst_byte
<LI><a href="#[ab7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_b_queue
<LI><a href="#[abb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock_b_queue
<LI><a href="#[ab6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_b_queue
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ctrl_task
</UL>

<P><STRONG><a name="[ac6]"></a>dectostr</STRONG> (Thumb, 172 bytes, Stack size 36 bytes, printer_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = dectostr
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
<LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conv_time_str
</UL>

<P><STRONG><a name="[ac5]"></a>conv_time_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, printer_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = conv_time_str &rArr; dectostr
</UL>
<BR>[Calls]<UL><LI><a href="#[ac6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dectostr
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
</UL>

<P><STRONG><a name="[ac7]"></a>bcd_to_dec</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, printer_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printer_task
</UL>

<P><STRONG><a name="[acd]"></a>_delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[acc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_port_send_byte
<LI><a href="#[ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_ptr
</UL>

<P><STRONG><a name="[acc]"></a>ptr_port_send_byte</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ptr_port_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[acd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_ptr
</UL>

<P><STRONG><a name="[acf]"></a>_1_bits_of</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _1_bits_of
</UL>
<BR>[Called By]<UL><LI><a href="#[ace]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strobe_time
</UL>

<P><STRONG><a name="[ace]"></a>strobe_time</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, ptr_stepmotor_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = strobe_time &rArr; computer_heat_time
</UL>
<BR>[Calls]<UL><LI><a href="#[ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computer_heat_time
<LI><a href="#[acf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_1_bits_of
</UL>
<BR>[Called By]<UL><LI><a href="#[ab2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_heat
</UL>

<P><STRONG><a name="[ad2]"></a>computer_temperature</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, ptr_temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = computer_temperature
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ad_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[ac2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_detect_tick
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_too_hot
</UL>

<P><STRONG><a name="[b41]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[b33]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[b32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[b51]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[b46]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[b45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[af8]"></a>_fp_digits</STRONG> (Thumb, 428 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[afb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[afa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[af9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[afd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[afe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[122]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[b04]"></a>_local_sscanf</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[b06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[b0d]"></a>_fp_value</STRONG> (Thumb, 508 bytes, Stack size 88 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[ae9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[b0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[af9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
